/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 12:43:46 GMT 2021
 */

package org.apache.commons.math3.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Complex_ESTest extends Complex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = new Complex((-20.0));
      Complex complex2 = complex1.tanh();
      complex2.I.divide(complex1);
      complex1.cos();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Complex complex0 = new Complex((-21.84054186866644));
      complex0.I.tanh();
      Complex complex1 = complex0.sqrt1z();
      complex0.pow(complex1);
      Complex complex2 = new Complex((-21.84054186866644), Double.POSITIVE_INFINITY);
      complex2.multiply(2016.2353649742);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      complex0.nthRoot(3048);
      Complex complex1 = complex0.log();
      complex1.sqrt();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1.8889614379831606E233));
      Complex complex1 = complex0.tanh();
      complex0.hashCode();
      Complex complex2 = complex0.sqrt1z();
      complex0.pow(complex2);
      complex1.pow(complex0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1.0633845571643594E20), (-1.0633845571643594E20));
      Complex complex1 = complex0.acos();
      Complex complex2 = complex1.INF.multiply(complex0);
      complex0.I.divide((-21.84054186866644));
      Complex complex3 = complex0.log();
      complex3.I.divide(complex0);
      Complex complex4 = complex0.reciprocal();
      complex2.ONE.multiply((-2317));
      complex4.I.divide(complex0);
      Complex complex5 = complex3.cos();
      Complex complex6 = complex5.subtract(complex1);
      Complex complex7 = complex2.cosh();
      complex6.reciprocal();
      Complex complex8 = new Complex((-21.84054186866644), (-1.0633845571643594E20));
      complex7.subtract(complex8);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-21.84054186866644));
      complex0.multiply(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-897.6593109583397), 20.0);
      complex0.tan();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Complex complex0 = new Complex(873.0, 1.7809526920318604);
      Complex complex1 = complex0.ONE.exp();
      complex1.ONE.multiply(complex0);
      Complex complex2 = complex0.exp();
      complex1.add(20.0);
      complex2.exp();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Complex complex0 = Complex.I;
      complex0.nthRoot(2320);
      Complex complex1 = complex0.conjugate();
      complex1.atan();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-21.84054186866644), Double.POSITIVE_INFINITY);
      Complex complex1 = complex0.acos();
      complex0.pow(complex1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Complex complex0 = Complex.valueOf(2528.8387643);
      Complex complex1 = Complex.INF;
      Complex complex2 = complex1.I.cosh();
      complex1.I.multiply(Double.NaN);
      complex0.add(complex1);
      complex2.atan();
      complex0.add(2528.8387643);
      complex1.I.createComplex(2528.8387643, 435.63149941);
      complex0.cos();
      complex1.conjugate();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.tanh();
      Complex complex2 = complex1.atan();
      Complex complex3 = new Complex(20.0, 624.95);
      Complex complex4 = complex3.tanh();
      complex2.multiply(complex4);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-222.5692737), (-1611.9));
      Complex complex1 = Complex.valueOf((-222.5692737), (-933.82));
      Complex complex2 = complex1.INF.subtract(complex0);
      complex2.NaN.exp();
      Complex complex3 = complex0.sin();
      Complex complex4 = complex3.sin();
      Complex complex5 = complex0.sin();
      Complex complex6 = complex5.NaN.acos();
      Complex complex7 = complex5.ONE.pow(complex1);
      Complex complex8 = complex7.sqrt();
      complex8.ONE.divide(complex3);
      Complex complex9 = complex0.sqrt();
      Complex complex10 = complex9.sqrt1z();
      Complex complex11 = complex0.reciprocal();
      Complex complex12 = complex0.ZERO.sinh();
      int int0 = 2275;
      complex3.nthRoot(2275);
      complex9.atan();
      complex10.toString();
      complex12.subtract(complex6);
      Complex complex13 = complex9.reciprocal();
      complex9.NaN.add(complex4);
      complex13.NaN.subtract(2.0);
      Complex complex14 = complex11.divide(complex10);
      try { 
        complex14.INF.pow((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Complex complex0 = new Complex((-488.86281));
      Complex complex1 = Complex.valueOf((-488.86281), Double.POSITIVE_INFINITY);
      Complex complex2 = complex0.pow(complex1);
      Complex complex3 = complex2.NaN.pow(717.154);
      complex3.INF.tanh();
      Complex complex4 = Complex.INF;
      complex1.INF.toString();
      Complex complex5 = complex0.divide(complex4);
      Complex complex6 = complex5.ZERO.conjugate();
      complex5.INF.reciprocal();
      complex4.INF.hashCode();
      Complex complex7 = complex1.NaN.add((-488.86281));
      Complex complex8 = complex1.add(complex0);
      Complex.valueOf(Double.NaN);
      complex8.ONE.tan();
      complex8.INF.hashCode();
      complex4.createComplex(Double.POSITIVE_INFINITY, 2152.283488234197);
      complex6.tanh();
      complex7.abs();
      Complex.valueOf((-488.86281));
      complex6.subtract(complex4);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-9.53461441895561));
      complex0.acos();
      Complex complex1 = complex0.tan();
      Complex complex2 = complex1.cos();
      Complex complex3 = complex1.add((-2418.8706758));
      complex2.asin();
      Complex complex4 = complex3.asin();
      Complex complex5 = new Complex((-9.53461441895561));
      complex5.nthRoot(43);
      complex4.cosh();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.add((-1.0292817180691822E123));
      complex0.getField();
      Complex complex2 = complex1.asin();
      Complex complex3 = complex1.subtract(0.0014367845752190078);
      Complex complex4 = Complex.valueOf((-0.21850648837916942));
      complex4.conjugate();
      complex0.negate();
      Complex complex5 = complex0.sqrt1z();
      Complex complex6 = complex2.add((-0.21850648837916942));
      complex4.pow(complex3);
      Complex complex7 = complex6.tan();
      complex7.NaN.getField();
      complex5.log();
      complex0.getArgument();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0);
      complex0.abs();
      Complex complex1 = complex0.add(1.0);
      Complex complex2 = Complex.valueOf(0.0, 622.7550299913213);
      Complex complex3 = complex0.atan();
      complex3.acos();
      Complex complex4 = complex2.createComplex(Double.POSITIVE_INFINITY, 0.0);
      complex1.pow(complex4);
      complex4.createComplex(1380.0, 622.7550299913213);
      complex4.cosh();
      complex0.pow(complex1);
      Complex complex5 = Complex.NaN;
      complex5.asin();
      complex2.reciprocal();
      complex5.createComplex(2.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Complex complex0 = Complex.valueOf(130.1137558769899, 130.1137558769899);
      complex0.exp();
      Complex complex1 = Complex.ONE;
      Complex complex2 = new Complex(130.1137558769899, 130.1137558769899);
      complex1.multiply((-471.9743936335081));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      complex0.ZERO.getField();
      try { 
        complex0.add((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, (-1.5397346474833358));
      complex0.exp();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.9323640057857279);
      Complex complex1 = Complex.ONE;
      Complex complex2 = complex1.I.pow(6.44741641521183E-102);
      Complex complex3 = complex0.multiply(complex1);
      Complex complex4 = complex3.INF.acos();
      Complex complex5 = complex0.atan();
      complex5.readResolve();
      complex5.ONE.sinh();
      Complex complex6 = complex0.I.add(1.9323640057857279);
      complex3.INF.pow(Double.NaN);
      complex6.I.cosh();
      Complex complex7 = complex4.atan();
      complex4.ZERO.toString();
      complex7.INF.getField();
      complex1.readResolve();
      complex2.readResolve();
      Complex complex8 = complex6.negate();
      complex8.I.getField();
      Complex complex9 = complex1.reciprocal();
      complex4.pow(complex9);
      complex2.cos();
      complex4.cos();
      complex1.add(6.44741641521183E-102);
      complex2.asin();
      Complex complex10 = Complex.NaN;
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.add(327.860411);
      Complex complex2 = complex1.ONE.negate();
      Complex complex3 = complex2.multiply(complex1);
      complex3.nthRoot(1);
      complex2.ZERO.add(0.3537409855846349);
      complex1.getReal();
      Complex complex4 = complex0.ONE.divide(complex2);
      complex4.INF.log();
      Complex complex5 = complex2.add(complex1);
      Complex complex6 = complex5.divide(complex2);
      complex5.I.conjugate();
      Complex complex7 = complex0.tan();
      Complex complex8 = Complex.NaN;
      complex7.I.multiply(complex8);
      Complex complex9 = complex6.exp();
      Complex complex10 = complex9.I.cosh();
      complex10.ONE.subtract(complex6);
      Complex complex11 = complex6.exp();
      complex5.INF.divide(1637.91);
      complex11.readResolve();
      complex2.I.acos();
      complex6.abs();
      complex6.getReal();
      complex1.getField();
      try { 
        complex6.nthRoot((-1782));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -1,782
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.add((-348.0));
      complex0.getField();
      Complex complex2 = complex1.asin();
      Complex complex3 = complex1.subtract((-0.21850648837916942));
      Complex.valueOf((-348.0));
      Complex complex4 = complex0.conjugate();
      Complex complex5 = complex4.negate();
      Complex complex6 = complex3.sqrt1z();
      complex0.add((double) 4);
      complex5.multiply(complex1);
      complex2.readResolve();
      Complex complex7 = Complex.ZERO;
      complex7.equals(complex6);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.9323640057857279);
      Complex complex1 = Complex.ONE;
      Complex complex2 = complex0.pow(1.9323640057857279);
      Complex complex3 = complex1.multiply(complex2);
      complex3.acos();
      Complex complex4 = complex0.atan();
      Complex complex5 = Complex.ZERO;
      complex5.readResolve();
      Complex complex6 = Complex.INF;
      Complex complex7 = complex6.sinh();
      Complex complex8 = complex6.add(1.9323640057857279);
      Complex complex9 = complex4.cosh();
      Complex complex10 = complex6.atan();
      complex4.toString();
      complex3.getField();
      complex7.readResolve();
      complex8.readResolve();
      Complex complex11 = complex10.negate();
      complex11.getField();
      Complex complex12 = complex9.reciprocal();
      Complex complex13 = complex2.pow(complex8);
      Complex complex14 = complex13.cos();
      Complex complex15 = new Complex(2882.162343803424, (-832.4769000000001));
      complex15.cos();
      complex14.add(Double.POSITIVE_INFINITY);
      complex12.asin();
      complex9.asin();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Complex complex0 = new Complex((-2243.56), (-2243.56));
      Complex complex1 = complex0.add((-2243.56));
      Complex complex2 = complex1.cosh();
      Complex complex3 = complex2.atan();
      complex0.toString();
      complex1.getField();
      complex0.readResolve();
      complex3.readResolve();
      Complex complex4 = Complex.INF;
      Complex complex5 = complex4.negate();
      complex0.getField();
      Complex complex6 = complex2.reciprocal();
      complex0.INF.abs();
      complex4.pow(complex5);
      Complex complex7 = complex5.cos();
      Complex complex8 = complex6.cos();
      complex7.add((-2243.56));
      complex6.asin();
      complex8.asin();
      complex8.cosh();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Complex complex0 = new Complex(1.9323640057857279, (-3870.84));
      Complex complex1 = complex0.add(0.0014367845752190078);
      complex1.getField();
      Complex complex2 = complex1.asin();
      Complex complex3 = complex1.subtract(0.0014367845752190078);
      Complex complex4 = Complex.valueOf(1.9323640057857279);
      Complex complex5 = complex3.conjugate();
      complex1.negate();
      complex0.sqrt1z();
      complex1.add((-0.21850648837916942));
      complex4.pow(complex5);
      complex2.tan();
      complex0.log();
      complex2.getArgument();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.add((-348.0));
      complex0.getField();
      Complex complex2 = complex1.asin();
      complex1.subtract((-1.4643701717775));
      Complex complex3 = complex0.multiply(24);
      Complex complex4 = new Complex((-348.0));
      complex4.negate();
      Complex complex5 = Complex.ZERO;
      Complex complex6 = Complex.NaN;
      complex2.multiply(complex1);
      complex3.readResolve();
      Complex complex7 = Complex.ONE;
      Object object0 = new Object();
      complex7.equals(object0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.9323640057857279);
      Complex complex1 = complex0.acos();
      Complex complex2 = complex0.tanh();
      complex1.add(complex0);
      Complex complex3 = Complex.valueOf(0.0, Double.NaN);
      complex2.multiply(complex3);
      Complex complex4 = Complex.NaN;
      Complex complex5 = new Complex(Double.NaN, 1.9323640057857279);
      complex5.reciprocal();
      Complex complex6 = Complex.INF;
      Complex complex7 = new Complex(1.9323640057857279, Double.NaN);
      complex7.asin();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Complex complex0 = Complex.valueOf(52.04052738009955, 52.04052738009955);
      Complex complex1 = complex0.pow(1.0);
      Complex complex2 = complex0.multiply(complex1);
      Complex complex3 = complex2.acos();
      Complex complex4 = complex2.atan();
      complex1.readResolve();
      complex3.INF.subtract((-4.0640692434639215E-8));
      Complex complex5 = complex4.sinh();
      complex4.log();
      complex4.add(20.0);
      complex2.cosh();
      complex4.atan();
      complex2.getField();
      complex5.readResolve();
      complex2.readResolve();
      Complex complex6 = complex0.negate();
      complex5.getField();
      complex0.reciprocal();
      Complex complex7 = Complex.INF;
      Complex complex8 = complex3.pow(complex7);
      Complex complex9 = complex2.cos();
      Complex complex10 = complex6.cos();
      complex9.add(1216.40095);
      complex10.asin();
      complex8.acos();
      complex8.sqrt1z();
      Complex complex11 = Complex.ZERO;
      complex4.multiply(5.945256705384597E-148);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Complex complex0 = new Complex((-2243.56), (-2243.56));
      Complex complex1 = complex0.sqrt();
      complex0.sqrt1z();
      complex1.getField();
      Complex.valueOf((-2.529950530235105E-8));
      complex1.reciprocal();
      complex1.abs();
      Complex complex2 = Complex.INF;
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Complex complex0 = new Complex(1030.661918795);
      Complex complex1 = new Complex(1030.661918795);
      Complex complex2 = complex0.atan();
      complex0.getField();
      Object object0 = new Object();
      complex0.readResolve();
      Complex complex3 = complex1.negate();
      complex2.getField();
      complex2.reciprocal();
      Complex complex4 = complex3.pow(complex0);
      Complex complex5 = complex4.cos();
      complex5.cos();
      complex4.add(1030.661918795);
      Complex complex6 = complex2.asin();
      Complex complex7 = complex6.acos();
      complex5.sqrt1z();
      Complex complex8 = Complex.ZERO;
      Complex complex9 = new Complex(1.0);
      Complex complex10 = complex9.multiply(882.68);
      complex10.sin();
      complex7.multiply(complex8);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.9323640057857279);
      Complex complex1 = complex0.acos();
      Complex complex2 = complex0.tanh();
      complex1.add(complex0);
      Complex complex3 = Complex.valueOf(0.0, Double.NaN);
      complex2.multiply(complex3);
      Complex complex4 = Complex.NaN;
      complex3.reciprocal();
      Complex complex5 = Complex.INF;
      complex4.asin();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 0.0);
      Complex complex1 = complex0.tan();
      Complex complex2 = complex0.tanh();
      Complex complex3 = complex0.add(0.0);
      Complex complex4 = complex0.pow(complex1);
      complex4.divide(8.951285029786536E-9);
      complex3.atan();
      complex1.readResolve();
      complex4.multiply(0.0);
      Complex complex5 = Complex.I;
      complex5.equals(complex2);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = new Complex(0.04207121580839157, Double.POSITIVE_INFINITY);
      complex1.multiply((-1760487780));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      double double0 = 0.0;
      Complex complex0 = Complex.valueOf(0.0, 0.0);
      Complex complex1 = complex0.tan();
      Complex complex2 = Complex.ONE;
      Complex complex3 = complex2.tanh();
      complex3.add(0.0);
      try { 
        complex1.pow((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.add((-348.0));
      complex0.getField();
      complex1.asin();
      Complex complex2 = complex1.subtract((-1.4643701717775));
      complex0.multiply(4);
      Complex complex3 = complex0.conjugate();
      Complex complex4 = complex3.negate();
      complex2.sqrt1z();
      double double0 = 2595.9868365;
      Complex complex5 = new Complex((-348.0), 2595.9868365);
      complex5.readResolve();
      Complex complex6 = Complex.ZERO;
      complex6.add(257.31);
      Complex complex7 = Complex.ONE;
      complex1.readResolve();
      try { 
        complex4.subtract((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.log();
      Complex complex2 = complex0.ONE.sqrt();
      Complex complex3 = complex0.sinh();
      Complex complex4 = complex3.subtract(complex1);
      complex3.ZERO.toString();
      Complex complex5 = new Complex(719.6698533);
      complex2.getImaginary();
      Complex complex6 = Complex.INF;
      Complex complex7 = complex4.add(complex3);
      complex2.divide((-340.51196703347));
      complex7.getField();
      Complex complex8 = complex4.pow((-4826.16024154));
      complex0.reciprocal();
      Complex complex9 = Complex.INF;
      complex8.multiply((double) 0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Complex complex0 = Complex.valueOf(2.54044116976977);
      Complex complex1 = complex0.INF.asin();
      Complex complex2 = complex1.ONE.tan();
      Complex complex3 = complex1.ONE.createComplex(2.54044116976977, 1.1102230246251565E-16);
      complex3.cos();
      complex1.ONE.readResolve();
      Complex complex4 = complex2.NaN.asin();
      Complex complex5 = complex0.log();
      Complex.valueOf(1.9658551724508715E-9, 2.54044116976977);
      complex5.hashCode();
      complex1.getReal();
      complex2.exp();
      Complex complex6 = complex2.multiply(2.54044116976977);
      Complex complex7 = complex3.pow(complex4);
      complex7.subtract(complex6);
      complex7.abs();
      complex6.subtract(complex3);
      complex5.pow(1.1102230246251565E-16);
      Complex complex8 = complex2.sinh();
      complex1.sqrt1z();
      complex2.ONE.createComplex(2.479862689971924, (-678.7811496154322));
      complex7.log();
      complex8.sin();
      complex7.sqrt();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Complex complex0 = new Complex(0.6022552825213241, Double.NaN);
      try { 
        complex0.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.9323640057857279);
      Complex complex1 = Complex.ONE;
      Complex complex2 = complex1.I.pow(6.44741641521183E-102);
      Complex complex3 = complex0.multiply(complex1);
      Complex complex4 = complex3.INF.acos();
      Complex complex5 = complex0.atan();
      complex5.readResolve();
      Complex complex6 = complex5.ONE.sinh();
      Complex complex7 = complex1.log();
      Complex complex8 = complex7.I.add(1.9323640057857279);
      complex8.I.cosh();
      Complex complex9 = complex4.atan();
      complex9.INF.getField();
      complex7.readResolve();
      complex2.readResolve();
      Complex complex10 = complex8.negate();
      complex10.I.getField();
      Complex complex11 = complex1.reciprocal();
      Complex complex12 = complex4.pow(complex11);
      complex2.cos();
      complex4.cos();
      complex1.add(6.44741641521183E-102);
      complex2.asin();
      complex7.acos();
      Complex complex13 = complex12.negate();
      complex13.I.sqrt1z();
      complex6.getField();
      complex9.readResolve();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-0.9171523356672743));
      Complex complex1 = Complex.ONE;
      complex1.ONE.getField();
      Complex complex2 = complex1.cos();
      Complex complex3 = complex2.NaN.multiply((-0.9171523356672743));
      Complex complex4 = complex0.multiply(complex1);
      complex3.NaN.pow(complex0);
      Complex complex5 = Complex.valueOf((-0.9171523356672743), 1504.188709);
      complex1.ZERO.add(complex4);
      Complex complex6 = complex1.I.exp();
      Complex complex7 = complex6.ZERO.sqrt1z();
      Complex complex8 = complex7.NaN.sin();
      complex4.INF.multiply(2405.0);
      Complex complex9 = complex0.log();
      complex1.ZERO.getField();
      Complex complex10 = complex9.sqrt1z();
      complex10.createComplex(1504.188709, 2405.0);
      complex10.ZERO.toString();
      Complex complex11 = complex4.log();
      Complex complex12 = complex11.atan();
      complex12.INF.asin();
      complex0.nthRoot(230);
      complex1.pow(complex12);
      complex1.ONE.readResolve();
      complex3.equals(complex5);
      Complex.valueOf((-2407.38348), 1504.188709);
      complex8.acos();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.log();
      complex0.ONE.sqrt();
      Complex complex2 = complex0.sinh();
      Complex complex3 = complex2.subtract(complex1);
      complex2.ZERO.toString();
      complex3.I.add(656.856327781);
      Complex complex4 = complex3.tan();
      Complex complex5 = complex4.NaN.exp();
      Complex complex6 = Complex.valueOf(656.856327781, 656.856327781);
      complex3.getField();
      complex2.cos();
      complex5.pow((-1833.9879));
      complex6.add((-1833.9879));
      Complex complex7 = complex3.pow(complex4);
      complex2.tan();
      complex7.multiply(3371);
      Complex complex8 = Complex.I;
      complex6.divide(complex8);
      complex2.log();
      complex4.reciprocal();
      complex5.nthRoot(3371);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.log();
      Complex complex2 = complex0.ONE.sqrt();
      Complex complex3 = complex0.sinh();
      Complex complex4 = complex3.subtract(complex1);
      complex3.ZERO.toString();
      Complex complex5 = complex4.I.add(656.856327781);
      complex3.abs();
      Complex complex6 = complex4.divide(complex5);
      complex3.hashCode();
      complex2.nthRoot(1);
      Complex complex7 = new Complex(656.856327781);
      complex7.toString();
      complex5.INF.sinh();
      complex4.subtract(complex6);
      complex0.atan();
      complex7.acos();
      complex6.subtract(656.856327781);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.log();
      complex0.ONE.sqrt();
      Complex complex2 = complex0.sinh();
      Complex complex3 = complex2.subtract(complex1);
      complex2.ZERO.toString();
      Complex complex4 = complex3.I.add(656.856327781);
      Complex complex5 = complex3.tan();
      complex5.NaN.exp();
      Complex.valueOf(656.856327781, 656.856327781);
      complex3.getField();
      Complex complex6 = complex2.cos();
      Complex complex7 = complex6.ZERO.add((-1973.30464));
      complex0.ZERO.subtract(complex6);
      complex6.I.reciprocal();
      Complex.valueOf(98.5107766538154, 98.5107766538154);
      complex2.toString();
      complex7.exp();
      Complex.valueOf(6.283185307179586, (-1252.343102));
      complex0.multiply(0.0028940696746903006);
      complex4.sin();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.ONE.atan();
      complex1.ZERO.multiply(611);
      complex0.abs();
      complex0.divide(complex1);
      complex0.divide(2005.717575009906);
      Complex complex2 = complex0.atan();
      Complex complex3 = new Complex(1.3708481788635254);
      complex3.readResolve();
      complex1.multiply(1753.967385);
      Complex complex4 = Complex.NaN;
      complex2.equals(complex4);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = new Complex(3360.0);
      Complex complex2 = complex0.NaN.createComplex(0, 3360.0);
      complex0.I.pow(complex2);
      Complex complex3 = complex2.ZERO.multiply(1897);
      complex3.NaN.abs();
      Complex complex4 = complex0.divide(0.0);
      Complex complex5 = complex4.I.exp();
      complex5.INF.getArgument();
      complex5.INF.conjugate();
      complex3.I.multiply(120408.0);
      Complex complex6 = Complex.valueOf(3360.0, (-1557.017544878162));
      complex5.ZERO.pow(108.4256215592264);
      complex2.divide(20.0);
      complex6.I.multiply(21);
      complex5.I.multiply(complex3);
      Complex complex7 = Complex.valueOf(20.0, 0.0);
      complex7.INF.nthRoot(1897);
      complex1.hashCode();
      complex0.getImaginary();
      complex4.toString();
      complex4.I.divide(complex5);
      complex4.nthRoot(1456);
      complex7.getArgument();
      complex6.hashCode();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.9350945949554443);
      Complex complex1 = complex0.INF.sqrt1z();
      complex1.NaN.createComplex(1.9350945949554443, 1.9350945949554443);
      Complex complex2 = complex0.ZERO.atan();
      complex2.ZERO.pow(complex0);
      complex2.NaN.acos();
      Complex complex3 = complex2.ONE.sqrt1z();
      complex2.NaN.hashCode();
      complex0.nthRoot(1003478);
      complex0.toString();
      complex0.cosh();
      complex0.log();
      double double0 = (-191.15);
      complex3.createComplex(double0, double0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.add((-348.0));
      complex1.getField();
      Complex complex2 = complex1.asin();
      complex2.ZERO.subtract(0.0);
      complex1.ONE.multiply(3360);
      Complex complex3 = complex0.conjugate();
      complex3.ZERO.negate();
      Complex complex4 = complex1.pow(complex3);
      Complex complex5 = complex2.divide((double) 3360);
      complex5.atan();
      complex3.readResolve();
      complex3.multiply((double) 3360);
      complex4.equals(complex2);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      Complex complex1 = Complex.ONE;
      Complex complex2 = complex0.tanh();
      Complex complex3 = complex2.pow((-4100.5389082859));
      Complex complex4 = complex0.add(4.363437558318513E-8);
      Complex complex5 = Complex.ZERO;
      complex0.pow(complex5);
      Complex complex6 = Complex.I;
      Complex complex7 = complex6.tan();
      Complex complex8 = complex5.multiply((-3517));
      Complex complex9 = complex2.divide(complex5);
      Complex complex10 = complex5.log();
      Complex complex11 = Complex.NaN;
      complex8.asin();
      Complex complex12 = complex3.add(complex7);
      complex9.readResolve();
      complex3.pow(2619.561745);
      complex12.abs();
      complex4.isInfinite();
      complex7.multiply(1524);
      complex10.subtract(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.add((-348.0));
      complex0.getField();
      Complex complex2 = complex1.asin();
      Complex complex3 = complex1.subtract((-1.4643701717775));
      complex0.multiply(4);
      Complex complex4 = complex0.conjugate();
      Complex complex5 = complex4.negate();
      Complex complex6 = complex3.sqrt1z();
      Complex complex7 = complex1.pow((-348.0));
      complex7.add((double) 4);
      complex5.pow(complex1);
      complex2.tan();
      complex7.multiply(4);
      Complex complex8 = complex7.divide(complex6);
      complex8.log();
      complex6.reciprocal();
      try { 
        complex5.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.log();
      Complex complex2 = complex0.ONE.sqrt();
      Complex complex3 = complex0.sinh();
      Complex complex4 = complex3.subtract(complex1);
      Complex complex5 = new Complex(Double.POSITIVE_INFINITY);
      complex4.getImaginary();
      Complex complex6 = Complex.INF;
      complex3.add(complex1);
      complex3.NaN.pow(complex4);
      complex2.multiply(37);
      Complex complex7 = complex1.tanh();
      Complex complex8 = complex5.divide((-1.5707963267948966));
      complex7.getField();
      Complex complex9 = complex0.pow(Double.POSITIVE_INFINITY);
      complex2.reciprocal();
      Complex complex10 = Complex.ONE;
      complex10.pow(complex9);
      complex10.getArgument();
      complex8.divide((-939.92642));
      Complex complex11 = Complex.ONE;
      complex11.cosh();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = complex0.sqrt1z();
      Complex complex2 = complex0.pow(1237.0405225182926);
      Complex complex3 = complex2.add((-0.9969173337331376));
      complex0.pow(complex3);
      Complex complex4 = complex1.tan();
      complex4.ZERO.tan();
      complex1.multiply(1);
      Complex complex5 = new Complex(1, 325.3);
      complex5.divide(complex2);
      complex1.log();
      Complex complex6 = Complex.NaN;
      Complex complex7 = Complex.ZERO;
      Complex complex8 = complex7.asin();
      Complex complex9 = Complex.ONE;
      Complex complex10 = complex9.add(complex6);
      Complex complex11 = Complex.INF;
      complex11.readResolve();
      Complex complex12 = Complex.I;
      complex12.pow((-1889.210611));
      complex10.abs();
      complex8.isInfinite();
      complex3.multiply(1);
      complex7.pow(1237.0405225182926);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.add((-348.0));
      complex0.getField();
      Complex complex2 = complex1.asin();
      Complex complex3 = complex1.subtract((-1.4643701717775));
      complex0.multiply(4);
      Complex complex4 = complex0.conjugate();
      Complex complex5 = complex4.negate();
      Complex complex6 = complex3.sqrt1z();
      Complex complex7 = complex1.pow(0.0);
      Complex complex8 = complex7.add((double) 4);
      complex5.pow(complex1);
      Complex complex9 = complex2.tan();
      complex7.multiply(4);
      Complex complex10 = complex7.divide(complex6);
      complex10.log();
      Complex complex11 = Complex.NaN;
      complex4.ONE.asin();
      complex11.add(complex2);
      complex8.readResolve();
      complex2.multiply((double) 3360);
      Complex complex12 = new Complex(0.0);
      complex12.equals(complex9);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1235.66);
      Complex complex1 = complex0.ZERO.tanh();
      Complex complex2 = Complex.INF;
      Complex complex3 = new Complex(1033.3760798385135);
      complex0.getImaginary();
      Complex complex4 = Complex.INF;
      Complex complex5 = complex4.add(complex0);
      Complex complex6 = complex4.multiply(0);
      complex4.tanh();
      complex6.divide(complex5);
      complex2.subtract(complex0);
      complex1.atan();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = new Complex(1030.661918795);
      complex1.ONE.divide(complex0);
      complex0.NaN.subtract(complex1);
      complex1.atan();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.2133188247680664);
      complex0.getReal();
      complex0.hashCode();
      Complex complex1 = complex0.multiply(1.2133188247680664);
      Complex complex2 = complex1.reciprocal();
      Complex complex3 = complex0.INF.divide(1.2133188247680664);
      Complex complex4 = complex1.ZERO.sinh();
      Complex complex5 = complex3.divide(Double.POSITIVE_INFINITY);
      Complex complex6 = complex0.multiply(complex5);
      Complex complex7 = Complex.ZERO;
      complex7.abs();
      Complex complex8 = complex4.pow(complex3);
      complex6.hashCode();
      Complex complex9 = Complex.valueOf((-939.765474), 1.2133188247680664);
      complex0.exp();
      complex6.getField();
      complex8.multiply((-2227));
      complex3.sqrt();
      complex6.acos();
      complex0.exp();
      complex9.sinh();
      complex4.divide((-2329.30632091));
      complex2.sin();
      complex2.log();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = Complex.INF;
      Complex complex2 = Complex.valueOf(772.15, 772.15);
      Complex complex3 = complex0.multiply(complex1);
      Complex complex4 = complex1.divide(Double.NaN);
      Complex complex5 = complex3.multiply(complex1);
      complex0.abs();
      Complex complex6 = complex5.pow(complex1);
      complex3.hashCode();
      Complex complex7 = Complex.valueOf((-767.3602799189), (-601.621798452));
      complex7.exp();
      complex2.getField();
      complex3.multiply(875);
      complex2.sqrt();
      Complex complex8 = complex6.acos();
      complex5.exp();
      Complex complex9 = Complex.NaN;
      complex9.sinh();
      complex4.divide(1889.658267);
      complex3.sin();
      complex8.log();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.add((-348.0));
      complex1.getField();
      Complex complex2 = complex1.asin();
      Complex complex3 = complex2.ZERO.subtract(0.0);
      complex1.ONE.multiply(3360);
      Complex complex4 = complex0.conjugate();
      complex4.ZERO.negate();
      Complex complex5 = complex3.sqrt1z();
      Complex complex6 = complex0.pow((double) 3360);
      Complex complex7 = complex6.NaN.add((double) 3360);
      Complex complex8 = complex5.NaN.pow(complex0);
      Complex complex9 = complex8.I.tan();
      complex6.ZERO.multiply(3360);
      Complex complex10 = complex4.divide(complex9);
      complex10.I.sqrt();
      complex10.INF.multiply((-1.0));
      complex5.log();
      Complex complex11 = complex4.add(complex1);
      complex7.readResolve();
      complex2.pow(0.0);
      complex11.abs();
      complex0.multiply(831);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = complex0.ZERO.sinh();
      Complex complex2 = complex0.I.conjugate();
      Complex complex3 = complex2.NaN.asin();
      complex3.NaN.getArgument();
      complex2.INF.getArgument();
      complex0.getReal();
      complex0.isInfinite();
      Complex complex4 = complex1.multiply((-2452));
      Complex complex5 = Complex.valueOf(Double.NaN);
      Complex complex6 = complex3.negate();
      Complex complex7 = complex4.sqrt1z();
      Complex complex8 = complex6.pow(1171.40002482636);
      Complex complex9 = Complex.ZERO;
      complex8.pow(complex4);
      complex9.tan();
      Complex complex10 = complex5.multiply(3360);
      Complex complex11 = complex4.divide(complex2);
      complex4.log();
      complex5.add(complex8);
      complex7.readResolve();
      complex10.pow(489.4858);
      complex11.abs();
      complex10.isInfinite();
      complex6.multiply(3360);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.log();
      Complex complex2 = complex0.sqrt();
      Complex complex3 = complex0.sinh();
      Complex complex4 = complex2.subtract(complex3);
      complex1.toString();
      complex0.add(656.856327781);
      complex0.tan();
      Complex complex5 = complex2.exp();
      Complex.valueOf(656.856327781, 656.856327781);
      complex0.getField();
      Complex complex6 = Complex.INF;
      Complex complex7 = complex6.cos();
      Complex complex8 = complex4.add(Double.POSITIVE_INFINITY);
      complex0.subtract(complex8);
      Complex.valueOf((-1973.30463797734), 955.06633272742);
      complex0.toString();
      complex5.exp();
      complex6.sqrt1z();
      complex3.isInfinite();
      Complex complex9 = complex2.pow(1.8160789012908936);
      complex9.tanh();
      complex7.divide(656.856327781);
      complex6.atan();
      complex8.readResolve();
      complex9.multiply((-118.778976908623));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.add(72.8683528);
      complex0.getField();
      Complex complex2 = complex1.asin();
      Complex complex3 = complex0.subtract(1.0);
      Complex complex4 = complex3.multiply(574);
      complex3.conjugate();
      Complex complex5 = complex4.negate();
      Complex complex6 = Complex.I;
      Complex complex7 = complex6.sqrt1z();
      Complex complex8 = complex0.pow((-2573.72528185));
      Complex complex9 = complex2.add((-2485.74024164729));
      complex8.pow(complex5);
      Complex complex10 = Complex.INF;
      complex10.tan();
      complex7.multiply(1472);
      complex0.divide(complex5);
      complex10.log();
      Complex complex11 = Complex.ONE;
      Complex complex12 = complex6.add(complex11);
      complex9.readResolve();
      Complex complex13 = complex8.pow(1.0);
      complex12.abs();
      complex8.isInfinite();
      complex13.multiply((-1773));
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = complex0.ZERO.sinh();
      Complex complex2 = complex0.I.conjugate();
      Complex complex3 = complex2.NaN.asin();
      complex3.NaN.getArgument();
      complex0.getReal();
      complex0.isInfinite();
      Complex complex4 = complex1.conjugate();
      Complex complex5 = Complex.valueOf((-2805.480615883));
      complex2.getImaginary();
      Complex complex6 = complex1.exp();
      Complex complex7 = complex6.ONE.subtract(complex4);
      Complex complex8 = complex6.subtract(complex5);
      Complex complex9 = complex8.NaN.conjugate();
      complex9.I.atan();
      Complex complex10 = complex5.subtract(0.0);
      Complex complex11 = complex0.ONE.pow(complex2);
      Complex complex12 = complex2.sinh();
      Complex complex13 = complex4.add(0.2378782033920288);
      Complex complex14 = complex13.cos();
      Complex complex15 = complex14.add(complex5);
      complex11.pow(complex3);
      complex7.getArgument();
      Complex complex16 = Complex.ONE;
      complex10.pow(complex11);
      complex15.nthRoot(37);
      complex11.exp();
      Complex complex17 = Complex.ZERO;
      complex17.isInfinite();
      Complex complex18 = new Complex((-35.88));
      complex12.divide(complex11);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.ONE.atan();
      complex1.ZERO.getArgument();
      complex1.ZERO.multiply(611);
      complex0.abs();
      Complex complex2 = complex0.divide(complex1);
      complex2.NaN.hashCode();
      complex2.ONE.nthRoot(1);
      complex1.toString();
      complex2.sqrt();
      Complex.valueOf(263.6592);
      Complex complex3 = Complex.ONE;
      Complex complex4 = complex1.multiply(complex3);
      complex4.sin();
      Complex complex5 = complex3.createComplex(263.6592, 0.0);
      complex5.cosh();
      Complex complex6 = new Complex((-20.0), (-1507.2841992861));
      complex6.tan();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 0.0);
      Complex complex1 = complex0.tan();
      Complex complex2 = complex0.tanh();
      Complex complex3 = complex0.add(0.0);
      Complex complex4 = complex0.pow(complex1);
      complex4.divide(8.951285029786536E-9);
      complex3.atan();
      complex1.readResolve();
      complex4.multiply(0.0);
      complex2.equals(complex1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.add((-348.0));
      complex0.getField();
      Complex complex2 = complex1.asin();
      Complex complex3 = complex1.subtract((-1.4643701717775));
      complex0.multiply(4);
      Complex complex4 = complex0.conjugate();
      Complex complex5 = complex4.negate();
      Complex complex6 = complex3.sqrt1z();
      Complex complex7 = complex1.pow(0.0);
      Complex complex8 = complex7.add((double) 4);
      Complex complex9 = complex5.pow(complex1);
      complex2.tan();
      Complex complex10 = complex7.multiply(4);
      Complex complex11 = complex7.divide(complex6);
      complex11.log();
      Complex complex12 = Complex.NaN;
      complex4.ONE.asin();
      complex12.add(complex2);
      complex8.readResolve();
      complex3.pow((double) 3360);
      complex11.abs();
      complex9.isInfinite();
      complex10.multiply(3360);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.I.divide((-2112.810610636319));
      Complex complex2 = complex1.I.divide((-2112.810610636319));
      Complex complex3 = complex2.INF.conjugate();
      Complex complex4 = complex3.exp();
      complex4.I.cos();
      complex0.tan();
      complex2.I.exp();
      complex3.I.conjugate();
      Complex complex5 = complex1.tan();
      Complex complex6 = complex5.ZERO.log();
      complex5.I.add(1770.9433);
      complex6.ONE.abs();
      complex5.ZERO.divide(Double.POSITIVE_INFINITY);
      Complex complex7 = complex3.subtract(complex0);
      complex7.multiply(complex0);
      Complex complex8 = Complex.INF;
      Complex complex9 = complex8.atan();
      complex9.atan();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1235.66);
      Complex complex1 = complex0.ZERO.tanh();
      Complex complex2 = Complex.INF;
      Complex complex3 = new Complex(1030.661918795);
      complex0.getImaginary();
      Complex complex4 = Complex.INF;
      complex4.add(complex0);
      Complex complex5 = complex4.multiply(0);
      Complex complex6 = complex4.tanh();
      Complex complex7 = complex1.divide((double) 0);
      complex6.getField();
      Complex complex8 = complex6.pow(0.0);
      complex8.I.reciprocal();
      complex5.I.getArgument();
      complex7.divide(0.7853981633974483);
      complex5.cosh();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = complex0.NaN.tanh();
      Complex complex2 = complex0.atan();
      Complex complex3 = complex1.INF.subtract(complex0);
      complex0.NaN.nthRoot(1059);
      Complex complex4 = complex2.createComplex((-1719.34), (-596.0));
      Complex complex5 = complex1.I.reciprocal();
      Complex complex6 = complex3.acos();
      complex6.NaN.abs();
      complex3.hashCode();
      Complex.valueOf(0.0, (-2663.601354800579));
      complex4.exp();
      complex4.getField();
      Complex complex7 = complex5.multiply((-3105));
      Complex complex8 = Complex.ZERO;
      Complex complex9 = complex8.sqrt();
      complex2.acos();
      complex7.exp();
      complex3.sinh();
      complex9.divide((-125.28564427332596));
      complex4.sin();
      complex4.log();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Complex complex0 = new Complex(0.0, 0.0);
      Complex complex1 = complex0.multiply(0);
      Complex complex2 = complex0.NaN.createComplex(0, 0.0);
      complex0.I.pow(complex2);
      Complex complex3 = complex2.ZERO.multiply(1897);
      complex3.NaN.abs();
      Complex complex4 = complex0.divide(0.0);
      Complex complex5 = complex4.I.exp();
      complex5.INF.getArgument();
      Complex complex6 = Complex.valueOf(0.0, (-1557.017544878162));
      complex5.ZERO.pow(108.4256215592264);
      complex2.divide(20.0);
      complex6.I.multiply(21);
      complex5.I.multiply(complex3);
      Complex complex7 = Complex.valueOf(20.0, 0.0);
      complex7.INF.nthRoot(2332);
      complex1.hashCode();
      complex0.getImaginary();
      complex4.toString();
      complex4.I.divide(complex5);
      complex4.nthRoot(1456);
      complex7.getArgument();
      complex6.hashCode();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.NaN.tanh();
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.atan();
      assertNotNull(complex2);
      assertSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      
      Complex complex3 = complex1.INF.subtract(complex0);
      assertNotNull(complex3);
      assertSame(complex0, complex3);
      assertSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertSame(complex3, complex1);
      assertSame(complex3, complex0);
      assertSame(complex3, complex2);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      List<Complex> list0 = complex0.NaN.nthRoot(1059);
      assertTrue(list0.contains(complex0));
      assertNotNull(list0);
      assertSame(complex0, complex3);
      assertSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      
      Complex complex4 = complex2.createComplex((-1719.34), (-596.0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals((-596.0), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1719.34), complex4.getReal(), 0.01);
      
      Complex complex5 = complex1.I.reciprocal();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertSame(complex0, complex3);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex3.acos();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex2);
      assertNotSame(complex3, complex5);
      assertSame(complex3, complex1);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex3);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      double double0 = complex6.NaN.abs();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals(Double.NaN, double0, 0.01);
      assertSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex2);
      assertNotSame(complex3, complex5);
      assertSame(complex3, complex1);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex3);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex7 = complex4.INF.createComplex(0.0, (-1870.755349472796));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertNotNull(complex7);
      assertSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals((-596.0), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1719.34), complex4.getReal(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-1870.755349472796), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex7.ZERO.atan();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals((-596.0), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1719.34), complex4.getReal(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-1870.755349472796), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex1.tanh();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertNotNull(complex9);
      assertSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex0);
      assertSame(complex9, complex6);
      assertSame(complex9, complex3);
      assertSame(complex9, complex1);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex2.negate();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex1);
      assertSame(complex10, complex3);
      assertSame(complex10, complex0);
      assertSame(complex10, complex6);
      assertSame(complex10, complex2);
      assertSame(complex10, complex9);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      
      Complex complex11 = complex1.INF.acos();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertNotNull(complex11);
      assertSame(complex0, complex3);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex1, complex11);
      assertSame(complex1, complex6);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex2);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex2);
      assertSame(complex11, complex9);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex6);
      assertSame(complex11, complex10);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      Complex complex12 = Complex.valueOf((-990.0140632661542), 0.0);
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex1));
      assertNotNull(complex12);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals((-990.0140632661542), complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = complex5.sin();
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertNotNull(complex13);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertSame(complex0, complex11);
      assertSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex2);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertEquals((-1.1752011936438014), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex13.getReal(), 0.01);
      
      Complex complex14 = complex0.sqrt();
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertNotNull(complex14);
      assertSame(complex14, complex1);
      assertSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex9);
      assertSame(complex14, complex3);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex2);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex0, complex14);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertSame(complex0, complex11);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      
      Complex complex15 = complex3.pow((-596.0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex4));
      assertNotNull(complex15);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertSame(complex0, complex10);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex0, complex14);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertSame(complex0, complex11);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex1);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex10);
      assertSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertSame(complex15, complex0);
      assertSame(complex15, complex3);
      assertSame(complex15, complex6);
      assertSame(complex15, complex9);
      assertSame(complex1, complex14);
      assertSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex2);
      assertSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertSame(complex3, complex11);
      assertSame(complex3, complex1);
      assertSame(complex3, complex14);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertSame(complex3, complex9);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      double double1 = complex15.I.abs();
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex4));
      assertEquals(1.0, double1, 0.01);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertSame(complex0, complex10);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex0, complex14);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertSame(complex0, complex11);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex1);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex10);
      assertSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertSame(complex15, complex0);
      assertSame(complex15, complex3);
      assertSame(complex15, complex6);
      assertSame(complex15, complex9);
      assertSame(complex1, complex14);
      assertSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex2);
      assertSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertSame(complex3, complex11);
      assertSame(complex3, complex1);
      assertSame(complex3, complex14);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertSame(complex3, complex9);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      Complex complex16 = complex13.sqrt1z();
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex1));
      assertNotNull(complex16);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertSame(complex0, complex10);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex0, complex14);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertSame(complex0, complex11);
      assertSame(complex1, complex14);
      assertSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex2);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex15);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex1);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertEquals((-1.1752011936438014), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex13.getReal(), 0.01);
      
      Complex complex17 = Complex.valueOf((-1719.34));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertNotNull(complex17);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex13);
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals((-1719.34), complex17.getReal(), 0.01);
      
      Complex complex18 = complex4.multiply(0);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex3));
      assertTrue(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex5));
      assertNotNull(complex18);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex0, complex14);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertSame(complex0, complex11);
      assertSame(complex2, complex9);
      assertSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertSame(complex2, complex15);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex5);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(-0.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertEquals((-596.0), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1719.34), complex4.getReal(), 0.01);
      
      Complex complex19 = complex18.add(complex1);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex3));
      assertTrue(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex18));
      assertNotNull(complex19);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex0, complex14);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertSame(complex0, complex11);
      assertSame(complex1, complex14);
      assertSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex10);
      assertSame(complex1, complex19);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex18);
      assertSame(complex1, complex2);
      assertSame(complex2, complex9);
      assertSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertSame(complex2, complex15);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex5);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex16);
      assertSame(complex19, complex6);
      assertSame(complex19, complex1);
      assertSame(complex19, complex14);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex12);
      assertSame(complex19, complex3);
      assertSame(complex19, complex0);
      assertSame(complex19, complex9);
      assertSame(complex19, complex10);
      assertSame(complex19, complex15);
      assertNotSame(complex19, complex13);
      assertSame(complex19, complex11);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex18);
      assertSame(complex19, complex2);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(-0.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertEquals((-596.0), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1719.34), complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertTrue(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      
      Complex complex1 = complex0.atan();
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.subtract(complex1);
      assertNotNull(complex2);
      assertSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      
      Complex complex3 = complex0.I.negate();
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals((-1.0), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.ZERO.pow(2203.2207584805788);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals((-1.0), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      
      Complex complex5 = complex1.ZERO.sin();
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex5.multiply(17);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex3.ZERO.add((-586.525654173));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals((-1.0), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals((-586.525654173), complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex5.ONE.multiply(400);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(400.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex8.ZERO.cosh();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertNotNull(complex9);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(400.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getReal(), 0.01);
      
      Complex complex10 = complex2.ONE.log();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertNotNull(complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      
      Complex complex11 = Complex.valueOf((double) 17, 2323.796887984066);
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertNotNull(complex11);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex3);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(17.0, complex11.getReal(), 0.01);
      assertEquals(2323.796887984066, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex10.ZERO.multiply(complex0);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertNotNull(complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex6);
      assertSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex0);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      
      double double0 = complex12.NaN.getArgument();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertEquals(Double.NaN, double0, 0.01);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex6);
      assertSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex0);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      
      Complex complex13 = complex8.divide(complex10);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertNotNull(complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertSame(complex13, complex2);
      assertSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertSame(complex13, complex12);
      assertSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(400.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      
      Complex complex14 = complex2.subtract(complex1);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertNotNull(complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertSame(complex14, complex2);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex9);
      assertSame(complex14, complex0);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      
      Complex complex15 = complex2.sqrt1z();
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex4));
      assertNotNull(complex15);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex14);
      assertSame(complex15, complex0);
      assertNotSame(complex15, complex9);
      assertSame(complex15, complex12);
      assertSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex7);
      assertSame(complex15, complex2);
      assertSame(complex15, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex15);
      assertSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      
      double double1 = complex15.abs();
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertEquals(double1, double0, 0.01);
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex4));
      assertEquals(Double.NaN, double1, 0.01);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex14);
      assertSame(complex15, complex0);
      assertNotSame(complex15, complex9);
      assertSame(complex15, complex12);
      assertSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex7);
      assertSame(complex15, complex2);
      assertSame(complex15, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex15);
      assertSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      
      boolean boolean0 = complex0.equals(complex14);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(boolean0);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex15);
      assertSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertSame(complex14, complex2);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex9);
      assertSame(complex14, complex15);
      assertSame(complex14, complex0);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      
      double double2 = complex0.getArgument();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(Double.NaN, double2, 0.01);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex14);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      
      Complex complex16 = complex1.subtract((-20.0));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex9));
      assertNotNull(complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertSame(complex16, complex1);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex12);
      assertSame(complex16, complex13);
      assertSame(complex16, complex2);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex4);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      
      Complex complex17 = complex3.asin();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex1));
      assertNotNull(complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals((-1.0), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals((-0.8813735870195429), complex17.getImaginary(), 0.01);
      assertEquals(0.0, complex17.getReal(), 0.01);
      
      ComplexField complexField0 = complex8.getField();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex7));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex7);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(400.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex18 = complex0.cosh();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex3));
      assertNotNull(complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex18, complex12);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex11);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex3);
      assertSame(complex18, complex15);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex13);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex2);
      assertSame(complex18, complex0);
      assertSame(complex18, complex16);
      assertSame(complex18, complex14);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      
      List<Complex> list0 = complex18.ZERO.nthRoot(37);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(list0.contains(complex18));
      assertTrue(list0.contains(complex6));
      assertNotNull(list0);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex18, complex12);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex11);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex3);
      assertSame(complex18, complex15);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex13);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex2);
      assertSame(complex18, complex0);
      assertSame(complex18, complex16);
      assertSame(complex18, complex14);
      
      complex16.hashCode();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex9));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex16);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertSame(complex16, complex1);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex12);
      assertSame(complex16, complex18);
      assertSame(complex16, complex13);
      assertSame(complex16, complex2);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex4);
      
      List<Complex> list1 = complex8.nthRoot(17);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex18));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(list1.equals((Object)list0));
      assertFalse(list1.contains(complex18));
      assertNotNull(list1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex16);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex7);
      assertNotSame(list1, list0);
      
      Complex complex19 = complex18.cosh();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex17));
      assertNotNull(complex19);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertSame(complex18, complex12);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex11);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex17);
      assertSame(complex18, complex19);
      assertNotSame(complex18, complex3);
      assertSame(complex18, complex15);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex13);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex2);
      assertSame(complex18, complex0);
      assertSame(complex18, complex16);
      assertSame(complex18, complex14);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex10);
      assertSame(complex19, complex13);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex11);
      assertSame(complex19, complex1);
      assertNotSame(complex19, complex17);
      assertSame(complex19, complex15);
      assertSame(complex19, complex12);
      assertSame(complex19, complex18);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex8);
      assertSame(complex19, complex2);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertSame(complex19, complex14);
      assertSame(complex19, complex0);
      assertSame(complex19, complex16);
      
      ComplexField complexField1 = complex6.getField();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex18));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex19));
      assertTrue(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex16));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertNotNull(complexField1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex16);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex19);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex5);
      assertSame(complexField1, complexField0);
      
      Complex complex20 = complex16.pow((-13.151412));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex9));
      assertTrue(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex10));
      assertNotNull(complex20);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertSame(complex0, complex15);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex16);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertSame(complex1, complex20);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertSame(complex1, complex19);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertSame(complex16, complex1);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex12);
      assertSame(complex16, complex18);
      assertSame(complex16, complex13);
      assertSame(complex16, complex2);
      assertSame(complex16, complex20);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertSame(complex16, complex15);
      assertSame(complex16, complex19);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex4);
      assertSame(complex20, complex1);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex3);
      assertSame(complex20, complex19);
      assertNotSame(complex20, complex11);
      assertSame(complex20, complex15);
      assertSame(complex20, complex2);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex13);
      assertNotSame(complex20, complex10);
      assertSame(complex20, complex14);
      assertNotSame(complex20, complex4);
      assertSame(complex20, complex0);
      assertSame(complex20, complex16);
      assertNotSame(complex20, complex9);
      assertSame(complex20, complex18);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex5);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.cosh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.I.divide(complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.NaN.sqrt();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex2);
      
      Complex complex4 = complex1.log();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex0.exp();
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      
      complex0.NaN.hashCode();
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      
      Complex complex6 = complex0.acos();
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex5.INF.pow(0.0);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex7.ZERO.subtract(complex0);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      
      Complex complex9 = complex6.pow(complex5);
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      
      Complex complex10 = complex8.negate();
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex8));
      assertNotNull(complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex5.atan();
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertNotNull(complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      
      Object object0 = complex7.ZERO.readResolve();
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(object0.equals((Object)complex0));
      assertTrue(object0.equals((Object)complex10));
      assertFalse(object0.equals((Object)complex9));
      assertTrue(object0.equals((Object)complex8));
      assertFalse(object0.equals((Object)complex6));
      assertTrue(object0.equals((Object)complex4));
      assertFalse(object0.equals((Object)complex11));
      assertFalse(object0.equals((Object)complex1));
      assertFalse(object0.equals((Object)complex5));
      assertFalse(object0.equals((Object)complex7));
      assertFalse(object0.equals((Object)complex2));
      assertFalse(object0.equals((Object)complex3));
      assertNotNull(object0);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, object0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(object0, complex9);
      assertNotSame(object0, complex6);
      assertNotSame(object0, complex11);
      assertNotSame(object0, complex1);
      assertNotSame(object0, complex5);
      assertNotSame(object0, complex8);
      assertNotSame(object0, complex7);
      assertNotSame(object0, complex10);
      assertNotSame(object0, complex2);
      assertNotSame(object0, complex4);
      assertNotSame(object0, complex3);
      assertNotSame(object0, complex0);
      
      Complex complex12 = complex1.NaN.add((-1841.3719));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertNotNull(complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      
      Complex complex13 = complex11.acos();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex13.equals((Object)object0));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertNotNull(complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, object0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex13, object0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      
      Complex complex14 = complex1.ZERO.sqrt();
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)object0));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertNotNull(complex14);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, object0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      
      ComplexField complexField0 = complex13.getField();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex13.equals((Object)object0));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex13, object0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      
      Complex complex15 = complex3.asin();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)object0));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex14));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertNotNull(complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertSame(complex15, complex12);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, object0);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex1);
      assertSame(complex15, complex3);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex14);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      
      Complex complex16 = complex8.negate();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)object0));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)object0));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex15));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)object0));
      assertNotNull(complex16);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex16, object0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, object0);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex16);
      
      Complex complex17 = complex16.INF.tanh();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)object0));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)object0));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)object0));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex15));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex16));
      assertTrue(complex8.equals((Object)object0));
      assertNotNull(complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex16, object0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex17);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex11);
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, object0);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex1);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex0);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, object0);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex16);
      
      Complex complex18 = Complex.valueOf(0.0, (-134.53053));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)object0));
      assertNotNull(complex18);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, object0);
      
      Complex complex19 = complex18.NaN.subtract(complex16);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex18));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)object0));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex1));
      assertTrue(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex13));
      assertTrue(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)object0));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex15));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex17));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex16));
      assertTrue(complex8.equals((Object)object0));
      assertNotNull(complex19);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex16, object0);
      assertNotSame(complex16, complex19);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex0);
      
      Complex complex20 = complex6.pow(complex16);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex18));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)object0));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex17));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex13));
      assertTrue(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)object0));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex15));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex17));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex16));
      assertTrue(complex8.equals((Object)object0));
      assertNotNull(complex20);
      
      Complex complex21 = complex20.divide(2893.10352849);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex18));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)object0));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)object0));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex17));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex13));
      assertTrue(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)object0));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex15));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex17));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex16));
      assertTrue(complex8.equals((Object)object0));
      assertNotNull(complex21);
      
      double double0 = complex20.ONE.getArgument();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex18));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)object0));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex21));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex21));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex21));
      assertTrue(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex17));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex13));
      assertTrue(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)object0));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex15));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex17));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex16));
      assertTrue(complex8.equals((Object)object0));
      assertEquals(0.0, double0, 0.01);
      
      Complex complex22 = complex0.negate();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex1));
      assertTrue(complex22.equals((Object)object0));
      assertFalse(complex22.equals((Object)complex12));
      assertTrue(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex13));
      assertTrue(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex3));
      assertTrue(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex5));
      assertTrue(complex22.equals((Object)complex8));
      assertTrue(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex2));
      assertTrue(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex6));
      assertNotNull(complex22);
      
      complex22.INF.hashCode();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex1));
      assertTrue(complex22.equals((Object)object0));
      assertFalse(complex22.equals((Object)complex12));
      assertTrue(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex13));
      assertTrue(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex3));
      assertTrue(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex5));
      assertTrue(complex22.equals((Object)complex8));
      assertTrue(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex2));
      assertTrue(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex6));
      
      Complex complex23 = complex16.pow(complex7);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex22));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex18));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)object0));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex21));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex22));
      assertFalse(complex7.equals((Object)complex13));
      assertTrue(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)object0));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex15));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex22));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex17));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex16));
      assertTrue(complex8.equals((Object)object0));
      assertFalse(complex23.equals((Object)complex22));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex13));
      assertTrue(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex23.equals((Object)object0));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex10));
      assertNotNull(complex23);
      
      Complex complex24 = complex3.sin();
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex23));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex18));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex22));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex14));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex11));
      assertTrue(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex4));
      assertNotNull(complex24);
      
      ComplexField complexField1 = complex12.getField();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex23));
      assertTrue(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex21));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex20));
      assertFalse(complex12.equals((Object)complex22));
      assertFalse(complex12.equals((Object)complex1));
      assertNotNull(complexField1);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.ONE.multiply((-977));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-977.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.ZERO.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-977.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      
      Complex complex3 = Complex.valueOf(0.058784693479537964);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex0.INF.add(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      
      Complex complex5 = complex4.NaN.atan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex0.divide(0.0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      complex6.NaN.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex0.cosh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.5430806348152437, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex3.pow(0.0);
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertNotNull(complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex7.I.multiply((-977));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.5430806348152437, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals((-977.0), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getReal(), 0.01);
      
      Complex complex10 = Complex.valueOf(0.0, 0.0);
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertNotNull(complex10);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      
      double double0 = complex10.I.getArgument();
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertEquals(1.5707963267948966, double0, 0.01);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex8.createComplex(0.0, 0.058784693479537964);
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertNotNull(complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.058784693479537964, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      double double1 = complex8.NaN.getArgument();
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(Double.NaN, double1, 0.01);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      
      Complex complex12 = complex3.sqrt1z();
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertNotNull(complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.998270684640452, complex12.getReal(), 0.01);
      
      boolean boolean0 = complex7.isInfinite();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(boolean0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.5430806348152437, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      
      boolean boolean1 = complex3.isNaN();
      assertTrue(boolean1 == boolean0);
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(boolean1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex13 = complex6.I.multiply(complex12);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertNotNull(complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex13.isInfinite());
      assertEquals(0.998270684640452, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.998270684640452, complex12.getReal(), 0.01);
      
      Complex complex14 = complex6.sqrt1z();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex6);
      assertSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertSame(complex6, complex14);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      Complex complex15 = complex14.NaN.add(complex11);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertNotNull(complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex1);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex6);
      assertSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertSame(complex6, complex14);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.058784693479537964, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex16 = complex0.sqrt();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertNotNull(complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(1.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      
      Complex complex17 = complex16.createComplex((-380.59164), 2.0);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex6));
      assertNotNull(complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex3);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(1.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(2.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals((-380.59164), complex17.getReal(), 0.01);
      
      String string0 = complex17.INF.toString();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex6));
      assertEquals("(Infinity, Infinity)", string0);
      assertNotNull(string0);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex3);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(1.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(2.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals((-380.59164), complex17.getReal(), 0.01);
      
      boolean boolean2 = complex11.isInfinite();
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(boolean2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.058784693479537964, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex18 = complex6.subtract(complex12);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex17));
      assertNotNull(complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex18);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex17);
      assertSame(complex6, complex14);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex18);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertSame(complex18, complex14);
      assertNotSame(complex18, complex17);
      assertSame(complex18, complex6);
      assertSame(complex18, complex5);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex15);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex17);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.998270684640452, complex12.getReal(), 0.01);
      
      Complex complex19 = complex3.atan();
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex8));
      assertNotNull(complex19);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex8);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertEquals(0.05871712061241416, complex19.getReal(), 0.01);
      assertFalse(complex19.isNaN());
      
      double double2 = complex5.getArgument();
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(Double.NaN, double2, 0.01);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex18);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex13);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex16);
      assertSame(complex5, complex18);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertSame(complex5, complex14);
      assertNotSame(complex5, complex17);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.058784693479537964, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex20 = complex6.pow(1109.793312);
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex17));
      assertNotNull(complex20);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex18);
      assertSame(complex6, complex14);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex18);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex20);
      assertNotSame(complex6, complex4);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex0);
      assertSame(complex20, complex15);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex2);
      assertSame(complex20, complex5);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex16);
      assertSame(complex20, complex18);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex9);
      assertSame(complex20, complex6);
      assertSame(complex20, complex14);
      assertNotSame(complex20, complex17);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertTrue(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = (Complex)complex0.I.readResolve();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.ZERO.asin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.add((-1591.9860611223894));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      double double0 = complex0.abs();
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex4 = complex3.subtract((-2512.7691895366484));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(920.783128414259, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex4.ZERO.multiply(0);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(920.783128414259, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      
      Complex complex6 = complex3.cosh();
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex7 = Complex.valueOf(0.0);
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex3.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-6.281462032996541E-4), complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.INF.atan();
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-6.281462032996541E-4), complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      
      Complex complex10 = complex9.INF.exp();
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-6.281462032996541E-4), complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex10.NaN.sqrt1z();
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex11);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-6.281462032996541E-4), complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      Complex complex12 = Complex.NaN;
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertNotNull(complex12);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      
      Complex complex13 = Complex.NaN;
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertNotNull(complex13);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      
      Complex complex14 = complex3.ZERO.add(complex13);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex4));
      assertNotNull(complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex14);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex8);
      assertSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      
      Complex complex15 = complex8.multiply(complex12);
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertNotNull(complex15);
      assertSame(complex15, complex9);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex10);
      assertSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex0);
      assertSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertSame(complex12, complex13);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-6.281462032996541E-4), complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      
      Complex complex16 = complex15.ZERO.log();
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertNotNull(complex16);
      assertSame(complex15, complex9);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex16);
      assertSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex0);
      assertSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertSame(complex12, complex13);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex16.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-6.281462032996541E-4), complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      
      Complex complex17 = complex12.pow((-1493.2278));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertNotNull(complex17);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex2);
      assertSame(complex17, complex13);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex9);
      assertNotSame(complex17, complex6);
      assertSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertSame(complex17, complex15);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex4);
      assertSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertSame(complex12, complex13);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex17);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      
      Complex complex18 = complex3.tan();
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertNotNull(complex18);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex15);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertEquals(1.0325563779485705, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals((-1591.9860611223894), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      
      Complex complex1 = complex0.atan();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex2 = complex1.ZERO.divide(727.5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.ONE.cosh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5430806348152437, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      complex2.ONE.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex4 = complex2.NaN.divide((-1333.54316));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      complex1.I.hashCode();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex5 = complex1.NaN.sinh();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex1, complex4);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex4);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex0.ZERO.exp();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      
      double double0 = complex0.getArgument();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertEquals(0.7853981633974483, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      
      Complex complex7 = (Complex)complex5.readResolve();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      Complex complex8 = complex1.multiply(364);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertSame(complex8, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      
      Complex complex9 = Complex.valueOf((-1333.54316), 0.0);
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-1333.54316), complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      
      double double1 = complex3.getImaginary();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5430806348152437, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex10 = complex5.createComplex((-690.80795339005), 364);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertNotNull(complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex4);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals((-690.80795339005), complex10.getReal(), 0.01);
      assertEquals(364.0, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex0.divide((-1138.3371344999084));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertNotNull(complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getReal(), 0.01);
      
      Complex complex12 = complex11.I.tanh();
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertNotNull(complex12);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex12);
      assertEquals(1.557407724654902, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getReal(), 0.01);
      
      double double2 = complex0.getImaginary();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(Double.POSITIVE_INFINITY, double2, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      
      Complex complex13 = complex9.log();
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex13);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertFalse(complex13.isNaN());
      assertEquals(3.141592653589793, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(7.195594709052559, complex13.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-1333.54316), complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      
      Complex complex14 = complex11.cosh();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex12));
      assertNotNull(complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex12);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Complex complex0 = Complex.valueOf(40.19140625);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(40.19140625, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = Complex.NaN;
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.subtract(complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex2);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(40.19140625, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.exp();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(40.19140625, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2.85040095144011776E17, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.multiply((-570));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(40.19140625, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-22909.1015625), complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex1.divide(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex1);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(40.19140625, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals((-22909.1015625), complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex4.conjugate();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(40.19140625, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-22909.1015625), complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals((-22909.1015625), complex6.getReal(), 0.01);
      
      Complex complex7 = complex2.pow(1.4672790944499144E-8);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex7);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex1);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(40.19140625, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = Complex.valueOf(0.5500838756561279, (double) 708);
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.5500838756561279, complex1.getReal(), 0.01);
      assertEquals(708.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.NaN.sqrt();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      
      List<Complex> list0 = complex0.INF.nthRoot(708);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(list0.contains(complex1));
      assertTrue(list0.contains(complex0));
      assertNotNull(list0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      
      Complex complex3 = complex0.asin();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      complex3.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      boolean boolean0 = complex0.isInfinite();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(boolean0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex4 = complex0.sinh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      
      Complex complex5 = complex0.negate();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      
      Complex complex6 = Complex.valueOf((double) 708, (-7187.2444994474));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertEquals((-7187.2444994474), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(708.0, complex6.getReal(), 0.01);
      
      Complex complex7 = complex4.conjugate();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      Complex complex8 = complex4.reciprocal();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = complex4.tan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex8);
      assertSame(complex9, complex7);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = Complex.valueOf(2601.481, 0.0);
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertNotNull(complex10);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertEquals(2601.481, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex3.atan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertSame(complex3, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex8);
      assertSame(complex11, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ONE.atan();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      double double0 = complex1.ZERO.getArgument();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.ZERO.multiply(611);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      double double1 = complex0.abs();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex3 = complex0.divide(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.2732395447351628, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      
      complex3.NaN.hashCode();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.2732395447351628, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      
      List<Complex> list0 = complex3.ONE.nthRoot(1);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(list0.contains(complex3));
      assertTrue(list0.contains(complex0));
      assertNotNull(list0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.2732395447351628, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      
      String string0 = complex1.toString();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertEquals("(0.7853981633974483, 0.0)", string0);
      assertNotNull(string0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex4 = complex3.sqrt();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.2732395447351628, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.1283791670955126, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = Complex.valueOf(263.6592);
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(263.6592, complex5.getReal(), 0.01);
      
      Complex complex6 = Complex.ONE;
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex1.multiply(complex6);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.7853981633974483, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex7.sin();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.7853981633974483, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.7071067811865475, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex6.createComplex(263.6592, 0.0);
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertNotNull(complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(263.6592, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex6.cosh();
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertNotNull(complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex9.tan();
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertNotNull(complex11);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex7);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals((-0.23898273963165131), complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(263.6592, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      double double0 = 0.0;
      Complex complex0 = Complex.valueOf(0.0);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = Complex.valueOf(0.0, 0.0);
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      String string0 = complex0.NaN.toString();
      assertTrue(complex0.equals((Object)complex1));
      assertEquals("(NaN, NaN)", string0);
      assertNotNull(string0);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex2 = complex0.I.subtract(complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = null;
      try { 
        complex0.divide((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Complex complex0 = new Complex(2374.5588118, 2374.5588118);
      assertNotNull(complex0);
      assertEquals(2374.5588118, complex0.getReal(), 0.01);
      assertEquals(2374.5588118, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.multiply((-2247));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(2374.5588118, complex0.getReal(), 0.01);
      assertEquals(2374.5588118, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-5335633.650114601), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-5335633.650114601), complex1.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      double double0 = complex0.getImaginary();
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      complex0.hashCode();
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.sinh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.asin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7647251540112073, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      ComplexField complexField0 = complex2.I.getField();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7647251540112073, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      double double1 = complex1.abs();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.8414709848078965, double1, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      double double2 = complex0.getImaginary();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(1.0, double2, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex3 = complex2.ZERO.cos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7647251540112073, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      double double3 = complex2.INF.abs();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertEquals(Double.POSITIVE_INFINITY, double3, 0.01);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7647251540112073, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex4 = complex0.divide(0.8414709848078965);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1883951057781212, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      
      Complex complex5 = complex4.INF.cosh();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1883951057781212, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex1.ONE.subtract(complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7647251540112073, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-0.7647251540112073), complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex4.NaN.divide(8.37894218404787E-126);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1883951057781212, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      
      Complex complex8 = complex7.NaN.atan();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1883951057781212, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      
      double double4 = complex7.ONE.abs();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertNotEquals(double4, double3, 0.01);
      assertEquals(double4, double0, 0.01);
      assertEquals(double4, double2, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertEquals(1.0, double4, 0.01);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1883951057781212, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      
      complex4.ZERO.hashCode();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1883951057781212, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      
      double double5 = complex0.getReal();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertNotEquals(double5, double2, 0.01);
      assertNotEquals(double5, double3, 0.01);
      assertNotEquals(double5, double1, 0.01);
      assertNotEquals(double5, double4, 0.01);
      assertNotEquals(double5, double0, 0.01);
      assertEquals(0.0, double5, 0.01);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex9 = complex1.multiply(144);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(121.1718218123371, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex10 = complex0.exp();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertNotNull(complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.8414709848078965, complex10.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex10.sinh();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertNotNull(complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.8414709848078965, complex10.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.37781448118615324, complex11.getReal(), 0.01);
      assertEquals(0.8571314157170596, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      
      Complex complex12 = complex2.divide((double) 144);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertNotNull(complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7647251540112073, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.005310591347300051, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = Complex.valueOf(Double.POSITIVE_INFINITY, 8.37894218404787E-126);
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex3));
      assertNotNull(complex13);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex3);
      assertFalse(complex13.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex13.getReal(), 0.01);
      assertTrue(complex13.isInfinite());
      assertEquals(8.37894218404787E-126, complex13.getImaginary(), 0.01);
      
      ComplexField complexField1 = complex3.getField();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertNotNull(complexField1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertSame(complexField1, complexField0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7647251540112073, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex14 = complex1.divide(1.0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertNotNull(complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.8414709848078965, complex14.getImaginary(), 0.01);
      assertEquals(0.0, complex14.getReal(), 0.01);
      
      boolean boolean0 = complex12.isInfinite();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(boolean0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7647251540112073, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.005310591347300051, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex15 = complex14.subtract((-513.4739));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex2));
      assertNotNull(complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.8414709848078965, complex14.getImaginary(), 0.01);
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(513.4739, complex15.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      
      Complex complex1 = complex0.INF.cosh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.subtract(complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      ComplexField complexField0 = complex0.NaN.getField();
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      
      double double0 = complex3.INF.abs();
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      complex3.I.hashCode();
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.ZERO.sqrt1z();
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex4.ONE.atan();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex3.ONE.sin();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex2.multiply(1800.57);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex7.INF.divide(complex3);
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      
      double double1 = complex1.getArgument();
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(Double.NaN, double1, 0.01);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      
      Complex complex9 = complex2.NaN.cosh();
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertNotNull(complex9);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      
      Complex complex10 = complex9.tanh();
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertNotNull(complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      
      Complex complex11 = complex1.multiply(2203);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertNotNull(complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertSame(complex11, complex8);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      
      Complex complex12 = complex1.cosh();
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex11));
      assertNotNull(complex12);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      
      Complex complex13 = Complex.valueOf(Double.POSITIVE_INFINITY, 2.0);
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex10));
      assertNotNull(complex13);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      
      Complex complex14 = complex0.add(Double.POSITIVE_INFINITY);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertNotNull(complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex6);
      
      Complex complex15 = complex14.I.acos();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertNotNull(complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      
      double double2 = complex2.getReal();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(0.0, double2, 0.01);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      
      complex0.hashCode();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      
      Complex complex16 = complex6.log();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex14));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex10));
      assertNotNull(complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex2);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex10);
      
      Complex complex17 = complex7.pow(complex0);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertNotNull(complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex13);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex13);
      
      Object object0 = complex17.readResolve();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(object0.equals((Object)complex6));
      assertFalse(object0.equals((Object)complex14));
      assertFalse(object0.equals((Object)complex16));
      assertFalse(object0.equals((Object)complex2));
      assertFalse(object0.equals((Object)complex0));
      assertTrue(object0.equals((Object)complex10));
      assertFalse(object0.equals((Object)complex7));
      assertFalse(object0.equals((Object)complex15));
      assertTrue(object0.equals((Object)complex8));
      assertFalse(object0.equals((Object)complex3));
      assertTrue(object0.equals((Object)complex17));
      assertTrue(object0.equals((Object)complex9));
      assertFalse(object0.equals((Object)complex4));
      assertTrue(object0.equals((Object)complex12));
      assertFalse(object0.equals((Object)complex5));
      assertFalse(object0.equals((Object)complex13));
      assertTrue(object0.equals((Object)complex1));
      assertTrue(object0.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertNotNull(object0);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, object0);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex13);
      assertNotSame(object0, complex6);
      assertNotSame(object0, complex14);
      assertNotSame(object0, complex16);
      assertNotSame(object0, complex2);
      assertNotSame(object0, complex0);
      assertNotSame(object0, complex7);
      assertNotSame(object0, complex15);
      assertNotSame(object0, complex3);
      assertNotSame(object0, complex12);
      assertNotSame(object0, complex8);
      assertNotSame(object0, complex10);
      assertNotSame(object0, complex1);
      assertNotSame(object0, complex4);
      assertNotSame(object0, complex5);
      assertNotSame(object0, complex11);
      assertNotSame(object0, complex13);
      assertNotSame(object0, complex17);
      assertNotSame(object0, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, object0);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex13);
      
      Complex complex18 = complex11.multiply(2203);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)object0));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertTrue(complex18.equals((Object)object0));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex13));
      assertTrue(complex11.equals((Object)object0));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertNotNull(complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex12);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex1);
      assertSame(complex18, complex11);
      assertSame(complex18, complex9);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex10);
      assertNotSame(complex18, object0);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex8);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex12);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex18);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex17);
      
      Complex complex19 = complex17.conjugate();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)object0));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertNotNull(complex19);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex19);
      
      Complex complex20 = complex19.sqrt();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)object0));
      assertTrue(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex7));
      assertTrue(complex20.equals((Object)complex1));
      assertTrue(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex5));
      assertNotNull(complex20);
      
      Complex complex21 = complex17.subtract(complex19);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)object0));
      assertTrue(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex20));
      assertTrue(complex21.equals((Object)object0));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex4));
      assertTrue(complex21.equals((Object)complex1));
      assertTrue(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex6));
      assertNotNull(complex21);
      
      double double3 = complex4.getImaginary();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex14));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex21));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex18));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertEquals(double3, double2, 0.01);
      assertEquals(0.0, double3, 0.01);
      
      double double4 = complex19.abs();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)object0));
      assertTrue(complex17.equals((Object)complex21));
      assertTrue(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex20));
      assertNotEquals(double4, double0, 0.01);
      assertEquals(double4, double1, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertEquals(Double.NaN, double4, 0.01);
      
      Object object1 = complex21.readResolve();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)object0));
      assertTrue(complex17.equals((Object)complex21));
      assertTrue(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex20));
      assertTrue(complex21.equals((Object)object0));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex4));
      assertTrue(complex21.equals((Object)complex1));
      assertTrue(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(object1.equals((Object)complex2));
      assertFalse(object1.equals((Object)complex6));
      assertTrue(object1.equals((Object)complex18));
      assertFalse(object1.equals((Object)complex14));
      assertTrue(object1.equals((Object)complex21));
      assertTrue(object1.equals((Object)complex10));
      assertTrue(object1.equals((Object)complex8));
      assertTrue(object1.equals((Object)complex12));
      assertFalse(object1.equals((Object)complex0));
      assertFalse(object1.equals((Object)complex15));
      assertFalse(object1.equals((Object)complex16));
      assertFalse(object1.equals((Object)complex4));
      assertTrue(object1.equals((Object)object0));
      assertTrue(object1.equals((Object)complex20));
      assertFalse(object1.equals((Object)complex3));
      assertFalse(object1.equals((Object)complex7));
      assertTrue(object1.equals((Object)complex9));
      assertFalse(object1.equals((Object)complex5));
      assertTrue(object1.equals((Object)complex17));
      assertTrue(object1.equals((Object)complex19));
      assertTrue(object1.equals((Object)complex11));
      assertFalse(object1.equals((Object)complex13));
      assertTrue(object1.equals((Object)complex1));
      assertNotNull(object1);
      
      Complex complex22 = complex9.subtract(complex12);
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex4));
      assertTrue(complex22.equals((Object)object0));
      assertTrue(complex22.equals((Object)complex1));
      assertTrue(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex14));
      assertTrue(complex22.equals((Object)object1));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)object1));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex15));
      assertTrue(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)object0));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)object1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)object0));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex19));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)object1));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex21));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)object1));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex9.equals((Object)object1));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex14));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex16));
      assertTrue(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex15));
      assertNotNull(complex22);
      
      double double5 = complex0.getImaginary();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertEquals(double5, double3, 0.01);
      assertNotEquals(double5, double4, 0.01);
      assertEquals(double5, double2, 0.01);
      assertNotEquals(double5, double1, 0.01);
      assertNotEquals(double5, double0, 0.01);
      assertEquals(0.0, double5, 0.01);
      
      Complex complex23 = complex22.acos();
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex4));
      assertTrue(complex22.equals((Object)object0));
      assertTrue(complex22.equals((Object)complex1));
      assertTrue(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex14));
      assertTrue(complex22.equals((Object)object1));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)object1));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex15));
      assertTrue(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)object0));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)object0));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex19));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex17));
      assertTrue(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)object1));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex21));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex16));
      assertTrue(complex23.equals((Object)object1));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex14));
      assertTrue(complex23.equals((Object)complex1));
      assertTrue(complex23.equals((Object)object0));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex13));
      assertTrue(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)object1));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex9.equals((Object)object1));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex14));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex16));
      assertTrue(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex15));
      assertNotNull(complex23);
      
      Complex complex24 = Complex.valueOf((-1623.1293345));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)object1));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex21));
      assertNotNull(complex24);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ONE.sin();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.I.multiply(3364);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(3364.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.acos();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.ZERO.add(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = Complex.valueOf((-2010.80409), 20.0);
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertEquals(20.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-2010.80409), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      
      double double0 = complex3.INF.abs();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex6 = complex1.add(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.8414709848078965, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex4.pow((double) 3364);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex7.add(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.8414709848078965, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = Complex.valueOf(Double.POSITIVE_INFINITY);
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      
      Complex complex10 = complex8.NaN.log();
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.8414709848078965, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex7.sinh();
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertNotNull(complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(6.787115790924295E-253, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      
      Complex complex12 = complex7.sqrt1z();
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertNotNull(complex12);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      
      Complex complex13 = complex11.pow(Double.POSITIVE_INFINITY);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex2));
      assertNotNull(complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex13);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex2);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(6.787115790924295E-253, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      
      Complex complex14 = complex7.sqrt();
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertNotNull(complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex9);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(8.238395347957207E-127, complex14.getReal(), 0.01);
      
      Complex complex15 = complex2.tan();
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertNotNull(complex15);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(1.0, complex15.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(3364.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex16 = complex14.ZERO.add(20.0);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertNotNull(complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex9);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(20.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(8.238395347957207E-127, complex14.getReal(), 0.01);
      
      Complex complex17 = complex15.ONE.sin();
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex9));
      assertTrue(complex17.equals((Object)complex1));
      assertTrue(complex17.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertNotNull(complex17);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(1.0, complex15.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.8414709848078965, complex17.getReal(), 0.01);
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(3364.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      String string0 = complex7.toString();
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertEquals("(6.787115790924295E-253, 0.0)", string0);
      assertNotNull(string0);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex18 = complex14.pow((-2010.80409));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex9));
      assertTrue(complex18.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertNotNull(complex18);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex18);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex18);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex9);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex18.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(6.787115790924295E-253, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(8.238395347957207E-127, complex14.getReal(), 0.01);
      
      Complex complex19 = complex5.conjugate();
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex17));
      assertNotNull(complex19);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex17);
      assertFalse(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals((-2010.80409), complex19.getReal(), 0.01);
      assertEquals((-20.0), complex19.getImaginary(), 0.01);
      assertEquals(20.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-2010.80409), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.ZERO.sinh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.I.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      
      Complex complex3 = complex2.NaN.asin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      
      double double0 = complex3.NaN.getArgument();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(Double.NaN, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      
      double double1 = complex2.INF.getArgument();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.7853981633974483, double1, 0.01);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      
      double double2 = complex0.getReal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(Double.NaN, double2, 0.01);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      
      boolean boolean0 = complex0.isInfinite();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(boolean0);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      
      Complex complex4 = complex1.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = Complex.valueOf((-2805.480615883));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-2805.480615883), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      
      double double3 = complex2.getImaginary();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertEquals((-1.0), double3, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      
      Complex complex6 = complex1.exp();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.ONE.subtract(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getReal(), 0.01);
      
      Complex complex8 = complex6.subtract(complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-2805.480615883), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(2806.480615883, complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.NaN.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-2805.480615883), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(2806.480615883, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex9.I.atan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex9);
      assertSame(complex0, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex0);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-2805.480615883), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(2806.480615883, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      
      Complex complex11 = complex5.subtract(0.0);
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex11);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals((-2805.480615883), complex11.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-2805.480615883), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      
      Complex complex12 = complex0.ONE.pow(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex9);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      
      Complex complex13 = complex2.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertNotNull(complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex9);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals((-0.8414709848078965), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      
      Complex complex14 = complex4.add(0.2378782033920288);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex9);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertEquals(0.2378782033920288, complex14.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      Complex complex15 = complex14.cos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex9);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertEquals(0.2378782033920288, complex14.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.9718401446089662, complex15.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      Complex complex16 = complex4.add(complex15);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex16);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex3);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertEquals(0.2378782033920288, complex14.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.9718401446089662, complex15.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.9718401446089662, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      Complex complex17 = complex8.NaN.pow(complex1);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex7);
      assertSame(complex17, complex10);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertSame(complex17, complex0);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex1);
      assertSame(complex17, complex9);
      assertNotSame(complex17, complex15);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex15);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex2);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-2805.480615883), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(2806.480615883, complex8.getReal(), 0.01);
      
      double double4 = complex6.getArgument();
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex17));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertEquals(0.0, double4, 0.01);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex15);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex18 = Complex.ONE;
      assertTrue(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex11));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertNotNull(complex18);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertEquals(1.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      
      Complex complex19 = complex8.pow(complex18);
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex11));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex17));
      assertTrue(complex6.equals((Object)complex12));
      assertTrue(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex19);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex19);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex2);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex15);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex2);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(1.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isNaN());
      assertEquals(2806.4806158829997, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-2805.480615883), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(2806.480615883, complex8.getReal(), 0.01);
      
      try { 
        complex18.nthRoot((-314));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -314
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1235.66);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1235.66, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.tanh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1235.66, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = Complex.INF;
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      
      Complex complex3 = new Complex(1030.661918795);
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1030.661918795, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex2.NaN.subtract(complex3);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1030.661918795, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      Complex complex5 = complex0.multiply(complex2);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1235.66, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertTrue(complex5.isInfinite());
      
      Complex complex6 = complex3.atan();
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertNotNull(complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1030.661918795, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.5698260768341974, complex6.getReal(), 0.01);
      assertEquals((-1.1102230246251565E-16), complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex0.atan();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1235.66, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-5.551115123125783E-17), complex7.getImaginary(), 0.01);
      assertEquals(1.5699870428642955, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      
      Complex complex1 = complex0.ZERO.atan();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = (Complex)complex0.ONE.readResolve();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = Complex.valueOf(7.467788172398272E228, 7.467788172398272E228);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.INF.divide(7.467788172398272E228);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      
      Complex complex5 = complex4.ZERO.cosh();
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex4.sqrt();
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex7 = complex0.add(1547.795);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex3.reciprocal();
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertEquals(6.695422907790186E-230, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-6.695422907790186E-230), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      
      double double0 = complex8.ZERO.abs();
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertEquals(6.695422907790186E-230, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-6.695422907790186E-230), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex8.conjugate();
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertNotNull(complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertEquals(6.695422907790186E-230, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-6.695422907790186E-230), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(6.695422907790186E-230, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(6.695422907790186E-230, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex9.sqrt1z();
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertNotNull(complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex10);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertEquals(6.695422907790186E-230, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-6.695422907790186E-230), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(6.695422907790186E-230, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(6.695422907790186E-230, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = Complex.valueOf(7.467788172398272E228, 288.87556711);
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertNotNull(complex11);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertEquals(7.467788172398272E228, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(288.87556711, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex7.I.negate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertNotNull(complex12);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(-0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-1.0), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = complex12.NaN.cosh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertNotNull(complex13);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex13);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex13);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertSame(complex13, complex0);
      assertNotSame(complex13, complex5);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(-0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-1.0), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      
      boolean boolean0 = complex3.isInfinite();
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(boolean0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      
      Complex complex14 = Complex.valueOf(288.87556711);
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertNotNull(complex14);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertFalse(complex14.isInfinite());
      assertEquals(288.87556711, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      
      Complex complex15 = complex14.multiply(complex7);
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertTrue(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex15);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex13);
      assertNotSame(complex15, complex9);
      assertSame(complex15, complex13);
      assertSame(complex15, complex0);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex12);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertFalse(complex14.isInfinite());
      assertEquals(288.87556711, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex16 = complex15.reciprocal();
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertTrue(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex16);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex15);
      assertSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex13);
      assertNotSame(complex15, complex9);
      assertSame(complex15, complex13);
      assertSame(complex15, complex0);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex12);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertSame(complex15, complex16);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex14);
      assertSame(complex16, complex15);
      assertSame(complex16, complex7);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertSame(complex16, complex0);
      assertSame(complex16, complex13);
      assertNotSame(complex16, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex16);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertFalse(complex14.isInfinite());
      assertEquals(288.87556711, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertTrue(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex17 = complex7.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex17);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex15);
      assertSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex13);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex12);
      assertSame(complex17, complex7);
      assertSame(complex17, complex0);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex3);
      assertSame(complex17, complex13);
      assertNotSame(complex17, complex10);
      assertSame(complex17, complex16);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex17);
      assertSame(complex7, complex16);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex18 = complex3.sinh();
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex16));
      assertNotNull(complex18);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex16);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex18.getReal(), 0.01);
      assertTrue(complex18.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex18.getImaginary(), 0.01);
      
      Complex complex19 = complex5.createComplex(0.0, 1547.795);
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex15));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex14));
      assertNotNull(complex19);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex15);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex14);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(0.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isNaN());
      assertEquals(1547.795, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex20 = complex19.ZERO.multiply(complex6);
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex15));
      assertTrue(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex9));
      assertTrue(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex12));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex19));
      assertTrue(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex14));
      assertTrue(complex6.equals((Object)complex16));
      assertTrue(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex0));
      assertNotNull(complex20);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex15);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex14);
      assertNotSame(complex20, complex2);
      assertSame(complex20, complex0);
      assertSame(complex20, complex13);
      assertSame(complex20, complex16);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex17);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex9);
      assertSame(complex20, complex15);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex6);
      assertSame(complex20, complex7);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex14);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex16);
      assertEquals(7.467788172398272E228, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(7.467788172398272E228, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(0.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isNaN());
      assertEquals(1547.795, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex20.isNaN());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex21 = Complex.valueOf(0.0);
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex17));
      assertTrue(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex19));
      assertNotNull(complex21);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex19);
      assertFalse(complex21.isInfinite());
      assertEquals(0.0, complex21.getReal(), 0.01);
      assertFalse(complex21.isNaN());
      assertEquals(0.0, complex21.getImaginary(), 0.01);
      
      Complex complex22 = complex11.multiply(7.467788172398272E228);
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex21));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertNotNull(complex22);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex0);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex12);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex19);
      assertNotSame(complex11, complex22);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex21);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertEquals(2.1572615433589015E231, complex22.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex22.getReal(), 0.01);
      assertTrue(complex22.isInfinite());
      assertFalse(complex22.isNaN());
      assertEquals(7.467788172398272E228, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(288.87556711, complex11.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.reciprocal();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.INF.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      double double0 = complex0.getArgument();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex3 = complex0.ONE.multiply((-3424.7019494767774));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-3424.7019494767774), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      
      Complex complex4 = Complex.valueOf(0.0, 0.0);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex4.pow(complex0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      double double1 = complex3.I.abs();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-3424.7019494767774), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      
      Complex complex6 = complex3.exp();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-3424.7019494767774), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      
      int int0 = (-2963);
      try { 
        complex0.nthRoot((-2963));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -2,963
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Complex complex0 = new Complex(2.2975389535985893E-7, 147.3198540958);
      assertNotNull(complex0);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      String string0 = complex0.toString();
      assertEquals("(2.2975389535985893E-7, 147.3198540958)", string0);
      assertNotNull(string0);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = Complex.valueOf(147.3198540958, 2.2975389535985893E-7);
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertEquals(2.2975389535985893E-7, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(147.3198540958, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.INF.subtract(4.65641);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(2.2975389535985893E-7, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(147.3198540958, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      
      Complex complex3 = complex1.INF.tan();
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(2.2975389535985893E-7, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(147.3198540958, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      int int0 = 1;
      List<Complex> list0 = complex3.INF.nthRoot(1);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(list0.contains(complex2));
      assertFalse(list0.contains(complex0));
      assertNotNull(list0);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(2.2975389535985893E-7, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(147.3198540958, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      
      Complex complex4 = complex1.ZERO.add(2.2975389535985893E-7);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertEquals(2.2975389535985893E-7, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(147.3198540958, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals(2.2975389535985893E-7, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = Complex.valueOf((double) 1, 147.3198540958);
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(147.3198540958, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      
      Complex complex6 = complex0.tan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex6.ZERO.tanh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex0.cos();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-1.0975709310108314E57), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(4.7771591828365246E63, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      
      int int1 = complex0.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(int1 == int0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex9 = (Complex)complex8.I.readResolve();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-1.0975709310108314E57), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(4.7771591828365246E63, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      
      Complex complex10 = complex0.divide(complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-1.0975709310108314E57), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(4.7771591828365246E63, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-7.037143867379787E-69), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(3.083838081533604E-62, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      
      Complex complex11 = complex10.NaN.subtract(complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex3);
      assertEquals(147.3198540958, complex0.getImaginary(), 0.01);
      assertEquals(2.2975389535985893E-7, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-1.0975709310108314E57), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(4.7771591828365246E63, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-7.037143867379787E-69), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(3.083838081533604E-62, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      try { 
        complex11.nthRoot((-591));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -591
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.2133188247680664);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      double double0 = complex0.getReal();
      assertEquals(1.2133188247680664, double0, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      complex0.hashCode();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.multiply(1.2133188247680664);
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      
      Complex complex2 = complex1.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6792820342363466, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.INF.divide(1.2133188247680664);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex1.ZERO.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex2.divide(Double.POSITIVE_INFINITY);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6792820342363466, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex5.ZERO.multiply(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex5));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6792820342363466, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      double double1 = complex2.abs();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.6792820342363466, double1, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6792820342363466, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex7 = complex4.pow(complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6792820342363466, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      complex1.ZERO.hashCode();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      
      Complex complex8 = Complex.valueOf(1.2133188247680664, 0.0);
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(1.2133188247680664, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex4.exp();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      
      ComplexField complexField0 = complex9.getField();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      
      Complex complex10 = complex4.multiply((-488));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex10.INF.sqrt();
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex11);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertTrue(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      
      Complex complex12 = complex10.acos();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      
      Complex complex13 = complex0.exp();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertNotNull(complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(3.3646327695640004, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      
      Complex complex14 = complex5.sinh();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6792820342363466, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex15 = complex6.divide((-3852.0557710537));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex7));
      assertTrue(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex12));
      assertTrue(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex14));
      assertTrue(complex6.equals((Object)complex10));
      assertNotNull(complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.6792820342363466, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex16 = complex0.sin();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertNotNull(complex16);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.9367824562226946, complex16.getReal(), 0.01);
      
      Complex complex17 = complex2.log();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex10));
      assertNotNull(complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex13);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.2133188247680664, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.4721425705365618, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6792820342363466, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-0.38671887060062066), complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(-0.0, complex17.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = Complex.INF;
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      
      Complex complex2 = Complex.valueOf(772.15, 772.15);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(772.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(772.15, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.multiply(complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      
      Complex complex4 = complex2.INF.sqrt1z();
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertEquals(772.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(772.15, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      Complex complex5 = complex0.I.negate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex3.createComplex(772.15, 0.0);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(772.15, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex2.reciprocal();
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertEquals(772.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(772.15, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals((-6.475425759243671E-4), complex7.getImaginary(), 0.01);
      assertEquals(6.475425759243671E-4, complex7.getReal(), 0.01);
      
      Complex complex8 = complex3.negate();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex3.atan();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertNotNull(complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      
      Complex complex10 = complex9.I.add(Double.POSITIVE_INFINITY);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertNotNull(complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(1.0, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      
      Complex complex11 = complex1.add(772.15);
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertNotNull(complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Complex complex0 = new Complex((-20.7539594), (-20.7539594));
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-20.7539594), complex0.getReal(), 0.01);
      assertEquals((-20.7539594), complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ONE.acos();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-20.7539594), complex0.getReal(), 0.01);
      assertEquals((-20.7539594), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.sqrt1z();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-20.7539594), complex0.getReal(), 0.01);
      assertEquals((-20.7539594), complex0.getImaginary(), 0.01);
      assertEquals((-20.741917003591706), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(20.766008788014286, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.INF.sinh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-20.7539594), complex0.getReal(), 0.01);
      assertEquals((-20.7539594), complex0.getImaginary(), 0.01);
      assertEquals((-20.741917003591706), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(20.766008788014286, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.NaN.negate();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-20.7539594), complex0.getReal(), 0.01);
      assertEquals((-20.7539594), complex0.getImaginary(), 0.01);
      assertEquals((-20.741917003591706), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(20.766008788014286, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      
      Complex complex5 = Complex.valueOf(0.0, (-20.7539594));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-20.7539594), complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex2.multiply(0.0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-20.7539594), complex0.getReal(), 0.01);
      assertEquals((-20.7539594), complex0.getImaginary(), 0.01);
      assertEquals((-20.741917003591706), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(20.766008788014286, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 0.0);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.tan();
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.tanh();
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = (Complex)complex1.I.readResolve();
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(1.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.add(0.0);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex0.pow(complex1);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex2.reciprocal();
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex7 = (Complex)complex0.readResolve();
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.tanh();
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.pow(complex1);
      assertNotNull(complex2);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      
      Complex complex3 = complex2.ZERO.subtract(3934.80955);
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex0);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-3934.80955), complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.add(0.0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-3934.80955), complex3.getReal(), 0.01);
      assertEquals((-3934.80955), complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex1.I.subtract(complex4);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-3934.80955), complex3.getReal(), 0.01);
      assertEquals((-3934.80955), complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(3934.80955, complex5.getReal(), 0.01);
      assertEquals(1.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex2.I.log();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.5707963267948966, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex2.subtract(0.0);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertSame(complex7, complex1);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      Complex complex8 = complex7.NaN.sqrt();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertNotNull(complex8);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertSame(complex7, complex1);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex2);
      assertSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex1);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = complex7.NaN.divide((-2178.699));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertNotNull(complex9);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex1);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex0);
      assertSame(complex9, complex8);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex2.tanh();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertNotNull(complex10);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex0);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex9);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertSame(complex10, complex1);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex9.acos();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertNotNull(complex11);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex7, complex10);
      assertSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex8);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex1);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex0);
      assertSame(complex9, complex8);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex9);
      assertSame(complex11, complex10);
      assertSame(complex11, complex8);
      assertSame(complex11, complex1);
      assertSame(complex11, complex0);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      Complex complex12 = complex7.reciprocal();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertNotNull(complex12);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex8);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex1);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex7, complex12);
      assertSame(complex7, complex10);
      assertSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex8);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex1);
      assertSame(complex12, complex7);
      assertSame(complex12, complex0);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex11);
      assertSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      
      Complex complex13 = complex1.sqrt1z();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertNotNull(complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex7);
      assertSame(complex13, complex1);
      assertSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex0);
      assertSame(complex13, complex11);
      assertSame(complex13, complex10);
      assertSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertSame(complex13, complex9);
      assertSame(complex13, complex8);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      
      Complex complex14 = complex10.ZERO.sqrt1z();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex2));
      assertNotNull(complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex9);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex11);
      assertSame(complex2, complex1);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex0);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex9);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex13);
      assertSame(complex10, complex12);
      assertSame(complex10, complex1);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex2);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(1.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      
      Complex complex15 = complex12.pow(3458.757212005);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex3));
      assertNotNull(complex15);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex11);
      assertSame(complex2, complex15);
      assertSame(complex2, complex1);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex7, complex14);
      assertSame(complex7, complex12);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex10);
      assertSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex15);
      assertSame(complex7, complex13);
      assertSame(complex12, complex15);
      assertSame(complex12, complex13);
      assertSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex1);
      assertSame(complex12, complex7);
      assertSame(complex12, complex0);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex6);
      assertSame(complex15, complex12);
      assertSame(complex15, complex7);
      assertSame(complex15, complex2);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertSame(complex15, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex5);
      assertSame(complex15, complex9);
      assertSame(complex15, complex10);
      assertSame(complex15, complex13);
      assertSame(complex15, complex1);
      assertSame(complex15, complex11);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      
      Complex complex16 = complex0.tanh();
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertNotNull(complex16);
      assertSame(complex16, complex15);
      assertSame(complex16, complex7);
      assertSame(complex16, complex13);
      assertSame(complex16, complex1);
      assertSame(complex16, complex2);
      assertSame(complex16, complex12);
      assertSame(complex16, complex9);
      assertSame(complex16, complex10);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex8);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertTrue(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      
      complex16.ZERO.hashCode();
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertSame(complex16, complex15);
      assertSame(complex16, complex7);
      assertSame(complex16, complex13);
      assertSame(complex16, complex1);
      assertSame(complex16, complex2);
      assertSame(complex16, complex12);
      assertSame(complex16, complex9);
      assertSame(complex16, complex10);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex8);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      
      Complex complex17 = complex16.ONE.subtract(0.0);
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex12));
      assertNotNull(complex17);
      assertSame(complex16, complex15);
      assertSame(complex16, complex7);
      assertSame(complex16, complex13);
      assertSame(complex16, complex1);
      assertSame(complex16, complex2);
      assertNotSame(complex16, complex17);
      assertSame(complex16, complex12);
      assertSame(complex16, complex9);
      assertSame(complex16, complex10);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex8);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex12);
      
      double double0 = complex17.getArgument();
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex12));
      assertEquals(0.0, double0, 0.01);
      assertSame(complex16, complex15);
      assertSame(complex16, complex7);
      assertSame(complex16, complex13);
      assertSame(complex16, complex1);
      assertSame(complex16, complex2);
      assertNotSame(complex16, complex17);
      assertSame(complex16, complex12);
      assertSame(complex16, complex9);
      assertSame(complex16, complex10);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex8);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex12);
      
      Complex complex18 = Complex.valueOf((-2949.95500530245));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex3));
      assertNotNull(complex18);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex3);
      
      complex10.hashCode();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex17));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertSame(complex2, complex15);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex18);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex0);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex9);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex15);
      assertSame(complex10, complex16);
      assertSame(complex10, complex13);
      assertSame(complex10, complex12);
      assertSame(complex10, complex1);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      
      Complex complex19 = complex10.sin();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex17));
      assertNotNull(complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex19);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertSame(complex2, complex15);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex18);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertSame(complex19, complex16);
      assertSame(complex19, complex15);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex3);
      assertSame(complex19, complex0);
      assertSame(complex19, complex10);
      assertSame(complex19, complex9);
      assertSame(complex19, complex8);
      assertNotSame(complex19, complex4);
      assertSame(complex19, complex2);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex18);
      assertSame(complex19, complex11);
      assertSame(complex19, complex12);
      assertSame(complex19, complex13);
      assertSame(complex19, complex1);
      assertNotSame(complex19, complex17);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex0);
      assertSame(complex10, complex19);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex9);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex15);
      assertSame(complex10, complex16);
      assertSame(complex10, complex13);
      assertSame(complex10, complex12);
      assertSame(complex10, complex1);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      
      Complex complex20 = complex6.sqrt();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex8));
      assertNotNull(complex20);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex19);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex20);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertSame(complex2, complex15);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex18);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex19);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex8);
      
      String string0 = complex2.toString();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex18));
      assertEquals("(NaN, NaN)", string0);
      assertNotNull(string0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex19);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex20);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertSame(complex2, complex15);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex18);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      
      Complex complex21 = complex19.ZERO.multiply(1565);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex20));
      assertFalse(complex10.equals((Object)complex17));
      assertNotNull(complex21);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex19);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex20);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex21);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertSame(complex2, complex15);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex18);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertSame(complex19, complex16);
      assertSame(complex19, complex15);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex3);
      assertSame(complex19, complex0);
      assertNotSame(complex19, complex20);
      assertSame(complex19, complex10);
      assertSame(complex19, complex9);
      assertSame(complex19, complex8);
      assertNotSame(complex19, complex4);
      assertSame(complex19, complex2);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex21);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex18);
      assertSame(complex19, complex11);
      assertSame(complex19, complex12);
      assertSame(complex19, complex13);
      assertSame(complex19, complex1);
      assertNotSame(complex19, complex17);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex9);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex21);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex0);
      assertSame(complex10, complex19);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex9);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex15);
      assertSame(complex10, complex16);
      assertSame(complex10, complex13);
      assertSame(complex10, complex12);
      assertSame(complex10, complex1);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex20);
      
      String string1 = complex18.toString();
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex21));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex20));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(string1.equals((Object)string0));
      assertEquals("(-2949.95500530245, 0.0)", string1);
      assertNotNull(string1);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex21);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex20);
      assertNotSame(complex18, complex3);
      
      Complex complex22 = complex19.multiply((-2271.90452425));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex21));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex20));
      assertFalse(complex10.equals((Object)complex21));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex20));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex14));
      assertNotNull(complex22);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex19);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex21);
      assertSame(complex0, complex22);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex20);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex21);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex22);
      assertSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertSame(complex2, complex15);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex18);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex22);
      assertSame(complex19, complex16);
      assertSame(complex19, complex15);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex3);
      assertSame(complex19, complex0);
      assertSame(complex19, complex22);
      assertNotSame(complex19, complex20);
      assertSame(complex19, complex10);
      assertSame(complex19, complex9);
      assertSame(complex19, complex8);
      assertNotSame(complex19, complex4);
      assertSame(complex19, complex2);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex21);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex18);
      assertSame(complex19, complex11);
      assertSame(complex19, complex12);
      assertSame(complex19, complex13);
      assertSame(complex19, complex1);
      assertNotSame(complex19, complex17);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex21);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex0);
      assertSame(complex10, complex19);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex9);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex15);
      assertSame(complex10, complex16);
      assertSame(complex10, complex13);
      assertSame(complex10, complex12);
      assertSame(complex10, complex1);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertSame(complex10, complex22);
      assertNotSame(complex10, complex20);
      assertSame(complex22, complex16);
      assertSame(complex22, complex15);
      assertSame(complex22, complex12);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex5);
      assertSame(complex22, complex13);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex14);
      assertSame(complex22, complex9);
      assertSame(complex22, complex10);
      assertSame(complex22, complex19);
      assertSame(complex22, complex8);
      assertSame(complex22, complex0);
      assertNotSame(complex22, complex3);
      assertSame(complex22, complex11);
      assertSame(complex22, complex1);
      assertNotSame(complex22, complex18);
      assertSame(complex22, complex7);
      assertSame(complex22, complex2);
      
      double double1 = complex9.abs();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(Double.NaN, double1, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex19);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex21);
      assertSame(complex0, complex22);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex20);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex21);
      assertSame(complex1, complex2);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex22);
      assertSame(complex1, complex19);
      assertSame(complex1, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex10);
      assertSame(complex1, complex12);
      assertSame(complex1, complex13);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertSame(complex2, complex15);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex18);
      assertSame(complex2, complex12);
      assertSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex22);
      assertSame(complex7, complex22);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex20);
      assertSame(complex7, complex12);
      assertNotSame(complex7, complex18);
      assertSame(complex7, complex16);
      assertSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex10);
      assertSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertSame(complex7, complex19);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex21);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex15);
      assertSame(complex7, complex13);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex21);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex1);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex11);
      assertNotSame(complex9, complex20);
      assertSame(complex9, complex10);
      assertSame(complex9, complex19);
      assertNotSame(complex9, complex18);
      assertSame(complex9, complex22);
      assertSame(complex9, complex15);
      assertSame(complex9, complex12);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex16);
      assertSame(complex9, complex0);
      assertSame(complex9, complex8);
      
      double double2 = complex0.abs();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(Double.NaN, double2, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex0, complex16);
      assertSame(complex0, complex19);
      assertSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex21);
      assertSame(complex0, complex22);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex3);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.I.log();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.ONE.sqrt();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.subtract(complex1);
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.5707963267948966), complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      
      String string0 = complex3.ZERO.toString();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertEquals("(0.0, 0.0)", string0);
      assertNotNull(string0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex5 = complex4.I.add(656.856327781);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.5707963267948966), complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex5.getImaginary(), 0.01);
      assertEquals(656.856327781, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex4.tan();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.5707963267948966), complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9171523356672743), complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex6.NaN.exp();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.5707963267948966), complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9171523356672743), complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex8 = Complex.valueOf(656.856327781, 656.856327781);
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertEquals(656.856327781, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(656.856327781, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      ComplexField complexField0 = complex4.getField();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.5707963267948966), complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      
      Complex complex9 = complex3.cos();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex9.ZERO.add((-1973.30463797734));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertNotNull(complex10);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-1973.30463797734), complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex0.ZERO.subtract(complex9);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex10));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertNotNull(complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertEquals((-1.0), complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex12 = Complex.valueOf(98.5107766538154, 98.5107766538154);
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertNotNull(complex12);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertEquals(98.5107766538154, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(98.5107766538154, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      
      String string1 = complex3.toString();
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(string1.equals((Object)string0));
      assertEquals("(0.0, 0.0)", string1);
      assertNotNull(string1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex13 = complex3.exp();
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertNotNull(complex13);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(1.0, complex13.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex14 = complex13.I.sqrt1z();
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertNotNull(complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(1.0, complex13.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.4142135623730951, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      boolean boolean0 = complex13.isInfinite();
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(boolean0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(1.0, complex13.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex15 = complex11.pow(656.856327781);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex10));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex11));
      assertTrue(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex2));
      assertNotNull(complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals((-0.8998548965007389), complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.4361893685587081, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertEquals((-1.0), complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex16 = complex12.tanh();
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex13));
      assertNotNull(complex16);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex16);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(1.0, complex16.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(98.5107766538154, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(98.5107766538154, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex17 = complex16.divide(8.951285029786536E-9);
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex16));
      assertNotNull(complex17);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex16);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(1.0, complex16.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(1.1171580356031264E8, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertEquals(98.5107766538154, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(98.5107766538154, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex18 = complex0.atan();
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex13));
      assertTrue(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex10));
      assertNotNull(complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(0.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      
      Complex complex19 = (Complex)complex2.readResolve();
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex16));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex7));
      assertNotNull(complex19);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex6);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      
      Complex complex20 = complex7.multiply(0.0);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex15));
      assertTrue(complex3.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertNotNull(complex20);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex20);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex7);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex3);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex14);
      assertSame(complex7, complex20);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.5707963267948966), complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9171523356672743), complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertTrue(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.reciprocal();
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.I.tan();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7615941559557649, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.pow(2.820392733542077E-8);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.ONE.sinh();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1752011936438014, complex4.getReal(), 0.01);
      
      Complex complex5 = complex4.NaN.exp();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1752011936438014, complex4.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex4.NaN.pow(0.0);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.1752011936438014, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex1.INF.subtract(2.820392733542077E-8);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertTrue(complex7.isInfinite());
      
      complex3.hashCode();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      
      Complex complex8 = (Complex)complex2.INF.readResolve();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7615941559557649, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      
      Complex complex9 = complex1.atan();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertNotNull(complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.7853981633974483, complex9.getReal(), 0.01);
      
      Complex complex10 = complex2.multiply((-158.196));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertNotNull(complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7615941559557649, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-120.48114909557817), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      
      Complex complex11 = complex9.I.sin();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertNotNull(complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.7853981633974483, complex9.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(1.1752011936438014, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      
      Complex complex12 = complex2.sin();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertNotNull(complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7615941559557649, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.8373830985134536, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      
      Complex complex13 = complex3.multiply(complex12);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertNotNull(complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.7615941559557649, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertEquals(0.8373830985134536, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertEquals(0.8373830985134536, complex13.getImaginary(), 0.01);
      
      Complex complex14 = Complex.valueOf(0.0);
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertNotNull(complex14);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      
      boolean boolean0 = complex14.isNaN();
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(boolean0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      
      Complex complex15 = (Complex)complex7.readResolve();
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex5));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertTrue(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertNotNull(complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex15.getImaginary(), 0.01);
      assertTrue(complex15.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertTrue(complex7.isInfinite());
      
      double double0 = complex3.abs();
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex14));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertEquals(1.0, double0, 0.01);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      
      Complex complex16 = complex7.conjugate();
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertTrue(complex7.equals((Object)complex15));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertNotNull(complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex11);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertTrue(complex16.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex16.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex16.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertTrue(complex7.isInfinite());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Complex complex0 = new Complex(0.0, 0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.ONE.sin();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.I.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.7615941559557649, complex2.getImaginary(), 0.01);
      
      Complex complex3 = Complex.valueOf(0.0, 0.0);
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = Complex.valueOf(0.0);
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      
      Complex complex5 = complex0.add(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      
      Complex complex6 = complex0.pow(0.0);
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex7 = complex6.INF.atan();
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      Complex complex8 = complex5.createComplex(0.0, 0.0);
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex8.atan();
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex3));
      assertNotNull(complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex9.INF.tan();
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertNotNull(complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      Complex complex11 = complex5.multiply(12);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertNotNull(complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex11.ONE.pow(complex6);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertNotNull(complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex12, complex9);
      assertSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      
      Complex complex13 = complex11.conjugate();
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex1));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertNotNull(complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      
      Complex complex14 = complex8.exp();
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex13));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertNotNull(complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      
      Complex complex15 = complex7.cos();
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex6));
      assertNotNull(complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex10);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex12);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex0);
      assertSame(complex15, complex10);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      
      Complex complex16 = (Complex)complex11.readResolve();
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex10));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex2));
      assertTrue(complex16.equals((Object)complex4));
      assertTrue(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex0));
      assertTrue(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex10));
      assertNotNull(complex16);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex10);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.cos();
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.ZERO.subtract(3806.152543247054);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals((-3806.152543247054), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.pow(6.283185307179586);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.conjugate();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex1.reciprocal();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      try { 
        complex0.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2037.6140138468));
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.NaN.cosh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      double double0 = complex0.ZERO.getArgument();
      assertFalse(complex0.equals((Object)complex1));
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      
      Complex complex2 = complex0.I.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex2.I.sqrt();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7071067811865475, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      List<Complex> list0 = complex2.INF.nthRoot(2061);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(list0.contains(complex0));
      assertNotNull(list0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      
      Complex complex4 = complex2.INF.negate();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex4.ZERO.tan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = Complex.valueOf(0.0);
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      complex0.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      
      complex1.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex7 = complex1.sinh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      Complex complex8 = complex7.I.add(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex8);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = (Complex)complex7.ONE.readResolve();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex2.divide(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex10);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex1);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex2.tanh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2037.6140138468), complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.0), complex2.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals((-1.557407724654902), complex11.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      
      Complex complex1 = complex0.I.multiply(1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = Complex.valueOf((double) 1, (double) 1);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = Complex.NaN;
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      
      Complex complex4 = complex3.atan();
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertSame(complex4, complex3);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex0.ONE.multiply(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex5.NaN.sqrt1z();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertSame(complex3, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex6);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex4);
      assertSame(complex6, complex0);
      assertSame(complex6, complex5);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex0.multiply(1.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertNotNull(complex7);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex3);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex6.ONE.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertNotNull(complex8);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertSame(complex3, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex6);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex4);
      assertSame(complex6, complex0);
      assertSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex5);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex7.atan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex3);
      assertSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertSame(complex9, complex0);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex4);
      assertSame(complex9, complex5);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      
      Object object0 = complex0.readResolve();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(object0.equals((Object)complex9));
      assertTrue(object0.equals((Object)complex6));
      assertTrue(object0.equals((Object)complex3));
      assertTrue(object0.equals((Object)complex7));
      assertTrue(object0.equals((Object)complex0));
      assertFalse(object0.equals((Object)complex1));
      assertTrue(object0.equals((Object)complex4));
      assertFalse(object0.equals((Object)complex8));
      assertFalse(object0.equals((Object)complex2));
      assertTrue(object0.equals((Object)complex5));
      assertNotNull(object0);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertNotSame(object0, complex7);
      assertNotSame(object0, complex5);
      assertNotSame(object0, complex1);
      assertNotSame(object0, complex9);
      assertNotSame(object0, complex8);
      assertNotSame(object0, complex3);
      assertNotSame(object0, complex4);
      assertNotSame(object0, complex2);
      assertNotSame(object0, complex6);
      assertNotSame(object0, complex0);
      
      Complex complex10 = complex9.subtract(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)object0));
      assertNotNull(complex10);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex5);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertSame(complex3, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex10);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex6);
      assertSame(complex5, complex9);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex4);
      assertSame(complex6, complex0);
      assertSame(complex6, complex10);
      assertSame(complex6, complex7);
      assertNotSame(complex6, object0);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex5);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex3);
      assertSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, object0);
      assertSame(complex7, complex10);
      assertSame(complex9, complex0);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex4);
      assertSame(complex9, complex5);
      assertSame(complex9, complex10);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, object0);
      assertSame(complex10, complex5);
      assertSame(complex10, complex6);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex0);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex3);
      assertSame(complex10, complex4);
      
      Complex complex11 = complex5.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)object0));
      assertNotNull(complex11);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex3, complex10);
      assertSame(complex3, complex11);
      assertSame(complex3, complex7);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex5);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertSame(complex3, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex10);
      assertSame(complex5, complex11);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex6);
      assertSame(complex5, complex9);
      assertSame(complex11, complex9);
      assertSame(complex11, complex6);
      assertSame(complex11, complex4);
      assertSame(complex11, complex5);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, object0);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex3);
      
      double double0 = complex11.ZERO.getArgument();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)object0));
      assertEquals(0.0, double0, 0.01);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex3);
      assertSame(complex3, complex10);
      assertSame(complex3, complex11);
      assertSame(complex3, complex7);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex5);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex6);
      assertSame(complex3, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex10);
      assertSame(complex5, complex11);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex6);
      assertSame(complex5, complex9);
      assertSame(complex11, complex9);
      assertSame(complex11, complex6);
      assertSame(complex11, complex4);
      assertSame(complex11, complex5);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, object0);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex3);
      
      Complex complex12 = Complex.INF;
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertNotNull(complex12);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      
      Complex complex13 = complex12.NaN.pow(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)object0));
      assertFalse(complex13.equals((Object)complex8));
      assertNotNull(complex13);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex5);
      assertSame(complex3, complex13);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertSame(complex3, complex10);
      assertSame(complex3, complex11);
      assertSame(complex3, complex7);
      assertNotSame(complex3, object0);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertSame(complex3, complex6);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex10);
      assertSame(complex5, complex11);
      assertNotSame(complex5, object0);
      assertSame(complex5, complex6);
      assertSame(complex5, complex9);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex10);
      assertSame(complex6, complex11);
      assertSame(complex6, complex7);
      assertNotSame(complex6, object0);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex12);
      assertSame(complex6, complex9);
      assertSame(complex6, complex4);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex13);
      assertSame(complex6, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertSame(complex13, complex6);
      assertSame(complex13, complex7);
      assertSame(complex13, complex10);
      assertSame(complex13, complex11);
      assertNotSame(complex13, object0);
      assertNotSame(complex13, complex8);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex1);
      assertSame(complex13, complex5);
      assertSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertSame(complex13, complex4);
      assertSame(complex13, complex0);
      
      Complex complex14 = complex12.negate();
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)object0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertNotNull(complex14);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, object0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      
      Complex complex15 = complex7.NaN.multiply(complex12);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)object0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertNotNull(complex15);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertSame(complex15, complex13);
      assertSame(complex15, complex9);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, object0);
      assertSame(complex15, complex10);
      assertSame(complex15, complex11);
      assertSame(complex15, complex6);
      assertSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex4);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex15);
      assertSame(complex7, complex13);
      assertSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex3);
      assertSame(complex7, complex6);
      assertNotSame(complex7, object0);
      assertSame(complex7, complex10);
      assertSame(complex7, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      
      Complex complex16 = complex9.multiply(1.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex16.equals((Object)object0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex16);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertSame(complex16, complex3);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex4);
      assertSame(complex16, complex5);
      assertNotSame(complex16, complex2);
      assertSame(complex16, complex9);
      assertSame(complex16, complex6);
      assertSame(complex16, complex13);
      assertSame(complex16, complex0);
      assertSame(complex16, complex10);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertSame(complex16, complex7);
      assertNotSame(complex16, object0);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex15);
      assertSame(complex7, complex13);
      assertSame(complex7, complex16);
      assertSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex3);
      assertSame(complex7, complex6);
      assertNotSame(complex7, object0);
      assertSame(complex7, complex10);
      assertSame(complex7, complex11);
      assertNotSame(complex9, complex14);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertSame(complex9, complex11);
      assertSame(complex9, complex7);
      assertNotSame(complex9, object0);
      assertSame(complex9, complex0);
      assertSame(complex9, complex15);
      assertSame(complex9, complex13);
      assertSame(complex9, complex16);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      
      Complex complex17 = complex16.ONE.pow(1.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex16.equals((Object)object0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)object0));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex17);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertSame(complex16, complex3);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex4);
      assertSame(complex16, complex5);
      assertNotSame(complex16, complex2);
      assertSame(complex16, complex9);
      assertSame(complex16, complex6);
      assertSame(complex16, complex13);
      assertSame(complex16, complex0);
      assertSame(complex16, complex10);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertSame(complex16, complex7);
      assertNotSame(complex16, object0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, object0);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex15);
      assertSame(complex7, complex13);
      assertSame(complex7, complex16);
      assertSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex3);
      assertSame(complex7, complex6);
      assertNotSame(complex7, object0);
      assertSame(complex7, complex10);
      assertSame(complex7, complex11);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex17);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertSame(complex9, complex11);
      assertSame(complex9, complex7);
      assertNotSame(complex9, object0);
      assertSame(complex9, complex0);
      assertSame(complex9, complex15);
      assertSame(complex9, complex13);
      assertSame(complex9, complex16);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      
      Complex complex18 = complex10.ONE.divide(Double.POSITIVE_INFINITY);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)object0));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex17));
      assertTrue(complex10.equals((Object)object0));
      assertNotNull(complex18);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex15);
      assertSame(complex3, complex5);
      assertSame(complex3, complex13);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex17);
      assertSame(complex3, complex16);
      assertSame(complex3, complex10);
      assertSame(complex3, complex11);
      assertSame(complex3, complex7);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex14);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertSame(complex3, complex6);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, object0);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex9);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex15);
      assertSame(complex5, complex16);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex18);
      assertSame(complex5, complex10);
      assertSame(complex5, complex11);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex14);
      assertSame(complex5, complex6);
      assertSame(complex5, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex18);
      assertSame(complex6, complex10);
      assertSame(complex6, complex11);
      assertSame(complex6, complex7);
      assertNotSame(complex6, object0);
      assertSame(complex6, complex15);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex12);
      assertSame(complex6, complex16);
      assertSame(complex6, complex9);
      assertSame(complex6, complex4);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex13);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex14);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex15);
      assertSame(complex7, complex13);
      assertSame(complex7, complex16);
      assertSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex3);
      assertSame(complex7, complex6);
      assertNotSame(complex7, object0);
      assertSame(complex7, complex10);
      assertSame(complex7, complex11);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex17);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertSame(complex9, complex11);
      assertSame(complex9, complex7);
      assertNotSame(complex9, object0);
      assertSame(complex9, complex0);
      assertSame(complex9, complex15);
      assertSame(complex9, complex13);
      assertSame(complex9, complex16);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex18);
      assertSame(complex10, complex6);
      assertSame(complex10, complex9);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex11);
      assertSame(complex10, complex13);
      assertSame(complex10, complex5);
      assertSame(complex10, complex15);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex12);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex18);
      assertSame(complex10, complex4);
      assertSame(complex10, complex16);
      
      boolean boolean0 = complex16.isInfinite();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex16.equals((Object)object0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(boolean0);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertSame(complex16, complex3);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex4);
      assertSame(complex16, complex5);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex2);
      assertSame(complex16, complex9);
      assertSame(complex16, complex6);
      assertSame(complex16, complex13);
      assertSame(complex16, complex0);
      assertSame(complex16, complex10);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertSame(complex16, complex7);
      assertNotSame(complex16, object0);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex15);
      assertSame(complex7, complex13);
      assertSame(complex7, complex16);
      assertSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex3);
      assertSame(complex7, complex6);
      assertNotSame(complex7, object0);
      assertSame(complex7, complex10);
      assertSame(complex7, complex11);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex17);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertSame(complex9, complex11);
      assertSame(complex9, complex7);
      assertNotSame(complex9, object0);
      assertSame(complex9, complex0);
      assertSame(complex9, complex15);
      assertSame(complex9, complex13);
      assertSame(complex9, complex16);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex18);
      
      Complex complex19 = complex4.asin();
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex18));
      assertTrue(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex1));
      assertTrue(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex17));
      assertNotNull(complex19);
      assertSame(complex3, complex19);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex15);
      assertSame(complex3, complex5);
      assertSame(complex3, complex13);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex17);
      assertSame(complex3, complex16);
      assertSame(complex3, complex10);
      assertSame(complex3, complex11);
      assertSame(complex3, complex7);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex14);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertSame(complex3, complex6);
      assertSame(complex4, complex5);
      assertSame(complex4, complex3);
      assertSame(complex4, complex15);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex19);
      assertNotSame(complex4, complex14);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex18);
      assertSame(complex4, complex16);
      assertNotSame(complex4, complex17);
      assertSame(complex4, complex9);
      assertSame(complex4, complex13);
      assertSame(complex4, complex7);
      assertSame(complex4, complex10);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, object0);
      assertSame(complex4, complex6);
      assertSame(complex19, complex16);
      assertSame(complex19, complex13);
      assertNotSame(complex19, complex12);
      assertSame(complex19, complex9);
      assertSame(complex19, complex10);
      assertSame(complex19, complex11);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, object0);
      assertSame(complex19, complex6);
      assertNotSame(complex19, complex2);
      assertSame(complex19, complex5);
      assertNotSame(complex19, complex8);
      assertSame(complex19, complex15);
      assertSame(complex19, complex3);
      assertNotSame(complex19, complex14);
      assertSame(complex19, complex4);
      assertNotSame(complex19, complex18);
      assertSame(complex19, complex0);
      assertNotSame(complex19, complex17);
      
      Complex complex20 = complex0.cosh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex8));
      assertTrue(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertNotNull(complex20);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex20);
      assertSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertSame(complex20, complex15);
      assertNotSame(complex20, complex2);
      assertSame(complex20, complex5);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex13);
      assertSame(complex20, complex9);
      assertSame(complex20, complex6);
      assertSame(complex20, complex10);
      assertSame(complex20, complex11);
      assertNotSame(complex20, complex14);
      assertSame(complex20, complex7);
      assertNotSame(complex20, object0);
      assertSame(complex20, complex4);
      assertNotSame(complex20, complex18);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex3);
      assertNotSame(complex20, complex17);
      assertSame(complex20, complex16);
      assertSame(complex20, complex19);
      
      Complex complex21 = complex20.log();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex8));
      assertTrue(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex21.equals((Object)object0));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex2));
      assertNotNull(complex21);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex20);
      assertSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex21);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertSame(complex20, complex15);
      assertSame(complex20, complex21);
      assertNotSame(complex20, complex2);
      assertSame(complex20, complex5);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex13);
      assertSame(complex20, complex9);
      assertSame(complex20, complex6);
      assertSame(complex20, complex10);
      assertSame(complex20, complex11);
      assertNotSame(complex20, complex14);
      assertSame(complex20, complex7);
      assertNotSame(complex20, object0);
      assertSame(complex20, complex4);
      assertNotSame(complex20, complex18);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex3);
      assertNotSame(complex20, complex17);
      assertSame(complex20, complex16);
      assertSame(complex20, complex19);
      assertSame(complex21, complex3);
      assertSame(complex21, complex15);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex8);
      assertSame(complex21, complex4);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex2);
      assertSame(complex21, complex5);
      assertSame(complex21, complex16);
      assertSame(complex21, complex9);
      assertSame(complex21, complex6);
      assertSame(complex21, complex13);
      assertSame(complex21, complex0);
      assertSame(complex21, complex20);
      assertSame(complex21, complex19);
      assertSame(complex21, complex10);
      assertSame(complex21, complex11);
      assertNotSame(complex21, complex12);
      assertSame(complex21, complex7);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, object0);
      
      Complex complex22 = complex21.ZERO.sqrt();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex8));
      assertTrue(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex21.equals((Object)object0));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)object0));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex8));
      assertTrue(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex0));
      assertNotNull(complex22);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex22);
      assertSame(complex0, complex20);
      assertSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex21);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertSame(complex20, complex15);
      assertSame(complex20, complex21);
      assertNotSame(complex20, complex2);
      assertSame(complex20, complex5);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex13);
      assertSame(complex20, complex9);
      assertSame(complex20, complex6);
      assertSame(complex20, complex10);
      assertSame(complex20, complex11);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex22);
      assertSame(complex20, complex7);
      assertNotSame(complex20, object0);
      assertSame(complex20, complex4);
      assertNotSame(complex20, complex18);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex3);
      assertNotSame(complex20, complex17);
      assertSame(complex20, complex16);
      assertSame(complex20, complex19);
      assertSame(complex21, complex3);
      assertSame(complex21, complex15);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex8);
      assertSame(complex21, complex4);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex2);
      assertSame(complex21, complex5);
      assertSame(complex21, complex16);
      assertSame(complex21, complex9);
      assertSame(complex21, complex6);
      assertSame(complex21, complex13);
      assertSame(complex21, complex0);
      assertSame(complex21, complex20);
      assertSame(complex21, complex19);
      assertSame(complex21, complex10);
      assertSame(complex21, complex11);
      assertNotSame(complex21, complex22);
      assertNotSame(complex21, complex12);
      assertSame(complex21, complex7);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, object0);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, object0);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex12);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex19);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex0);
      
      Complex complex23 = complex20.ZERO.negate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex22));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex8));
      assertTrue(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex0));
      assertTrue(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex14));
      assertTrue(complex23.equals((Object)complex22));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)object0));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex21));
      assertNotNull(complex23);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex20);
      assertSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex21);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertSame(complex0, complex6);
      assertSame(complex0, complex13);
      assertSame(complex20, complex15);
      assertSame(complex20, complex21);
      assertNotSame(complex20, complex2);
      assertSame(complex20, complex5);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex13);
      assertSame(complex20, complex9);
      assertSame(complex20, complex6);
      assertSame(complex20, complex10);
      assertSame(complex20, complex11);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex22);
      assertNotSame(complex20, object0);
      assertSame(complex20, complex7);
      assertSame(complex20, complex4);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex3);
      assertNotSame(complex20, complex17);
      assertSame(complex20, complex16);
      assertNotSame(complex20, complex23);
      assertSame(complex20, complex19);
      assertNotSame(complex23, complex0);
      assertNotSame(complex23, complex4);
      assertNotSame(complex23, complex13);
      assertNotSame(complex23, complex2);
      assertNotSame(complex23, complex19);
      assertNotSame(complex23, complex18);
      assertNotSame(complex23, complex8);
      assertNotSame(complex23, complex9);
      assertNotSame(complex23, complex20);
      assertNotSame(complex23, complex16);
      assertNotSame(complex23, complex14);
      assertNotSame(complex23, complex5);
      assertNotSame(complex23, complex7);
      assertNotSame(complex23, complex10);
      assertNotSame(complex23, complex11);
      assertNotSame(complex23, complex3);
      assertNotSame(complex23, complex17);
      assertNotSame(complex23, object0);
      assertNotSame(complex23, complex22);
      assertNotSame(complex23, complex15);
      assertNotSame(complex23, complex12);
      assertNotSame(complex23, complex6);
      assertNotSame(complex23, complex1);
      assertNotSame(complex23, complex21);
      
      Complex complex24 = complex1.cos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex13));
      assertNotNull(complex24);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex20);
      assertSame(complex0, complex16);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex21);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex24);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex22);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex24);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex23);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, object0);
      assertNotSame(complex24, complex9);
      assertNotSame(complex24, complex12);
      assertNotSame(complex24, complex0);
      assertNotSame(complex24, complex19);
      assertNotSame(complex24, complex10);
      assertNotSame(complex24, complex11);
      assertNotSame(complex24, complex3);
      assertNotSame(complex24, complex23);
      assertNotSame(complex24, complex21);
      assertNotSame(complex24, complex8);
      assertNotSame(complex24, complex22);
      assertNotSame(complex24, complex18);
      assertNotSame(complex24, complex2);
      assertNotSame(complex24, object0);
      assertNotSame(complex24, complex4);
      assertNotSame(complex24, complex5);
      assertNotSame(complex24, complex20);
      assertNotSame(complex24, complex16);
      assertNotSame(complex24, complex1);
      assertNotSame(complex24, complex6);
      assertNotSame(complex24, complex7);
      assertNotSame(complex24, complex14);
      assertNotSame(complex24, complex17);
      assertNotSame(complex24, complex15);
      assertNotSame(complex24, complex13);
      
      Complex complex25 = complex24.INF.pow(complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex22));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex23));
      assertFalse(complex3.equals((Object)complex24));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex23));
      assertFalse(complex5.equals((Object)complex24));
      assertTrue(complex5.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex23));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex18));
      assertTrue(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex24));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex22));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex24));
      assertFalse(complex7.equals((Object)complex23));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex23));
      assertFalse(complex9.equals((Object)complex24));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex23));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex22));
      assertFalse(complex10.equals((Object)complex24));
      assertTrue(complex10.equals((Object)object0));
      assertFalse(complex25.equals((Object)complex14));
      assertFalse(complex25.equals((Object)complex17));
      assertFalse(complex25.equals((Object)complex22));
      assertFalse(complex25.equals((Object)complex12));
      assertFalse(complex25.equals((Object)complex1));
      assertFalse(complex25.equals((Object)complex8));
      assertFalse(complex25.equals((Object)complex23));
      assertFalse(complex25.equals((Object)complex2));
      assertFalse(complex25.equals((Object)complex24));
      assertFalse(complex25.equals((Object)complex18));
      assertTrue(complex25.equals((Object)object0));
      assertNotNull(complex25);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex20);
      assertSame(complex0, complex16);
      assertSame(complex0, complex25);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex21);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex24);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex22);
      assertSame(complex0, complex3);
      assertSame(complex0, complex15);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex4);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex24);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex25);
      assertNotSame(complex1, complex23);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, object0);
      assertSame(complex3, complex19);
      assertSame(complex3, complex21);
      assertNotSame(complex3, complex12);
      assertSame(complex3, complex5);
      assertSame(complex3, complex13);
      assertNotSame(complex3, complex23);
      assertNotSame(complex3, complex18);
      assertSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex17);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex22);
      assertNotSame(complex3, object0);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex20);
      assertSame(complex3, complex25);
      assertSame(complex3, complex16);
      assertSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex24);
      assertSame(complex3, complex6);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex15);
      assertSame(complex5, complex16);
      assertSame(complex5, complex20);
      assertSame(complex5, complex25);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex22);
      assertNotSame(complex5, complex18);
      assertSame(complex5, complex11);
      assertNotSame(complex5, object0);
      assertSame(complex5, complex9);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex23);
      assertSame(complex5, complex19);
      assertSame(complex5, complex7);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex17);
      assertSame(complex5, complex10);
      assertNotSame(complex5, complex14);
      assertSame(complex5, complex6);
      assertSame(complex5, complex21);
      assertNotSame(complex5, complex24);
      assertNotSame(complex6, complex23);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex24);
      assertSame(complex6, complex19);
      assertNotSame(complex6, object0);
      assertSame(complex6, complex7);
      assertSame(complex6, complex21);
      assertNotSame(complex6, complex12);
      assertSame(complex6, complex16);
      assertNotSame(complex6, complex17);
      assertSame(complex6, complex13);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex10);
      assertSame(complex6, complex11);
      assertNotSame(complex6, complex22);
      assertSame(complex6, complex15);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex9);
      assertSame(complex6, complex20);
      assertSame(complex6, complex4);
      assertSame(complex6, complex0);
      assertSame(complex6, complex25);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex5);
      assertSame(complex7, complex19);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex12);
      assertSame(complex7, complex13);
      assertNotSame(complex7, complex23);
      assertSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex24);
      assertSame(complex7, complex3);
      assertSame(complex7, complex21);
      assertSame(complex7, complex6);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex15);
      assertSame(complex7, complex16);
      assertSame(complex7, complex20);
      assertSame(complex7, complex25);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, object0);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex22);
      assertNotSame(complex9, complex17);
      assertSame(complex9, complex20);
      assertNotSame(complex9, complex24);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, object0);
      assertSame(complex9, complex7);
      assertSame(complex9, complex21);
      assertSame(complex9, complex15);
      assertNotSame(complex9, complex23);
      assertSame(complex9, complex13);
      assertSame(complex9, complex16);
      assertNotSame(complex9, complex14);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertSame(complex9, complex10);
      assertSame(complex9, complex11);
      assertNotSame(complex9, complex22);
      assertSame(complex9, complex0);
      assertSame(complex9, complex19);
      
      double double1 = complex5.getImaginary();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex3.equals((Object)complex22));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex23));
      assertFalse(complex3.equals((Object)complex24));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex23));
      assertFalse(complex5.equals((Object)complex24));
      assertTrue(complex5.equals((Object)object0));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(Double.NaN, double1, 0.01);
      
      Object object1 = complex2.readResolve();
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex25));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex23));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(object1.equals((Object)complex7));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)complex17));
      assertFalse(object1.equals((Object)complex6));
      assertFalse(object1.equals((Object)complex1));
      assertFalse(object1.equals((Object)complex23));
      assertFalse(object1.equals((Object)complex21));
      assertFalse(object1.equals((Object)complex15));
      assertFalse(object1.equals((Object)complex13));
      assertFalse(object1.equals((Object)complex16));
      assertFalse(object1.equals((Object)complex24));
      assertFalse(object1.equals((Object)complex14));
      assertFalse(object1.equals((Object)complex3));
      assertFalse(object1.equals((Object)complex22));
      assertFalse(object1.equals((Object)complex12));
      assertFalse(object1.equals((Object)complex10));
      assertFalse(object1.equals((Object)complex11));
      assertTrue(object1.equals((Object)complex2));
      assertFalse(object1.equals((Object)complex19));
      assertFalse(object1.equals((Object)complex0));
      assertFalse(object1.equals((Object)complex8));
      assertFalse(object1.equals((Object)complex5));
      assertFalse(object1.equals((Object)complex9));
      assertFalse(object1.equals((Object)complex20));
      assertFalse(object1.equals((Object)complex18));
      assertFalse(object1.equals((Object)complex25));
      assertFalse(object1.equals((Object)complex4));
      assertNotNull(object1);
      
      Complex complex26 = complex9.sqrt1z();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex7.equals((Object)object1));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex24));
      assertFalse(complex7.equals((Object)complex23));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex23));
      assertFalse(complex9.equals((Object)complex24));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)object1));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex26.equals((Object)complex2));
      assertFalse(complex26.equals((Object)complex18));
      assertTrue(complex26.equals((Object)object0));
      assertFalse(complex26.equals((Object)complex24));
      assertFalse(complex26.equals((Object)complex17));
      assertFalse(complex26.equals((Object)complex22));
      assertFalse(complex26.equals((Object)object1));
      assertFalse(complex26.equals((Object)complex14));
      assertFalse(complex26.equals((Object)complex23));
      assertFalse(complex26.equals((Object)complex12));
      assertFalse(complex26.equals((Object)complex1));
      assertFalse(complex26.equals((Object)complex8));
      assertNotNull(complex26);
      
      Complex complex27 = complex12.exp();
      assertFalse(complex27.equals((Object)complex2));
      assertFalse(complex27.equals((Object)complex14));
      assertFalse(complex27.equals((Object)object1));
      assertFalse(complex27.equals((Object)complex8));
      assertTrue(complex27.equals((Object)complex26));
      assertTrue(complex27.equals((Object)complex16));
      assertTrue(complex27.equals((Object)complex11));
      assertFalse(complex27.equals((Object)complex22));
      assertFalse(complex27.equals((Object)complex17));
      assertFalse(complex27.equals((Object)complex12));
      assertTrue(complex27.equals((Object)complex15));
      assertFalse(complex27.equals((Object)complex23));
      assertTrue(complex27.equals((Object)complex5));
      assertFalse(complex27.equals((Object)complex18));
      assertTrue(complex27.equals((Object)complex21));
      assertTrue(complex27.equals((Object)object0));
      assertFalse(complex27.equals((Object)complex24));
      assertTrue(complex27.equals((Object)complex13));
      assertTrue(complex27.equals((Object)complex9));
      assertTrue(complex27.equals((Object)complex20));
      assertTrue(complex27.equals((Object)complex25));
      assertTrue(complex27.equals((Object)complex6));
      assertTrue(complex27.equals((Object)complex10));
      assertTrue(complex27.equals((Object)complex4));
      assertTrue(complex27.equals((Object)complex19));
      assertTrue(complex27.equals((Object)complex7));
      assertTrue(complex27.equals((Object)complex0));
      assertFalse(complex27.equals((Object)complex1));
      assertTrue(complex27.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex22));
      assertFalse(complex12.equals((Object)complex26));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex21));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex20));
      assertFalse(complex12.equals((Object)complex25));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)object1));
      assertFalse(complex12.equals((Object)complex24));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex23));
      assertFalse(complex12.equals((Object)complex11));
      assertNotNull(complex27);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.add((-348.0));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      ComplexField complexField0 = complex1.getField();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.asin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(6.542469884233624, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      
      Complex complex3 = complex2.ZERO.subtract(0.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(6.542469884233624, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex1.ONE.multiply(3360);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(3360.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex0.conjugate();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      
      Complex complex6 = complex5.ZERO.negate();
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex3.sqrt1z();
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(6.542469884233624, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex0.pow((double) 3360);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.NaN.add((double) 3360);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex7.NaN.pow(complex0);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertNotNull(complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(6.542469884233624, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      Complex complex11 = complex10.I.tan();
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertNotNull(complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(6.542469884233624, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.7615941559557649, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      
      Complex complex12 = complex8.ZERO.multiply(3360);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex3));
      assertNotNull(complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      
      Complex complex13 = complex5.divide(complex11);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertNotNull(complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(6.542469884233624, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.7615941559557649, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals((-1.3130352854993315), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex13.getReal(), 0.01);
      
      Complex complex14 = complex7.log();
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertNotNull(complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex14);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(6.542469884233624, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(0.0, complex14.getReal(), 0.01);
      
      Complex complex15 = complex5.add(complex1);
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex11));
      assertNotNull(complex15);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertEquals((-346.0), complex15.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      
      Complex complex16 = (Complex)complex9.readResolve();
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex14));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex2));
      assertTrue(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex13));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertTrue(complex16.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex17 = complex2.pow(0.0);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertNotNull(complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex14);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(1.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(6.542469884233624, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      
      double double0 = complex15.abs();
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex15));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex11));
      assertEquals(346.0, double0, 0.01);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertEquals((-346.0), complex15.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-347.0), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      
      boolean boolean0 = complex8.isInfinite();
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex13));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(boolean0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      
      Complex complex18 = complex0.multiply(831);
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex11));
      assertNotNull(complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex11);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(831.0, complex18.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.ZERO.sqrt();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      int int0 = 1;
      List<Complex> list0 = complex0.ONE.nthRoot(1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(list0.contains(complex0));
      assertNotNull(list0);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      
      Complex complex2 = complex0.NaN.cos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      
      Complex complex3 = Complex.ZERO;
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.divide(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      
      Complex complex5 = (Complex)complex2.I.readResolve();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = Complex.valueOf(3138.713);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(3138.713, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.INF.log();
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertNotNull(complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(3138.713, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.7853981633974483, complex7.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertTrue(complex7.isInfinite());
      
      Complex complex8 = complex3.multiply(708);
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex3));
      assertNotNull(complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = Complex.valueOf(0.0, (-1080.597));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertEquals((-1080.597), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex4.divide(779.85);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertNotNull(complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex0);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex2);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      
      try { 
        complex8.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.NaN.atan();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      
      Complex complex2 = (Complex)complex1.I.readResolve();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.log();
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.multiply(0.0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      boolean boolean0 = complex1.isNaN();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(boolean0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      
      boolean boolean1 = complex1.equals(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex1.divide((-250.0));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex4.negate();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Complex complex0 = new Complex((-2791.7689863144856));
      assertNotNull(complex0);
      assertEquals((-2791.7689863144856), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = null;
      try { 
        complex0.ZERO.multiply((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.NaN.conjugate();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.sqrt();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.multiply(1);
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      
      complex0.NaN.hashCode();
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      
      Complex complex4 = complex0.ZERO.sin();
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex4.multiply(1);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex5.add((double) 1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex2.sinh();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(1.1752011936438014, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex0.sqrt1z();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex1.add(370.65117880778);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex2.pow(370.65117880778);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertNotNull(complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex10.ONE.multiply(complex2);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertNotNull(complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      
      Complex complex12 = complex1.ONE.multiply(370.65117880778);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertNotNull(complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(370.65117880778, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = complex12.ONE.atan();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertNotNull(complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex7);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(370.65117880778, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(0.7853981633974483, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      
      Complex complex14 = complex11.NaN.tan();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertNotNull(complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertSame(complex14, complex9);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      
      Complex complex15 = complex1.sqrt();
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotNull(complex15);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex9);
      assertSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex16 = complex4.ONE.negate();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertNotNull(complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex4);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals((-1.0), complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex17 = Complex.valueOf(1953.3);
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex2));
      assertNotNull(complex17);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex2);
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertEquals(1953.3, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      
      boolean boolean0 = complex1.isNaN();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(boolean0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      
      double double0 = complex4.getReal();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex18 = complex11.multiply(1);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex5));
      assertTrue(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex13));
      assertTrue(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex16));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex15));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex17));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex13));
      assertNotNull(complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex13);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      
      List<Complex> list0 = complex18.nthRoot(1);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex5));
      assertTrue(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex13));
      assertTrue(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex16));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex15));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex17));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(list0.contains(complex9));
      assertTrue(list0.contains(complex2));
      assertNotNull(list0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex13);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertFalse(complex10.isInfinite());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      
      Complex complex19 = Complex.valueOf((double) 1, (double) 1);
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex7));
      assertNotNull(complex19);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex7);
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(1.0, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isNaN());
      
      Complex complex20 = complex19.sqrt1z();
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex1));
      assertNotNull(complex20);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex7);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex1);
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(1.0, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isNaN());
      assertEquals((-0.7861513777574233), complex20.getImaginary(), 0.01);
      assertEquals(1.272019649514069, complex20.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      
      Complex complex21 = complex14.multiply(complex19);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex20));
      assertTrue(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex20));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex16));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex19));
      assertFalse(complex10.equals((Object)complex20));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex15));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex17));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex19));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex20));
      assertNotNull(complex21);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex21);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex7);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex7);
      assertSame(complex21, complex15);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex11);
      assertSame(complex21, complex9);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex19);
      assertSame(complex21, complex14);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex3);
      assertSame(complex21, complex1);
      assertNotSame(complex21, complex4);
      assertNotSame(complex10, complex21);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex20);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex21);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex21);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex18);
      assertSame(complex14, complex9);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex20);
      assertSame(complex14, complex15);
      
      boolean boolean1 = complex14.equals("dkcH:y'C9V");
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex21));
      assertTrue(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(boolean1 == boolean0);
      assertFalse(complex10.equals((Object)complex21));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex16));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex19));
      assertFalse(complex10.equals((Object)complex20));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex15));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex17));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex21));
      assertTrue(complex11.equals((Object)complex18));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex19));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex20));
      assertFalse(boolean1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex10, complex21);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex20);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex21);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex21);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex18);
      assertSame(complex14, complex9);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex20);
      assertSame(complex14, complex15);
      
      Complex complex22 = complex3.pow(6.283185307179586);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex21));
      assertTrue(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex21));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex15));
      assertTrue(complex3.equals((Object)complex18));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex8));
      assertTrue(complex22.equals((Object)complex11));
      assertTrue(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex13));
      assertTrue(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex20));
      assertTrue(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex17));
      assertTrue(complex22.equals((Object)complex2));
      assertTrue(complex22.equals((Object)complex10));
      assertTrue(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex19));
      assertNotNull(complex22);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex22);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex21);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex22);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex0);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex12);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, complex19);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.I.divide((-2112.810610636319));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.I.divide((-2112.810610636319));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex2.INF.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.exp();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex4.I.cos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex0.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.7615941559557649, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex2.I.exp();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex3.I.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex1.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex9);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-4.7330315376770344E-4), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      
      Complex complex10 = complex9.ZERO.log();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertNotNull(complex10);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-4.7330315376770344E-4), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertTrue(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex10.getReal(), 0.01);
      
      Complex complex11 = complex9.I.add(1770.9433);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertNotNull(complex11);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-4.7330315376770344E-4), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertEquals(1.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(1770.9433, complex11.getReal(), 0.01);
      
      double double0 = complex10.ONE.abs();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertEquals(1.0, double0, 0.01);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-4.7330315376770344E-4), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertTrue(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex10.getReal(), 0.01);
      
      Complex complex12 = complex9.ZERO.divide(Double.POSITIVE_INFINITY);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertNotNull(complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-4.7330315376770344E-4), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      
      double double1 = complex3.getImaginary();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, double1, 0.01);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      
      Complex complex13 = complex6.add(complex0);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertNotNull(complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.7615941559557649, complex6.getImaginary(), 0.01);
      assertEquals(1.7615941559557649, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      
      Complex complex14 = complex2.multiply((-1948));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertNotNull(complex14);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.9219946123866339, complex14.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      
      Complex complex15 = complex4.tanh();
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex11));
      assertNotNull(complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex15);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex16 = complex4.add(complex3);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex11));
      assertNotNull(complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex15);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertTrue(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex17 = complex16.ONE.divide((double) (-1948));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex11));
      assertNotNull(complex17);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex5);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex15);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertTrue(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(-0.0, complex17.getImaginary(), 0.01);
      assertEquals((-5.13347022587269E-4), complex17.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex2.getField();
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-4.733031891101817E-4), complex2.getImaginary(), 0.01);
      
      Complex complex18 = complex11.pow((-2112.810610636319));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex14));
      assertNotNull(complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex17);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex14);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(0.0, complex18.getReal(), 0.01);
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-4.7330315376770344E-4), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertEquals(1.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(1770.9433, complex11.getReal(), 0.01);
      
      Complex complex19 = complex1.divide((-2112.810610636319));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex5));
      assertNotNull(complex19);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex15);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex5);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-4.733031891101817E-4), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isNaN());
      assertEquals(2.240159088218684E-7, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      
      Complex complex20 = complex0.cosh();
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex10));
      assertNotNull(complex20);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex10);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(0.5403023058681398, complex20.getReal(), 0.01);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ONE.reciprocal();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = (Complex)complex1.ZERO.readResolve();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      
      Complex complex3 = complex1.atan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.7853981633974483, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      
      Complex complex5 = complex4.multiply((-2134));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      
      Complex complex6 = complex4.NaN.multiply(1405.409339);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      complex5.hashCode();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      
      Complex complex7 = complex0.subtract((double) (-2134));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex7.NaN.cos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      double double0 = complex7.INF.abs();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex9 = complex0.sin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex4.log();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      Complex complex11 = complex10.NaN.tanh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex11);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex5);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex5);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex6);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      Complex complex12 = Complex.valueOf((double) (-2134), 638.73);
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertNotNull(complex12);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertEquals(638.73, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-2134.0), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = complex12.sqrt();
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertNotNull(complex13);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertEquals(638.73, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-2134.0), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(46.69871225527721, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(6.838839543458932, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      
      Complex complex14 = complex11.multiply(complex4);
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex3));
      assertNotNull(complex14);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex5);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertSame(complex14, complex10);
      assertNotSame(complex14, complex12);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex13);
      assertSame(complex10, complex11);
      assertSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex12);
      assertSame(complex10, complex6);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex14);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex8);
      assertSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex6);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      complex12.hashCode();
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertEquals(638.73, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-2134.0), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.NaN.cosh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.cosh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      
      String string0 = complex2.I.toString();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals("(0.0, 1.0)", string0);
      assertNotNull(string0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      
      Complex complex3 = complex0.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex3.ONE.add(Double.NaN);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = Complex.valueOf(Double.NaN, Double.NaN);
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertSame(complex5, complex4);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex3.sqrt();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex6.cos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex3.getField();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      
      Complex complex8 = Complex.valueOf((-1288.4069719));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertNotNull(complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals((-1288.4069719), complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex4.sin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertSame(complex4, complex5);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex1);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      boolean boolean0 = complex7.isInfinite();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.5403023058681398, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      double double0 = complex8.abs();
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertEquals(1288.4069719, double0, 0.01);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals((-1288.4069719), complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex10 = complex2.createComplex(Double.NaN, Double.NaN);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex5);
      assertSame(complex2, complex1);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      Complex complex11 = complex9.acos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex10));
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertSame(complex4, complex5);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex10);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex1);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex5);
      assertSame(complex11, complex2);
      assertSame(complex11, complex4);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      double double1 = complex3.getImaginary();
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(-0.0, double1, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Complex complex0 = new Complex((-1470.46499066714));
      Complex complex1 = complex0.I.tanh();
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.NaN.tan();
      Complex complex3 = complex0.conjugate();
      Complex complex4 = complex2.ZERO.exp();
      Complex complex5 = complex3.ZERO.log();
      assertTrue(complex5.isInfinite());
      
      Complex complex6 = complex3.tanh();
      Complex complex7 = complex6.ONE.acos();
      Complex complex8 = complex7.ZERO.asin();
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals((-1.0), complex6.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex2.cosh();
      Complex complex10 = complex9.multiply(321);
      Complex complex11 = complex10.ZERO.multiply(558);
      Complex complex12 = complex11.pow((-1470.46499066714));
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      
      Complex complex13 = Complex.valueOf(0.0, 0.0);
      double double0 = complex4.getArgument();
      assertEquals(0.0, double0, 0.01);
      
      Complex complex14 = complex2.sin();
      complex10.hashCode();
      assertTrue(complex10.equals((Object)complex12));
      
      complex13.exp();
      Complex complex15 = complex13.sqrt1z();
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex15.equals((Object)complex14));
  }
}
