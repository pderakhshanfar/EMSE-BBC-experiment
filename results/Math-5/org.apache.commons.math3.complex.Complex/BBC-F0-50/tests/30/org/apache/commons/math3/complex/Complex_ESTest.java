/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 12:50:46 GMT 2021
 */

package org.apache.commons.math3.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Complex_ESTest extends Complex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1078.6382287761), 186.525364);
      Complex complex1 = complex0.ONE.sin();
      complex0.getField();
      Complex complex2 = complex0.reciprocal();
      complex1.getArgument();
      complex2.INF.subtract(complex1);
      Complex complex3 = complex2.INF.log();
      Complex complex4 = complex1.cos();
      Complex complex5 = complex4.reciprocal();
      complex5.ZERO.abs();
      Complex complex6 = complex1.add(0.0);
      Complex complex7 = complex3.multiply(complex2);
      complex4.multiply(186.525364);
      Complex complex8 = complex3.divide(complex0);
      complex5.acos();
      Complex complex9 = complex7.reciprocal();
      Complex complex10 = complex3.log();
      Complex complex11 = complex0.pow((-1078.6382287761));
      complex11.ZERO.subtract(complex7);
      Complex complex12 = complex7.cos();
      Complex complex13 = complex12.pow(complex8);
      Complex complex14 = complex7.sinh();
      complex14.NaN.toString();
      complex10.toString();
      complex12.INF.multiply(0.0);
      complex14.sqrt1z();
      Complex complex15 = complex4.add(complex11);
      complex15.cosh();
      complex6.asin();
      complex13.negate();
      complex15.add(186.525364);
      complex1.sin();
      complex0.abs();
      complex15.log();
      Complex complex16 = complex9.atan();
      complex16.abs();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = new Complex(1.4615985810260016E275);
      complex1.createComplex(3955.0988, 117.5998);
      complex1.tanh();
      complex1.sqrt1z();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = complex0.createComplex(20.0, 1.2662018663984825E-17);
      complex1.tanh();
      complex1.sqrt1z();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.log();
      complex1.INF.sinh();
      Complex complex2 = complex0.createComplex(1449.295547091234, 1449.295547091234);
      Complex complex3 = complex0.cosh();
      Complex complex4 = complex0.log();
      Complex complex5 = complex4.NaN.atan();
      complex5.ONE.pow(complex2);
      complex5.ZERO.toString();
      complex0.I.reciprocal();
      double double0 = 0.0;
      Complex.valueOf(0.0, 1449.295547091234);
      Complex complex6 = complex3.pow(1449.295547091234);
      double double1 = (-3925.37447629113);
      Complex complex7 = complex6.INF.pow((-3925.37447629113));
      Complex complex8 = complex7.ZERO.multiply(Double.NaN);
      complex0.conjugate();
      complex2.subtract(1159.5546020262);
      complex0.getField();
      complex8.cosh();
      Complex complex9 = complex0.cosh();
      complex9.INF.abs();
      complex9.NaN.getArgument();
      double double2 = 20.0;
      Complex.valueOf(20.0);
      try { 
        complex8.nthRoot((-36));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -36
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.ONE.sqrt1z();
      Complex complex2 = complex0.ZERO.tan();
      complex0.nthRoot(37);
      Complex complex3 = complex0.INF.asin();
      Complex complex4 = complex0.reciprocal();
      Complex complex5 = complex4.pow(1071.65722182065);
      Complex complex6 = complex5.multiply(37);
      complex5.I.log();
      complex4.INF.divide((double) 37);
      complex0.NaN.pow(complex1);
      complex0.divide((double) 37);
      complex2.createComplex(37, 1557.0513233542047);
      complex4.ZERO.asin();
      complex2.createComplex(Double.POSITIVE_INFINITY, 37);
      complex3.NaN.abs();
      Complex.valueOf(0.5324647426605225);
      complex6.divide(Double.POSITIVE_INFINITY);
      Complex complex7 = new Complex((-57.451795901), Double.POSITIVE_INFINITY);
      complex7.multiply(860);
      Complex.valueOf(3053.845242902522, 0.9985313415527344);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2563.9), (-2563.9));
      Complex complex1 = complex0.createComplex(1534921.2885610003, (-2563.9));
      Complex complex2 = complex1.createComplex(1.9999999144057488, 20.0);
      Complex complex3 = complex2.tan();
      complex2.add(complex3);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.ONE;
      Complex complex2 = complex1.multiply(2.0);
      complex0.readResolve();
      Complex complex3 = complex0.tanh();
      Complex complex4 = complex1.tan();
      Complex complex5 = complex3.asin();
      complex2.readResolve();
      Complex complex6 = complex0.sqrt();
      complex5.createComplex(2.0, 2.0);
      Complex complex7 = Complex.INF;
      Complex complex8 = complex7.divide(Double.POSITIVE_INFINITY);
      complex8.tanh();
      complex4.tan();
      Complex complex9 = Complex.valueOf(-0.0, 2766.4289754999095);
      complex9.acos();
      Complex complex10 = Complex.ZERO;
      complex10.abs();
      complex6.sqrt();
      complex5.reciprocal();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2991.8465086791));
      Complex complex1 = Complex.valueOf((-2991.8465086791), 295.80869746998565);
      complex1.ZERO.abs();
      Complex complex2 = complex0.ZERO.add(complex1);
      complex2.NaN.subtract(complex1);
      Complex complex3 = complex2.INF.sin();
      Complex complex4 = complex3.I.sinh();
      complex1.ZERO.multiply(1228);
      complex2.I.sqrt();
      Complex complex5 = complex0.log();
      complex5.NaN.asin();
      Complex complex6 = complex2.add(295.80869746998565);
      Complex complex7 = complex6.cos();
      Complex complex8 = complex3.pow(295.80869746998565);
      complex4.NaN.multiply((-2991.8465086791));
      complex8.ONE.tan();
      complex8.I.toString();
      Complex complex9 = complex3.reciprocal();
      complex4.nthRoot(943);
      Complex complex10 = complex7.exp();
      complex0.multiply(complex9);
      Complex complex11 = complex6.sqrt();
      complex7.asin();
      complex11.sqrt1z();
      Complex complex12 = complex0.add((double) 943);
      Complex complex13 = complex12.ZERO.conjugate();
      Complex complex14 = complex13.INF.sqrt1z();
      complex8.log();
      Complex complex15 = complex3.sinh();
      complex12.ZERO.getField();
      complex15.ZERO.multiply(1.3594057956219485E-8);
      complex11.pow(complex14);
      complex13.tanh();
      complex10.add(complex15);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = new Complex(723.06445054, Double.NaN);
      Complex complex2 = complex0.I.pow(complex1);
      complex2.INF.negate();
      complex0.multiply(1612);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Complex complex0 = Complex.I;
      complex0.divide((double) 1612);
      Complex complex1 = new Complex(Double.POSITIVE_INFINITY);
      Complex complex2 = Complex.NaN;
      complex1.sqrt();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.createComplex(Double.POSITIVE_INFINITY, 225);
      complex1.abs();
      Complex complex2 = Complex.I;
      Complex complex3 = complex1.divide(6.529913638799005E-5);
      complex3.NaN.tanh();
      Complex complex4 = complex0.multiply(225);
      Complex complex5 = Complex.INF;
      Complex complex6 = Complex.valueOf((-605.0332756), Double.POSITIVE_INFINITY);
      Complex complex7 = complex4.multiply(complex6);
      complex7.asin();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.ZERO;
      Complex complex2 = complex1.pow(complex0);
      complex2.divide((-755.56404049));
      Complex complex3 = complex2.createComplex((-755.56404049), 1557.0513233542047);
      Complex complex4 = complex3.createComplex((-755.56404049), Double.POSITIVE_INFINITY);
      complex3.abs();
      Complex complex5 = Complex.I;
      Complex complex6 = complex3.divide(1557.0513233542047);
      complex6.multiply(308);
      Complex complex7 = Complex.INF;
      complex4.multiply(complex1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Complex complex0 = new Complex((-20.0));
      Complex complex1 = new Complex((-20.0));
      complex1.toString();
      Complex complex2 = Complex.valueOf((-1678.619105921489), (-1.826536544E7));
      Complex complex3 = Complex.NaN;
      Complex complex4 = complex1.subtract(complex3);
      complex4.acos();
      Complex.valueOf((-1.826536544E7));
      complex4.add(1.0);
      complex2.I.pow((-610.558669));
      Complex complex5 = Complex.valueOf(1.0, 4.2634204358490415E-9);
      complex5.acos();
      Complex complex6 = Complex.I;
      Complex complex7 = Complex.ONE;
      complex7.createComplex((-1.826536544E7), 4.413745413236018E-197);
      complex5.pow(complex1);
      complex2.nthRoot(1152);
      Complex complex8 = new Complex(20.864908639987497);
      complex7.add(complex8);
      complex6.acos();
      complex6.multiply((-1.826536544E7));
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = new Complex((-1.0), (-1.0));
      Complex complex2 = complex0.ZERO.subtract(complex1);
      Complex complex3 = Complex.I;
      complex0.multiply(complex3);
      // Undeclared exception!
      complex2.nthRoot(1175771590);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = new Complex((-755.56404049), 1.4535713195800781);
      complex1.subtract(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Complex complex0 = new Complex((-20.0));
      Complex complex1 = new Complex((-20.0));
      complex1.toString();
      Complex complex2 = Complex.valueOf((-1678.619105921489), (-1.826536544E7));
      complex2.ZERO.hashCode();
      Complex complex3 = Complex.NaN;
      Complex complex4 = complex1.subtract(complex3);
      Complex complex5 = complex4.acos();
      complex5.ZERO.getField();
      Complex.valueOf((-1678.619105921489), (-20.0));
      complex1.tanh();
      complex2.tan();
      Complex complex6 = Complex.NaN;
      complex2.cos();
      Complex complex7 = new Complex(1307.79308);
      complex4.add(complex7);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.reciprocal();
      Complex complex2 = complex1.pow((-15.52596258529873));
      Complex complex3 = Complex.valueOf(5.055224959032211E-240, 5.055224959032211E-240);
      complex3.tanh();
      Complex complex4 = complex1.tan();
      Complex complex5 = Complex.NaN;
      complex3.divide(complex4);
      complex0.cos();
      Complex complex6 = Complex.valueOf(2989.187140014702);
      complex2.add(complex6);
      complex4.reciprocal();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.ONE.sqrt1z();
      Complex complex2 = complex0.ZERO.tan();
      complex0.nthRoot(37);
      Complex complex3 = complex0.INF.asin();
      Complex complex4 = complex0.reciprocal();
      Complex complex5 = complex4.pow(1071.65722182065);
      Complex complex6 = complex5.multiply(37);
      Complex complex7 = complex5.I.log();
      complex4.INF.divide((double) 37);
      Complex complex8 = complex0.NaN.pow(complex1);
      Complex complex9 = complex0.divide((double) 37);
      Complex complex10 = complex2.createComplex(37, 1557.0513233542047);
      complex2.createComplex(Double.POSITIVE_INFINITY, 37);
      complex3.NaN.abs();
      Complex.valueOf(0.5324647426605225);
      complex6.divide(Double.POSITIVE_INFINITY);
      Complex complex11 = complex4.multiply(2338);
      Complex complex12 = complex10.sqrt1z();
      Complex complex13 = Complex.valueOf((-273.305619));
      Complex complex14 = complex9.cos();
      complex11.log();
      Complex complex15 = complex8.sinh();
      complex13.getField();
      complex4.multiply(1141);
      complex3.sinh();
      complex14.exp();
      complex15.add(1557.0513233542047);
      complex12.add(complex7);
      Complex.valueOf(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.sqrt();
      complex1.cos();
      Complex complex2 = Complex.valueOf(7.90594243412116E-12, (-2902.8416685));
      Complex complex3 = complex2.cosh();
      complex2.createComplex(Double.NaN, (-2077.132342402772));
      complex3.reciprocal();
      Complex complex4 = new Complex((-2902.8416685));
      complex3.sqrt1z();
      Complex complex5 = Complex.ZERO;
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Complex.valueOf((-605.589330625076));
      Complex.valueOf(Double.NaN, (-605.589330625076));
      Complex.valueOf((-605.589330625076));
      Complex.valueOf(3.7734658676841284E20, (-240.05551420009604));
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Complex complex0 = Complex.valueOf(6.283185307179586, (-2699.70994));
      Complex complex1 = complex0.cos();
      Complex complex2 = complex0.cosh();
      complex2.createComplex(543.2093200085, 1292.9945716690218);
      complex0.reciprocal();
      complex1.tanh();
      complex1.sqrt1z();
      Complex complex3 = Complex.ZERO;
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.sqrt();
      complex1.ONE.hashCode();
      Complex complex2 = Complex.INF;
      complex2.multiply(complex0);
      Complex complex3 = Complex.valueOf(4543.1063319, 4.539993096841499E-5);
      Complex complex4 = complex3.cos();
      complex4.NaN.tan();
      Complex complex5 = Complex.ZERO;
      complex3.multiply((-1832));
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = new Complex(1.2015275955200195, Double.POSITIVE_INFINITY);
      Complex complex2 = complex0.sin();
      complex2.multiply(complex0);
      Complex.valueOf(1.2015275955200195, Double.POSITIVE_INFINITY);
      Complex complex3 = new Complex(Double.POSITIVE_INFINITY, 1.2015275955200195);
      complex3.cos();
      Complex complex4 = Complex.ZERO;
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.divide((-3262.612));
      Complex complex2 = new Complex(1.4909508228302002);
      Complex complex3 = complex2.reciprocal();
      complex3.ONE.sinh();
      Complex complex4 = Complex.valueOf(2.5346947846365435E-89, 1.4909508228302002);
      Complex complex5 = complex4.tanh();
      complex5.add(2.5346947846365435E-89);
      Complex complex6 = new Complex((-1063.03));
      complex5.tan();
      complex2.multiply(Double.POSITIVE_INFINITY);
      Complex complex7 = complex1.tan();
      complex2.tan();
      complex7.createComplex((-1384.62513752), 741.896);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Complex complex0 = new Complex((-15.52596258529873));
      Complex complex1 = complex0.I.atan();
      Complex complex2 = complex1.INF.atan();
      Complex complex3 = new Complex((-15.52596258529873));
      complex3.acos();
      complex0.getField();
      Complex complex4 = Complex.valueOf(1.526100002923062E263);
      Complex complex5 = Complex.valueOf((-6.905990750285027E-8));
      complex5.add((-15.52596258529873));
      Complex complex6 = complex3.acos();
      Complex complex7 = Complex.I;
      Complex complex8 = complex4.subtract(complex7);
      complex7.createComplex((-15.52596258529873), 1.526100002923062E263);
      complex7.getArgument();
      Complex complex9 = complex2.pow(complex6);
      complex4.nthRoot(1152);
      complex8.acos();
      complex9.multiply(complex0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex.valueOf((-755.56404049), (-755.56404049));
      Complex complex1 = Complex.valueOf((-755.56404049), 0.6634936664140814);
      complex1.subtract(complex0);
      Complex complex2 = complex0.acos();
      complex0.getField();
      Complex complex3 = Complex.valueOf((-6.905990750285027E-8));
      Complex complex4 = complex0.add(Double.NaN);
      Complex complex5 = complex1.acos();
      Complex complex6 = Complex.I;
      complex6.subtract(complex4);
      Complex complex7 = complex2.createComplex(7.813044552050569E-215, 0.5501441609120142);
      complex5.getArgument();
      Complex complex8 = new Complex((-3552.208854259), (-3552.208854259));
      Complex complex9 = complex3.pow(complex8);
      complex5.nthRoot(1152);
      complex6.acos();
      complex7.multiply(complex9);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.ONE;
      Complex complex2 = complex1.I.exp();
      complex2.ONE.getField();
      Complex complex3 = complex1.multiply(2204);
      complex3.ONE.cos();
      Complex complex4 = Complex.valueOf(Double.NaN);
      complex4.nthRoot(37);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Complex complex0 = new Complex((-3111.8748167257095));
      Complex complex1 = Complex.ZERO;
      complex1.NaN.abs();
      complex0.I.multiply(complex1);
      double double0 = (-3463.38298);
      Complex.valueOf((-3463.38298));
      Complex.valueOf(1340.293792025, Double.NaN);
      Complex complex2 = complex0.pow((-3111.8748167257095));
      Complex complex3 = complex0.multiply((-3111.8748167257095));
      Complex complex4 = complex2.NaN.pow((-3411.622156318076));
      complex0.INF.log();
      complex0.ZERO.log();
      complex4.I.negate();
      Complex complex5 = complex3.NaN.divide(complex0);
      complex2.sinh();
      complex5.I.cos();
      int int0 = 0;
      try { 
        complex0.ONE.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.INF.multiply(20.0);
      complex0.getField();
      Complex complex2 = Complex.valueOf(0.0033973936669727256, (-2609.726078417834));
      complex2.ONE.multiply(complex1);
      Complex complex3 = complex2.pow(Double.POSITIVE_INFINITY);
      complex3.reciprocal();
      Complex.valueOf((-963.2220568003842));
      complex2.multiply(1129);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-755.56404049), (-755.56404049));
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.divide(complex1);
      Complex complex3 = complex1.acos();
      Complex complex4 = Complex.I;
      Complex complex5 = complex3.subtract(complex1);
      complex5.createComplex(Double.POSITIVE_INFINITY, 2851.21884);
      complex5.getArgument();
      Complex complex6 = Complex.NaN;
      Complex complex7 = complex4.pow(complex6);
      complex1.nthRoot(2644);
      complex2.acos();
      complex3.multiply(complex7);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Complex complex0 = Complex.I;
      complex0.divide(1.0);
      Complex complex1 = new Complex((-1678.619105921489));
      complex0.reciprocal();
      Complex complex2 = Complex.valueOf(2196.971913892176, (-20.0));
      complex0.tanh();
      Complex complex3 = new Complex((-20.0));
      Complex complex4 = complex2.tan();
      Complex complex5 = Complex.NaN;
      Complex complex6 = new Complex((-1678.619105921489), (-420.0));
      complex4.acos();
      complex3.acos();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Complex complex0 = new Complex(3488.186709818, 3488.186709818);
      complex0.NaN.divide(3488.186709818);
      Complex complex1 = complex0.divide(2.3250694274902344);
      Complex complex2 = complex1.NaN.divide(1.0000000000000002);
      complex2.add(2.3250694274902344);
      Complex complex3 = complex2.pow(complex1);
      complex3.add(1.0000000000000002);
      Complex complex4 = complex1.multiply(complex0);
      complex4.NaN.exp();
      Complex.valueOf(2.3250694274902344);
      complex2.negate();
      Complex complex5 = complex0.cosh();
      Complex complex6 = complex2.tanh();
      complex2.I.tanh();
      Complex.valueOf(3.286204107494526, 0.29289321881345254);
      complex2.NaN.readResolve();
      Complex.valueOf(3.286204107494526, 3488.186709818);
      Complex complex7 = complex2.cosh();
      complex7.ONE.createComplex(3488.186709818, 2.3250694274902344);
      Complex complex8 = complex1.acos();
      complex3.toString();
      complex5.subtract(2.3250694274902344);
      complex8.pow(complex6);
      complex3.sin();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.sqrt();
      Complex complex2 = Complex.INF;
      Complex complex3 = complex1.ONE.add(3244.7295);
      Complex complex4 = complex1.subtract(complex2);
      complex1.createComplex((-1.0), 0.0);
      complex4.getArgument();
      Complex complex5 = complex1.pow(complex2);
      complex0.nthRoot(1152);
      complex3.acos();
      complex1.multiply(complex5);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Complex complex0 = new Complex(0.9999999999177827, 0.9999999999177827);
      Complex complex1 = complex0.sin();
      Complex complex2 = complex0.reciprocal();
      Complex complex3 = Complex.valueOf(0.9999999999177827, 0.9999999999177827);
      complex3.tanh();
      Complex complex4 = new Complex(Double.NaN);
      Complex complex5 = complex2.acos();
      complex5.getImaginary();
      complex4.add(complex1);
      Complex complex6 = Complex.valueOf(3.222934356098051);
      Complex complex7 = complex3.tan();
      complex7.createComplex(Double.NaN, 0.9999999999177827);
      complex6.subtract(complex4);
      Complex complex8 = Complex.NaN;
      Complex complex9 = new Complex(1.9792597720953414E-32, 1912.14);
      complex8.acos();
      complex5.reciprocal();
      Complex complex10 = complex5.acos();
      complex10.tanh();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      double double0 = 7.924242330665303E89;
      Complex complex0 = new Complex(7.924242330665303E89);
      try { 
        complex0.I.multiply((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1825.28839786), 1.0);
      Complex complex1 = complex0.sin();
      complex1.toString();
      complex0.getField();
      Complex complex2 = complex1.acos();
      complex0.getImaginary();
      complex1.add(complex2);
      complex2.sqrt();
      Complex complex3 = complex1.tan();
      Complex complex4 = new Complex(133.854);
      complex4.subtract(complex3);
      complex0.cos();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.multiply((-2248.1484334));
      Complex complex2 = complex1.createComplex(0.0, (-3331675.735362326));
      Complex complex3 = complex1.add((-1179.846581));
      Complex complex4 = complex3.ZERO.divide((-3331675.735362326));
      complex2.INF.sqrt1z();
      Complex complex5 = complex3.reciprocal();
      Complex complex6 = complex5.tanh();
      Complex complex7 = new Complex((-3331675.735362326));
      complex4.acos();
      complex5.getImaginary();
      complex2.add(complex6);
      Complex complex8 = Complex.ONE;
      complex8.sqrt();
      Complex complex9 = new Complex((-2248.1484334), (-2248.1484334));
      complex9.tan();
      complex8.subtract(complex0);
      Complex complex10 = Complex.NaN;
      Complex complex11 = complex8.acos();
      complex11.reciprocal();
      complex10.acos();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Complex complex0 = new Complex(Double.POSITIVE_INFINITY);
      complex0.atan();
      Complex complex1 = Complex.valueOf((-755.56404049), 559.251512761273);
      Complex complex2 = Complex.ONE;
      Complex complex3 = Complex.I;
      complex1.ONE.toString();
      Complex complex4 = complex3.multiply(complex0);
      complex1.getReal();
      try { 
        complex4.nthRoot((-3906));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -3,906
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.multiply((-2248.1484334));
      Complex complex2 = Complex.valueOf((-1180.632087139226), (-1180.632087139226));
      complex0.cos();
      complex0.createComplex((-2248.1484334), (-54.6));
      Complex complex3 = new Complex((-54.6), 21.864908639987497);
      Complex complex4 = complex3.add(1.159150872494107E-8);
      Complex complex5 = complex2.reciprocal();
      complex1.tanh();
      complex4.sqrt1z();
      complex2.log();
      complex5.reciprocal();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.I;
      complex0.INF.pow(complex1);
      Complex complex2 = complex0.sqrt();
      Complex complex3 = Complex.INF;
      complex3.ONE.divide(Double.NaN);
      complex2.reciprocal();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Complex complex0 = Complex.I;
      complex0.sqrt();
      Complex complex1 = complex0.createComplex(1.1100063205601094E13, 1825.28839786);
      complex1.add(1825.28839786);
      Complex complex2 = complex0.reciprocal();
      complex1.tanh();
      complex2.sqrt1z();
      complex2.log();
      complex2.reciprocal();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Complex complex0 = new Complex(0.4171157479286194);
      complex0.I.atan();
      Complex complex1 = Complex.valueOf(Double.POSITIVE_INFINITY, (-1488.985266));
      Complex complex2 = new Complex(8.098545495417704E274, 0.4171157479286194);
      complex2.multiply(complex1);
      Complex complex3 = complex0.log();
      complex3.subtract(1822.159558382);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.INF;
      Complex complex2 = new Complex((-2267.4));
      Complex complex3 = complex0.INF.subtract((-1421.2175626401486));
      Complex complex4 = complex3.I.atan();
      Complex complex5 = complex0.INF.pow(complex2);
      Complex complex6 = complex5.ONE.sin();
      complex0.toString();
      complex6.I.getField();
      Complex complex7 = complex0.acos();
      complex6.getImaginary();
      Complex complex8 = complex4.add(complex6);
      complex1.sqrt();
      complex7.tan();
      complex1.subtract(complex4);
      Complex complex9 = Complex.NaN;
      complex9.acos();
      complex8.getArgument();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.valueOf(755.56404049, (-755.56404049));
      Complex complex2 = complex0.cos();
      complex1.I.cos();
      complex1.createComplex(755.56404049, (-20.0));
      Complex complex3 = complex1.add((-755.56404049));
      Complex complex4 = complex2.reciprocal();
      complex4.tanh();
      Complex complex5 = complex3.sqrt1z();
      complex5.ZERO.readResolve();
      complex2.log();
      complex2.toString();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.valueOf((-755.56404049), (-755.56404049));
      Complex complex2 = Complex.I;
      Complex complex3 = complex2.pow(complex1);
      Complex complex4 = complex1.sin();
      complex1.toString();
      complex4.getField();
      complex1.acos();
      complex4.getImaginary();
      complex4.add(complex3);
      Complex complex5 = Complex.valueOf(21.864908639987497);
      Complex complex6 = complex5.sqrt();
      complex3.tan();
      complex6.subtract(complex5);
      Complex complex7 = Complex.NaN;
      complex6.acos();
      complex4.reciprocal();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Complex complex0 = Complex.valueOf(3760.67359176676, 3760.67359176676);
      Complex complex1 = complex0.ONE.log();
      Complex complex2 = complex0.tan();
      Complex complex3 = complex1.subtract(3760.67359176676);
      complex2.log();
      complex1.reciprocal();
      Complex complex4 = complex0.asin();
      Complex.valueOf(3760.67359176676);
      complex1.subtract(complex2);
      complex4.multiply(3760.67359176676);
      complex2.pow(3760.67359176676);
      Complex complex5 = complex3.exp();
      complex5.acos();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Complex complex0 = new Complex(4273.8);
      Complex complex1 = Complex.INF;
      Complex complex2 = complex1.createComplex(1.1102230246251565E-16, (-2267.4));
      complex0.subtract(complex1);
      Complex complex3 = complex1.tanh();
      complex2.equals((Object) null);
      complex3.add(complex2);
      Complex complex4 = new Complex((-2267.4));
      complex4.pow(complex0);
      Complex complex5 = Complex.ZERO;
      complex5.add(0.33333333333333337);
      complex3.getReal();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1825.28839786), 1.0);
      complex0.getReal();
      Complex complex1 = complex0.exp();
      Complex complex2 = complex1.sqrt1z();
      Complex complex3 = complex2.subtract(complex0);
      Complex complex4 = complex1.sqrt1z();
      Complex complex5 = Complex.INF;
      complex5.createComplex((-29.2), 1788);
      complex3.sinh();
      complex2.toString();
      Complex.valueOf((-2267.4));
      Complex.valueOf(0.7071067811865475);
      complex4.log();
      complex3.subtract(323.1062078373);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.multiply((-7.667998948729528E-9));
      Complex complex2 = complex0.createComplex((-1179.846581), (-7.667998948729528E-9));
      Complex complex3 = complex0.subtract(complex2);
      Complex complex4 = complex1.tanh();
      complex1.equals(complex3);
      Complex complex5 = complex4.add(complex3);
      Complex complex6 = complex3.pow(complex4);
      complex2.log();
      complex6.subtract((-1179.846581));
      complex2.sqrt();
      complex5.createComplex((-1179.846581), (-7.667998948729528E-9));
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.valueOf((-755.56404049), (-755.56404049));
      Complex complex2 = complex0.cos();
      Complex complex3 = complex2.createComplex(21.864908639987497, (-755.56404049));
      Complex complex4 = complex3.add(1825.28839786);
      Complex complex5 = complex4.reciprocal();
      complex4.nthRoot(965);
      Complex complex6 = complex2.asin();
      complex5.subtract(complex4);
      complex1.multiply((-755.56404049));
      complex6.multiply(2144334193);
      try { 
        complex3.pow((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.multiply((-2248.1484334));
      Complex complex2 = Complex.I;
      Complex complex3 = complex0.subtract(complex2);
      Complex complex4 = complex1.tanh();
      complex1.equals(complex3);
      complex4.add(complex3);
      complex3.pow(complex4);
      complex1.add((-2248.1484334));
      complex2.getReal();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      Complex complex1 = Complex.I;
      complex0.equals(complex1);
      complex0.getField();
      complex0.atan();
      complex1.reciprocal();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = Complex.valueOf((-755.56404049), (-755.56404049));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals((-755.56404049), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-755.56404049), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.cos();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.createComplex(21.864908639987497, (-755.56404049));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals((-755.56404049), complex3.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex3.add(1825.28839786);
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals((-755.56404049), complex3.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1847.1533064999876, complex4.getReal(), 0.01);
      assertEquals((-755.56404049), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex4.reciprocal();
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals((-755.56404049), complex3.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1847.1533064999876, complex4.getReal(), 0.01);
      assertEquals((-755.56404049), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(4.6377649506783254E-4, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(1.8970425533423069E-4, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex3.tanh();
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals((-755.56404049), complex3.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.ZERO.sqrt1z();
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals((-755.56404049), complex3.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex4.log();
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals((-755.56404049), complex3.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1847.1533064999876, complex4.getReal(), 0.01);
      assertEquals((-755.56404049), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-0.3882771715093161), complex8.getImaginary(), 0.01);
      assertEquals(7.598754396592675, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      
      complex2.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex9 = complex2.pow((-755.56404049));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(4.574380735864753E-143, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = (Complex)complex1.readResolve();
      assertNotNull(complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertEquals((-755.56404049), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-755.56404049), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-755.56404049), complex10.getImaginary(), 0.01);
      assertEquals((-755.56404049), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.sqrt();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex1.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.sin();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.1752011936438014, complex2.getImaginary(), 0.01);
      
      String string0 = complex1.toString();
      assertNotNull(string0);
      assertEquals("(0.7071067811865476, 0.7071067811865475)", string0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      
      ComplexField complexField1 = complex1.getField();
      assertNotNull(complexField1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complexField1, complexField0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      
      Complex complex3 = Complex.NaN;
      assertNotNull(complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.acos();
      assertNotNull(complex4);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      double double0 = complex1.getImaginary();
      assertEquals(0.7071067811865475, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      
      Complex complex5 = complex4.add(complex3);
      assertNotNull(complex5);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex0.sqrt();
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.7071067811865475, complex6.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex1.tan();
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.82903227364117, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.42318427386994595, complex7.getReal(), 0.01);
      
      Complex complex8 = complex3.subtract(complex7);
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertSame(complex3, complex5);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex4);
      assertSame(complex8, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.82903227364117, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.42318427386994595, complex7.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      
      Complex complex9 = Complex.NaN;
      assertNotNull(complex9);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex3);
      assertSame(complex9, complex8);
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      
      Complex complex10 = complex8.acos();
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertSame(complex3, complex5);
      assertSame(complex3, complex10);
      assertSame(complex3, complex8);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex4);
      assertSame(complex8, complex3);
      assertSame(complex10, complex3);
      assertSame(complex10, complex5);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex8);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.82903227364117, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.42318427386994595, complex7.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      Complex complex11 = complex2.divide(1315.3260108943769);
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.1752011936438014, complex2.getImaginary(), 0.01);
      assertEquals(8.934676148042603E-4, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      
      Complex complex12 = Complex.valueOf((-391.36), 0.7071067811865475);
      assertNotNull(complex12);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertEquals((-391.36), complex12.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      
      Complex complex13 = complex12.conjugate();
      assertNotNull(complex13);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex11);
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertEquals((-391.36), complex12.getReal(), 0.01);
      assertEquals(0.7071067811865475, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals((-391.36), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals((-0.7071067811865475), complex13.getImaginary(), 0.01);
      
      Complex complex14 = complex1.multiply(complex5);
      assertNotNull(complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex3);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex1);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex10);
      assertNotSame(complex14, complex12);
      assertSame(complex14, complex9);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertSame(complex3, complex4);
      assertSame(complex3, complex14);
      assertSame(complex3, complex10);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex12);
      assertSame(complex4, complex10);
      assertSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex9);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex13);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex5);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertSame(complex5, complex9);
      assertSame(complex5, complex14);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertSame(complex5, complex3);
      assertSame(complex5, complex8);
      assertSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Complex complex0 = new Complex(4273.8);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(4273.8, complex0.getReal(), 0.01);
      
      Complex complex1 = Complex.valueOf(4273.8, 0.0);
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(4273.8, complex1.getReal(), 0.01);
      
      Complex complex2 = new Complex((-2267.4));
      assertNotNull(complex2);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.INF.subtract((-1455.73660668));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      
      Complex complex4 = complex3.I.atan();
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex0.INF.pow(complex2);
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = Complex.INF;
      assertNotNull(complex6);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = Complex.valueOf((-2267.4));
      assertNotNull(complex7);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals((-2267.4), complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      
      boolean boolean0 = complex6.equals(complex7);
      assertFalse(boolean0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals((-2267.4), complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex1.reciprocal();
      assertNotNull(complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(4273.8, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(2.3398380832046422E-4, complex8.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = Complex.valueOf((-755.56404049), (-755.56404049));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals((-755.56404049), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-755.56404049), complex1.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex0.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex2 = complex1.atan();
      assertNotNull(complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals((-755.56404049), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-755.56404049), complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.5701345693273894), complex2.getReal(), 0.01);
      assertEquals((-6.617570811091446E-4), complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex2.reciprocal();
      assertNotNull(complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals((-755.56404049), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-755.56404049), complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.5701345693273894), complex2.getReal(), 0.01);
      assertEquals((-6.617570811091446E-4), complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals((-0.636887972471999), complex3.getReal(), 0.01);
      assertEquals(2.684261170283879E-4, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1526.9227061482127, 1474.966);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.asin();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.NaN.atan();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      
      Complex complex3 = (Complex)complex2.ZERO.readResolve();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      
      double double0 = complex0.getReal();
      assertEquals(1526.9227061482127, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      
      Complex complex4 = complex1.NaN.exp();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      Complex complex5 = complex0.INF.sqrt1z();
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex5.NaN.subtract(complex2);
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex2);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex7 = complex6.I.sqrt1z();
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      
      List<Complex> list0 = complex6.NaN.nthRoot(1788);
      assertNotNull(list0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertFalse(list0.contains(complex1));
      assertTrue(list0.contains(complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      
      boolean boolean0 = complex1.isNaN();
      assertFalse(boolean0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex8 = complex0.acos();
      assertNotNull(complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals((-8.353720287727567), complex8.getImaginary(), 0.01);
      assertEquals(0.7680919413548093, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      
      double double1 = complex8.getImaginary();
      assertEquals((-8.353720287727567), double1, 0.01);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals((-8.353720287727567), complex8.getImaginary(), 0.01);
      assertEquals(0.7680919413548093, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex5.ZERO.add(complex4);
      assertNotNull(complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex6);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = Complex.ZERO;
      assertNotNull(complex10);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      
      Complex complex11 = complex10.add(complex1);
      assertNotNull(complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.802704385704528, complex11.getReal(), 0.01);
      assertEquals(8.35372028767317, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      
      Complex complex12 = complex0.pow(complex1);
      assertNotNull(complex12);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex11));
      assertEquals((-0.1582142726439574), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.7489535710095636, complex12.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex13 = complex7.cos();
      assertNotNull(complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex13);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(0.15594369476537437, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      
      Complex complex14 = complex8.createComplex(423.36, (-2150.55));
      assertNotNull(complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals((-2150.55), complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(423.36, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals((-8.353720287727567), complex8.getImaginary(), 0.01);
      assertEquals(0.7680919413548093, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      
      Complex complex15 = complex7.add((-1316.74022445675));
      assertNotNull(complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex13);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals((-1315.3260108943769), complex15.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      
      Complex complex16 = complex2.reciprocal();
      assertNotNull(complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex16);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex6);
      assertSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex2);
      assertSame(complex16, complex9);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex15);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      
      Complex complex17 = complex1.tanh();
      assertNotNull(complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex10);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(1.16585338772641, complex17.getReal(), 0.01);
      assertEquals((-0.4104140966903243), complex17.getImaginary(), 0.01);
      
      Complex complex18 = complex15.log();
      assertNotNull(complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex16);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex18);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex7);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex17);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex16);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex17);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex13);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex15));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex0.isInfinite());
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals((-1315.3260108943769), complex15.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(7.181839830915461, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(3.141592653589793, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = (Complex)complex0.readResolve();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      
      boolean boolean0 = complex0.equals(complex1);
      assertTrue(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex0.cosh();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.exp();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      
      Complex complex4 = Complex.INF;
      assertNotNull(complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      
      Complex complex5 = complex4.divide(complex1);
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = Complex.valueOf(0.0);
      assertNotNull(complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex5.createComplex(0.0, 0.0);
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex4.sinh();
      assertNotNull(complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = complex4.add((-137.1734806));
      assertNotNull(complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      
      Complex complex10 = complex5.reciprocal();
      assertNotNull(complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      
      Complex complex11 = complex7.tanh();
      assertNotNull(complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex12 = complex4.log();
      assertNotNull(complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.7853981633974483, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      
      complex8.hashCode();
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex10);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex13 = complex5.pow((-1323.370614352));
      assertNotNull(complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertSame(complex5, complex10);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex1);
      assertSame(complex13, complex5);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      
      Complex complex14 = complex9.reciprocal();
      assertNotNull(complex14);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex0);
      assertFalse(complex14.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex1));
      assertTrue(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.multiply((-2248.1484334));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.createComplex((-1179.846581), (-2248.1484334));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.subtract(complex2);
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex1.tanh();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      boolean boolean0 = complex1.equals(complex3);
      assertFalse(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex5 = complex4.add(complex3);
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1179.846581, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(2248.1484334, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      
      Complex complex6 = complex5.exp();
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1179.846581, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(2248.1484334, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex6.I.tanh();
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1179.846581, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(2248.1484334, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(1.557407724654902, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      
      List<Complex> list0 = complex3.nthRoot(2825);
      assertNotNull(list0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertFalse(list0.contains(complex4));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(2825, list0.size());
      assertFalse(list0.isEmpty());
      
      Complex complex8 = complex5.asin();
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1179.846581, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(2248.1484334, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(8.532648609287355, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.48329654780949777, complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.subtract(complex4);
      assertNotNull(complex9);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1179.846581, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(2248.1484334, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(8.532648609287355, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.48329654780949777, complex8.getReal(), 0.01);
      assertEquals(8.532648609287355, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.48329654780949777, complex9.getReal(), 0.01);
      
      Complex complex10 = complex2.multiply(3573.0);
      assertNotNull(complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals((-4215591.833913), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals((-8032634.352538201), complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex5.sqrt1z();
      assertNotNull(complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1179.846581, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(2248.1484334, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-1179.8464894852489), complex11.getImaginary(), 0.01);
      assertEquals(2248.1486077775535, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1804.209550126535);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      
      Complex complex1 = (Complex)complex0.ZERO.readResolve();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.tanh();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      
      Complex complex3 = complex2.tan();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.557407724654902, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.I.cosh();
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.557407724654902, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex0.pow(complex3);
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.557407724654902, complex3.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(117860.0150371292, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = Complex.valueOf(1548.6367);
      assertNotNull(complex6);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.isInfinite());
      assertEquals(1548.6367, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.cos();
      assertNotNull(complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex6.isInfinite());
      assertEquals(1548.6367, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals((-0.9858410839487852), complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = Complex.ZERO;
      assertNotNull(complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.createComplex((-2177.9374334), (-1159.653237834201));
      assertNotNull(complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals((-1159.653237834201), complex9.getImaginary(), 0.01);
      assertEquals((-2177.9374334), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      
      Complex complex10 = complex4.add(1.5707963267948966);
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1.557407724654902, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(2.1110986326630363, complex10.getReal(), 0.01);
      
      Complex complex11 = complex9.reciprocal();
      assertNotNull(complex11);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals((-1159.653237834201), complex9.getImaginary(), 0.01);
      assertEquals((-2177.9374334), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals((-3.5773051066113806E-4), complex11.getReal(), 0.01);
      assertEquals(1.9047532706789234E-4, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      
      Complex complex12 = complex9.tanh();
      assertNotNull(complex12);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals((-1159.653237834201), complex9.getImaginary(), 0.01);
      assertEquals((-2177.9374334), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-1.0), complex12.getReal(), 0.01);
      
      Complex complex13 = complex12.log();
      assertNotNull(complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals((-1159.653237834201), complex9.getImaginary(), 0.01);
      assertEquals((-2177.9374334), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-1.0), complex12.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(3.141592653589793, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getReal(), 0.01);
      
      complex1.hashCode();
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex14 = complex1.pow(1548.6367);
      assertNotNull(complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.multiply((-2248.1484334));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.createComplex((-1179.846581), (-2248.1484334));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.subtract(complex2);
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      boolean boolean0 = complex1.equals(complex3);
      assertFalse(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      ComplexField complexField0 = complex0.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex4 = complex0.acos();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals(1.5707963267948966, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      double double0 = complex3.getImaginary();
      assertEquals(2248.1484334, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex5 = complex2.add(complex3);
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = Complex.ONE;
      assertNotNull(complex6);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex6.sqrt();
      assertNotNull(complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getReal(), 0.01);
      
      Complex complex8 = complex0.tan();
      assertNotNull(complex8);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      
      Complex complex9 = Complex.valueOf(2248.1484334);
      assertNotNull(complex9);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex9.subtract(complex0);
      assertNotNull(complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex0.divide((-145.3745080549866));
      assertNotNull(complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      
      Complex complex12 = Complex.valueOf(0.5489565134048462, (-2248.1484334));
      assertNotNull(complex12);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertEquals((-2248.1484334), complex12.getImaginary(), 0.01);
      assertEquals(0.5489565134048462, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      
      Complex complex13 = Complex.I;
      assertNotNull(complex13);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(1.0, complex13.getImaginary(), 0.01);
      
      Complex complex14 = complex2.divide(complex4);
      assertNotNull(complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-1431.2157439196428), complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals((-751.1136618248892), complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1.5707963267948966, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      Complex complex15 = complex9.asin();
      assertNotNull(complex15);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex14);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex1);
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex1));
      assertEquals((-8.411009369022134), complex15.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      
      double double1 = complex6.getArgument();
      assertEquals(0.0, double1, 0.01);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex12);
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex12));
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      boolean boolean0 = complex0.equals(complex0);
      assertTrue(boolean0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.cosh();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.exp();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.divide(complex0);
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = Complex.valueOf(818.1414257555097);
      assertNotNull(complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(818.1414257555097, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex3.createComplex(0.0, 769.300415356);
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(769.300415356, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      
      Complex complex6 = Complex.valueOf(818.1414257555097, (-1213.5561584109319));
      assertNotNull(complex6);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertEquals(818.1414257555097, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-1213.5561584109319), complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.sinh();
      assertNotNull(complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertEquals(818.1414257555097, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-1213.5561584109319), complex6.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertTrue(complex7.isInfinite());
      
      String string0 = complex4.toString();
      assertNotNull(string0);
      assertEquals("(818.1414257555097, 0.0)", string0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(818.1414257555097, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      
      Complex complex8 = complex6.log();
      assertNotNull(complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertEquals(818.1414257555097, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-1213.5561584109319), complex6.getImaginary(), 0.01);
      assertEquals(7.288642524770392, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals((-0.9776180612257803), complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex0.subtract(2524.5);
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals((-2524.5), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-489.136), 0.35300599146905787);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertEquals(0.35300599146905787, complex0.getImaginary(), 0.01);
      
      Complex complex1 = Complex.NaN;
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.sqrt();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertEquals(0.35300599146905787, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(22.116420679903733, complex2.getImaginary(), 0.01);
      assertEquals(0.007980631146834253, complex2.getReal(), 0.01);
      
      Complex complex3 = complex1.ZERO.sqrt1z();
      assertNotNull(complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      
      ComplexField complexField0 = complex1.getField();
      assertNotNull(complexField0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex4 = Complex.INF;
      assertNotNull(complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      
      Complex complex5 = (Complex)complex1.readResolve();
      assertNotNull(complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      
      boolean boolean0 = complex0.equals(complex5);
      assertFalse(boolean0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertEquals(0.35300599146905787, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex2.reciprocal();
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertEquals(0.35300599146905787, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(22.116420679903733, complex2.getImaginary(), 0.01);
      assertEquals(0.007980631146834253, complex2.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-0.04521526716565573), complex6.getImaginary(), 0.01);
      assertEquals(1.631576712512754E-5, complex6.getReal(), 0.01);
      
      Complex complex7 = complex0.multiply((-47));
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertEquals(0.35300599146905787, complex0.getImaginary(), 0.01);
      assertEquals(22989.392, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals((-16.59128159904572), complex7.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1128.891), 1261.4);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(1261.4, complex0.getImaginary(), 0.01);
      assertEquals((-1128.891), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = Complex.valueOf(0.0, 2.0862243734177337E-306);
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.0862243734177337E-306, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.multiply(complex1);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1261.4, complex0.getImaginary(), 0.01);
      assertEquals((-1128.891), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.0862243734177337E-306, complex1.getImaginary(), 0.01);
      assertEquals((-2.6315634246291293E-303), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-2.355119919131919E-303), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.acos();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(1261.4, complex0.getImaginary(), 0.01);
      assertEquals((-1128.891), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.0862243734177337E-306, complex1.getImaginary(), 0.01);
      assertEquals((-2.6315634246291293E-303), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-2.355119919131919E-303), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex3.divide(complex1);
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex0.isNaN());
      assertEquals(1261.4, complex0.getImaginary(), 0.01);
      assertEquals((-1128.891), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.0862243734177337E-306, complex1.getImaginary(), 0.01);
      assertEquals((-2.6315634246291293E-303), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-2.355119919131919E-303), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-7.529373862225362E305), complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex4.ZERO.negate();
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(1261.4, complex0.getImaginary(), 0.01);
      assertEquals((-1128.891), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.0862243734177337E-306, complex1.getImaginary(), 0.01);
      assertEquals((-2.6315634246291293E-303), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-2.355119919131919E-303), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-7.529373862225362E305), complex4.getImaginary(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex3.negate();
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex0.isNaN());
      assertEquals(1261.4, complex0.getImaginary(), 0.01);
      assertEquals((-1128.891), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.0862243734177337E-306, complex1.getImaginary(), 0.01);
      assertEquals((-2.6315634246291293E-303), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-2.355119919131919E-303), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals((-1.5707963267948966), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex0.asin();
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex0.isNaN());
      assertEquals(1261.4, complex0.getImaginary(), 0.01);
      assertEquals((-1128.891), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-0.7300184149342034), complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(8.127278232754298, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = Complex.valueOf(2520.0, 688.4);
      assertNotNull(complex8);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertEquals(688.4, complex8.getImaginary(), 0.01);
      assertEquals(2520.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex3.add(complex1);
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1261.4, complex0.getImaginary(), 0.01);
      assertEquals((-1128.891), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(2.0862243734177337E-306, complex1.getImaginary(), 0.01);
      assertEquals((-2.6315634246291293E-303), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-2.355119919131919E-303), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex9.isNaN());
      assertEquals(1.5707963267948966, complex9.getReal(), 0.01);
      assertEquals(2.0862243734177337E-306, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = Complex.valueOf(0.0, (-0.7615941559557649));
      assertNotNull(complex10);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertEquals((-0.7615941559557649), complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1804.209550126535);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = Complex.INF;
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      
      Complex complex2 = Complex.INF;
      assertNotNull(complex2);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      
      Complex complex3 = complex2.sin();
      assertNotNull(complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      
      Complex complex4 = Complex.I;
      assertNotNull(complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex4.multiply(complex3);
      assertNotNull(complex5);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      
      Complex complex6 = Complex.NaN;
      assertNotNull(complex6);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex7 = complex6.add(complex1);
      assertNotNull(complex7);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex2.getField();
      assertNotNull(complexField0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      
      Complex complex8 = complex1.tanh();
      assertNotNull(complex8);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex1.tanh();
      assertNotNull(complex9);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex7);
      assertSame(complex9, complex5);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex3));
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      double double0 = complex1.getReal();
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      
      Complex complex10 = complex8.conjugate();
      assertNotNull(complex10);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex6);
      assertSame(complex8, complex10);
      assertNotSame(complex8, complex3);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex6);
      assertSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex7);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex10.INF.sqrt();
      assertNotNull(complex11);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex6);
      assertSame(complex8, complex10);
      assertNotSame(complex8, complex3);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex6);
      assertSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex7);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex11);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex8));
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      
      double double1 = complex6.getArgument();
      assertEquals(Double.NaN, double1, 0.01);
      assertSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex8);
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex12 = Complex.valueOf((-20.0));
      assertNotNull(complex12);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals((-20.0), complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      
      Complex complex13 = new Complex(Double.NaN);
      assertNotNull(complex13);
      assertTrue(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertTrue(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)complex3));
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.multiply(956.14845967);
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      
      Complex complex2 = Complex.I;
      assertNotNull(complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex2.atan();
      assertNotNull(complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      Complex complex4 = Complex.NaN;
      assertNotNull(complex4);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex1);
      assertSame(complex4, complex0);
      assertSame(complex4, complex3);
      assertFalse(complex4.equals((Object)complex2));
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      
      complex0.hashCode();
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      
      Complex complex5 = complex3.add(8.593554223894477E135);
      assertNotNull(complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertSame(complex3, complex5);
      assertSame(complex3, complex4);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex1);
      assertSame(complex5, complex3);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      
      Complex complex6 = Complex.valueOf((-4213.604), 8.593554223894477E135);
      assertNotNull(complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.isInfinite());
      assertEquals(8.593554223894477E135, complex6.getImaginary(), 0.01);
      assertEquals((-4213.604), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = (Complex)complex0.readResolve();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      boolean boolean0 = complex0.equals(complex1);
      assertTrue(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.cosh();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.conjugate();
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      
      Complex complex4 = complex2.exp();
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(2.718281828459045, complex4.getReal(), 0.01);
      
      Complex complex5 = complex1.atan();
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex1.divide(0.0);
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      complex2.hashCode();
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex7 = complex3.conjugate();
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex7.subtract(0.0);
      assertNotNull(complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex1.sin();
      assertNotNull(complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex6.acos();
      assertNotNull(complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      Complex complex11 = complex2.conjugate();
      assertNotNull(complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      double double0 = complex11.getArgument();
      assertEquals(-0.0, double0, 0.01);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex12 = complex3.pow(-0.0);
      assertNotNull(complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      
      Complex complex13 = complex11.tan();
      assertNotNull(complex13);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex13.isInfinite());
      assertEquals(1.557407724654902, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      List<Complex> list0 = complex5.nthRoot(533);
      assertNotNull(list0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertFalse(list0.contains(complex11));
      assertTrue(list0.contains(complex1));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex10));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(list0.isEmpty());
      assertEquals(533, list0.size());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex14 = complex1.add(complex12);
      assertNotNull(complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertTrue(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(1.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      
      Complex complex15 = complex6.sin();
      assertNotNull(complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex6);
      assertSame(complex6, complex15);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex3);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex16 = complex5.reciprocal();
      assertNotNull(complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex16, complex11);
      assertSame(complex16, complex6);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex2);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex10);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex10));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex17 = complex8.acos();
      assertNotNull(complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex17);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex14));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex13));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex13));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex18 = complex15.createComplex(2288.146128381708, 3636.263);
      assertNotNull(complex18);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex4);
      assertSame(complex15, complex16);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex18);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex11);
      assertSame(complex6, complex15);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex17);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex16);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex18.isInfinite());
      assertEquals(3636.263, complex18.getImaginary(), 0.01);
      assertEquals(2288.146128381708, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex19 = complex18.sinh();
      assertNotNull(complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex19);
      assertSame(complex15, complex16);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex19);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex18);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex11);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex17);
      assertSame(complex6, complex15);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex17);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex16);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex18));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex18.isInfinite());
      assertEquals(3636.263, complex18.getImaginary(), 0.01);
      assertEquals(2288.146128381708, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex19.getReal(), 0.01);
      assertTrue(complex19.isInfinite());
      assertFalse(complex19.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex19.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex20 = complex3.add(0.0);
      assertNotNull(complex20);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex18);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex3));
      assertTrue(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex16));
      assertTrue(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex6));
      assertTrue(complex20.equals((Object)complex12));
      assertTrue(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex5));
      assertTrue(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex18));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex21 = complex11.sin();
      assertNotNull(complex21);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex13);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex21);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex20));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex13));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex19));
      assertTrue(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex1));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.INF.acos();
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      
      Complex complex2 = complex0.ONE.subtract(complex1);
      assertNotNull(complex2);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex0);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      
      Complex complex3 = complex2.NaN.subtract(complex1);
      assertNotNull(complex3);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertSame(complex2, complex0);
      assertSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex2.sin();
      assertNotNull(complex4);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex2, complex4);
      assertSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertSame(complex2, complex0);
      assertSame(complex4, complex0);
      assertSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex4.I.reciprocal();
      assertNotNull(complex5);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex0);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex0);
      assertSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex4.ZERO.negate();
      assertNotNull(complex6);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertSame(complex2, complex1);
      assertSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex0);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex0);
      assertSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = Complex.valueOf(0.0);
      assertNotNull(complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex1.INF.cos();
      assertNotNull(complex8);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = (Complex)complex0.readResolve();
      assertNotNull(complex9);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex4));
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex1.add((-1.0));
      assertNotNull(complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex3);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex4);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertSame(complex10, complex2);
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      
      double double0 = complex8.abs();
      assertEquals(Double.NaN, double0, 0.01);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex3);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex8));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex11 = Complex.NaN;
      assertNotNull(complex11);
      assertSame(complex11, complex4);
      assertSame(complex11, complex2);
      assertSame(complex11, complex1);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex3);
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      Complex complex12 = complex11.divide(3833.1986761336175);
      assertNotNull(complex12);
      assertSame(complex11, complex4);
      assertSame(complex11, complex2);
      assertSame(complex11, complex1);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex12);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      assertSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex11);
      assertSame(complex12, complex0);
      assertSame(complex12, complex1);
      assertSame(complex12, complex2);
      assertSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex3);
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = Complex.valueOf(1025.0, 3833.1986761336175);
      assertNotNull(complex13);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex12));
      assertEquals(1025.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(3833.1986761336175, complex13.getImaginary(), 0.01);
      
      Complex complex14 = complex12.divide(complex8);
      assertNotNull(complex14);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex12);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex10);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex3);
      assertSame(complex11, complex4);
      assertSame(complex11, complex2);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex12);
      assertSame(complex11, complex10);
      assertSame(complex11, complex14);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex11);
      assertSame(complex12, complex0);
      assertSame(complex12, complex1);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex14);
      assertNotSame(complex12, complex13);
      assertSame(complex12, complex2);
      assertSame(complex12, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex12);
      assertSame(complex14, complex10);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertSame(complex14, complex3);
      assertSame(complex14, complex0);
      assertSame(complex14, complex1);
      assertSame(complex14, complex2);
      assertSame(complex14, complex4);
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex8));
      assertTrue(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex13));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertTrue(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      
      Complex complex15 = complex5.sinh();
      assertNotNull(complex15);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex12);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex10);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertSame(complex2, complex4);
      assertSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertSame(complex2, complex10);
      assertSame(complex2, complex0);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex14);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertSame(complex4, complex1);
      assertSame(complex4, complex12);
      assertSame(complex4, complex10);
      assertSame(complex4, complex2);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex4);
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex4));
      assertEquals((-0.8414709848078965), complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertTrue(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex16 = Complex.NaN;
      assertNotNull(complex16);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex1);
      assertSame(complex16, complex12);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex2);
      assertSame(complex16, complex4);
      assertNotSame(complex16, complex6);
      assertSame(complex16, complex10);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex3);
      assertNotSame(complex16, complex9);
      assertSame(complex16, complex0);
      assertTrue(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex13));
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertTrue(complex16.isNaN());
      
      Complex complex17 = complex16.asin();
      assertNotNull(complex17);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex1);
      assertSame(complex16, complex12);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex2);
      assertSame(complex16, complex4);
      assertNotSame(complex16, complex6);
      assertSame(complex16, complex10);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex3);
      assertNotSame(complex16, complex9);
      assertSame(complex16, complex0);
      assertSame(complex16, complex17);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex9);
      assertSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex1);
      assertSame(complex17, complex4);
      assertSame(complex17, complex0);
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex12);
      assertSame(complex17, complex16);
      assertSame(complex17, complex10);
      assertSame(complex17, complex2);
      assertTrue(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertTrue(complex16.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      
      double double1 = complex11.getArgument();
      assertEquals(Double.NaN, double1, 0.01);
      assertSame(complex11, complex17);
      assertSame(complex11, complex16);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex3);
      assertSame(complex11, complex4);
      assertSame(complex11, complex2);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex12);
      assertSame(complex11, complex10);
      assertSame(complex11, complex14);
      assertEquals(double1, double0, 0.01);
      assertFalse(complex11.equals((Object)complex13));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.divide(2452.851983);
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex1.exp();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(4.0768867393101187E-4, complex2.getImaginary(), 0.01);
      assertEquals(0.9999999168949691, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      ComplexField complexField0 = complex1.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      complex2.INF.hashCode();
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(4.0768867393101187E-4, complex2.getImaginary(), 0.01);
      assertEquals(0.9999999168949691, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.I.negate();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(4.0768867393101187E-4, complex2.getImaginary(), 0.01);
      assertEquals(0.9999999168949691, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals((-1.0), complex3.getImaginary(), 0.01);
      
      boolean boolean0 = complex1.equals(complexField0);
      assertFalse(boolean0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex4 = complex0.negate();
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-1.0), complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex2.sqrt1z();
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(4.0768867393101187E-4, complex2.getImaginary(), 0.01);
      assertEquals(0.9999999168949691, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.020195417400634293, complex5.getReal(), 0.01);
      assertEquals((-0.020187185635352475), complex5.getImaginary(), 0.01);
      
      Complex complex6 = Complex.valueOf(0.04787489027545224, 0.6480542736638855);
      assertNotNull(complex6);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertEquals(0.04787489027545224, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.6480542736638855, complex6.getImaginary(), 0.01);
      
      List<Complex> list0 = complex6.nthRoot(502);
      assertNotNull(list0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertFalse(list0.contains(complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertEquals(0.04787489027545224, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.6480542736638855, complex6.getImaginary(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(502, list0.size());
      
      Complex complex7 = complex2.divide(complex6);
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(4.0768867393101187E-4, complex2.getImaginary(), 0.01);
      assertEquals(0.9999999168949691, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.04787489027545224, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.6480542736638855, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals((-1.5346586503296977), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.11400172203332547, complex7.getReal(), 0.01);
      
      Complex complex8 = complex3.negate();
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(4.0768867393101187E-4, complex2.getImaginary(), 0.01);
      assertEquals(0.9999999168949691, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals((-1.0), complex3.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      
      Complex complex9 = complex3.asin();
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(4.076886852246722E-4, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(4.0768867393101187E-4, complex2.getImaginary(), 0.01);
      assertEquals(0.9999999168949691, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals((-1.0), complex3.getImaginary(), 0.01);
      assertEquals((-0.8813735870195429), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.multiply((-2248.1484334));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.createComplex((-1179.846581), (-2248.1484334));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.subtract(complex2);
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex1.tanh();
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      
      boolean boolean0 = complex1.equals(complex3);
      assertFalse(boolean0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex5 = complex4.add(complex3);
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex3));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertEquals(1179.846581, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(2248.1484334, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex3.pow(complex4);
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex4.cos();
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex7.createComplex((-1179.846581), 21.864908639987497);
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(21.864908639987497, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-1179.846581), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex1.add((-391.36));
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-391.36), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      
      Complex complex10 = complex9.reciprocal();
      assertNotNull(complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-391.36), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-0.002555192150449714), complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex6.tanh();
      assertNotNull(complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.7615941559557649, complex11.getReal(), 0.01);
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex4.log();
      assertNotNull(complex12);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertEquals((-3.141592653589793), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex12.getReal(), 0.01);
      assertTrue(complex12.isInfinite());
      
      complex12.I.hashCode();
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertEquals((-3.141592653589793), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex12.getReal(), 0.01);
      assertTrue(complex12.isInfinite());
      
      Complex complex13 = complex3.pow((-2248.1484334));
      assertNotNull(complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-2248.1484334), complex2.getImaginary(), 0.01);
      assertEquals(2248.1484334, complex3.getImaginary(), 0.01);
      assertEquals(1179.846581, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.multiply((-4316.0164982));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.createComplex((-2765.46), 3833.1986761336175);
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2765.46), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(3833.1986761336175, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex1.pow((-4316.0164982));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.sqrt();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex1.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex5 = (Complex)complex0.readResolve();
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      boolean boolean0 = complex2.equals(complex5);
      assertFalse(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2765.46), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(3833.1986761336175, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex2.reciprocal();
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2765.46), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(3833.1986761336175, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1.7157547125997048E-4), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals((-1.2378307070407075E-4), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.sqrt();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex1.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      
      Complex complex2 = Complex.INF;
      assertNotNull(complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      
      boolean boolean0 = complex2.equals("Argument {0} outside domain [{1} ; {2}]");
      assertFalse(boolean0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      
      Complex complex3 = complex1.reciprocal();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals((-0.7071067811865475), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.7071067811865476, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 956.14845967);
      assertNotNull(complex0);
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.sqrt();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.atan();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(1.547920667480727, complex2.getReal(), 0.01);
      assertEquals(0.0228597150109505, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex1.divide(1.043905258178711);
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(20.945299842760583, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(20.94529984276058, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      complex3.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(20.945299842760583, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(20.94529984276058, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.conjugate();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(20.945299842760583, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(20.94529984276058, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(20.94529984276058, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-20.945299842760583), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex2.subtract(2114.90401);
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(1.547920667480727, complex2.getReal(), 0.01);
      assertEquals(0.0228597150109505, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0228597150109505, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-2113.3560893325193), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      
      Complex complex6 = Complex.ONE;
      assertNotNull(complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      
      Complex complex7 = complex6.sin();
      assertNotNull(complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex7.acos();
      assertNotNull(complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.5707963267948967, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = Complex.valueOf(0.0, (-2052.64213));
      assertNotNull(complex9);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertEquals((-2052.64213), complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      
      Complex complex10 = complex9.conjugate();
      assertNotNull(complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertEquals((-2052.64213), complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(2052.64213, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      
      double double0 = complex5.getArgument();
      assertEquals(3.1415818368064192, double0, 0.01);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(1.547920667480727, complex2.getReal(), 0.01);
      assertEquals(0.0228597150109505, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0228597150109505, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-2113.3560893325193), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      
      Complex complex11 = complex5.pow(0.0);
      assertNotNull(complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(1.547920667480727, complex2.getReal(), 0.01);
      assertEquals(0.0228597150109505, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0228597150109505, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-2113.3560893325193), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex7.tan();
      assertNotNull(complex12);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(1.1189396031849523, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      
      List<Complex> list0 = complex11.nthRoot(189);
      assertNotNull(list0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertTrue(list0.contains(complex6));
      assertFalse(list0.contains(complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(1.547920667480727, complex2.getReal(), 0.01);
      assertEquals(0.0228597150109505, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0228597150109505, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals((-2113.3560893325193), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(189, list0.size());
      
      Complex complex13 = complex8.add(complex6);
      assertNotNull(complex13);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex13.isInfinite());
      assertEquals(1.5707963267948966, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.5707963267948967, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex14 = complex8.sin();
      assertNotNull(complex14);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex14.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.5707963267948967, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex15 = complex12.reciprocal();
      assertNotNull(complex15);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.8937032858195363, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(1.1189396031849523, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      
      Complex complex16 = complex1.acos();
      assertNotNull(complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex6);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex6));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals((-4.124603879874654), complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(0.785659629010347, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      
      Complex complex17 = complex1.createComplex(1.043905258178711, 1.043905258178711);
      assertNotNull(complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex1);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex1));
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(1.043905258178711, complex17.getImaginary(), 0.01);
      assertEquals(1.043905258178711, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      
      Complex complex18 = complex12.sinh();
      assertNotNull(complex18);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex13);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertEquals(1.36748999999432, complex18.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(1.1189396031849523, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      
      Complex complex19 = complex13.add((double) 189);
      assertNotNull(complex19);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex19);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex13.isInfinite());
      assertEquals(1.5707963267948966, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex19.isNaN());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(190.5707963267949, complex19.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.5707963267948967, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex20 = complex18.sin();
      assertNotNull(complex20);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex20);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex3);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex20);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex20);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex19));
      assertTrue(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertEquals(1.36748999999432, complex18.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(0.9794043563656532, complex20.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(1.1189396031849523, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 956.14845967);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.sqrt();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.divide(complex0);
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-0.02286769216522488), complex2.getImaginary(), 0.01);
      assertEquals(0.022867692165224884, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = Complex.valueOf(956.14845967);
      assertNotNull(complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(956.14845967, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.createComplex(0.0, (-2330.0));
      assertNotNull(complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(956.14845967, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-2330.0), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex1.INF.sinh();
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      
      String string0 = complex1.toString();
      assertNotNull(string0);
      assertEquals("(21.864908639987497, 21.8649086399875)", string0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      
      Complex complex6 = Complex.valueOf(0.0);
      assertNotNull(complex6);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.exp();
      assertNotNull(complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex1.log();
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(3.4314565967683017, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.7853981633974484, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex8.subtract(956.14845967);
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(3.4314565967683017, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.7853981633974484, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.7853981633974484, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals((-952.7170030732317), complex9.getReal(), 0.01);
      
      double double0 = complex9.getReal();
      assertEquals((-952.7170030732317), double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(956.14845967, complex0.getImaginary(), 0.01);
      assertEquals(21.864908639987497, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(21.8649086399875, complex1.getImaginary(), 0.01);
      assertEquals(3.4314565967683017, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.7853981633974484, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.7853981633974484, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals((-952.7170030732317), complex9.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Complex complex0 = new Complex(4273.8);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = new Complex((-2267.4));
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-2267.4), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.INF.subtract((-1455.73660668));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.INF.pow(complex1);
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-2267.4), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.ONE.sin();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-2267.4), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      
      String string0 = complex0.toString();
      assertNotNull(string0);
      assertEquals("(4273.8, 0.0)", string0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex5 = Complex.valueOf((-1455.73660668), 0.0);
      assertNotNull(complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-1455.73660668), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      
      ComplexField complexField0 = complex5.getField();
      assertNotNull(complexField0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals((-1455.73660668), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      
      complex2.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      
      Complex complex6 = complex0.negate();
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals((-4273.8), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      
      boolean boolean0 = complex6.equals(complex1);
      assertFalse(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-2267.4), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals((-4273.8), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex3.negate();
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-2267.4), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex8 = Complex.NaN;
      assertNotNull(complex8);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.sqrt1z();
      assertNotNull(complex9);
      assertSame(complex8, complex9);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex7);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex9.multiply(934);
      assertNotNull(complex10);
      assertSame(complex8, complex9);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex7);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex7);
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      
      Complex complex11 = Complex.NaN;
      assertNotNull(complex11);
      assertSame(complex11, complex10);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex7);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      
      boolean boolean1 = complex6.equals(complex11);
      assertFalse(boolean1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertSame(complex11, complex10);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex7);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertTrue(boolean1 == boolean0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals((-4273.8), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      
      double double0 = complex0.ZERO.abs();
      assertEquals(0.0, double0, 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      
      Complex complex1 = Complex.I;
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.I.add(complex1);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(2.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.sqrt1z();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.I.add(complex0);
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      
      Complex complex5 = complex4.ONE.cos();
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.5403023058681398, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      
      boolean boolean0 = complex0.isInfinite();
      assertTrue(boolean0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      
      Complex complex6 = complex3.sqrt1z();
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex7 = complex3.I.pow(complex5);
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.5403023058681398, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.6609555923234067, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.750425016225082, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex3.createComplex(434.537, 434.537);
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(434.537, complex8.getImaginary(), 0.01);
      assertEquals(434.537, complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.ONE.subtract(complex0);
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(434.537, complex8.getImaginary(), 0.01);
      assertEquals(434.537, complex8.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isInfinite());
      
      Complex complex10 = complex0.ONE.tanh();
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(0.7615941559557649, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      
      boolean boolean1 = complex6.equals(complex0);
      assertFalse(boolean1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(boolean1 == boolean0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex11 = Complex.INF;
      assertNotNull(complex11);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex11.multiply(37);
      assertNotNull(complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex12);
      assertNotSame(complex11, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex4));
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex12.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertTrue(complex12.isInfinite());
      
      Complex complex13 = Complex.valueOf(434.537);
      assertNotNull(complex13);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(434.537, complex13.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      
      Complex complex14 = complex0.sqrt();
      assertNotNull(complex14);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      
      Complex complex15 = complex6.tan();
      assertNotNull(complex15);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex15);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex16 = complex9.subtract(complex14);
      assertNotNull(complex16);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertSame(complex16, complex6);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertTrue(complex16.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(434.537, complex8.getImaginary(), 0.01);
      assertEquals(434.537, complex8.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isInfinite());
      
      Complex complex17 = complex11.divide((-7026.645782911256));
      assertNotNull(complex17);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex12);
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertEquals(Double.NEGATIVE_INFINITY, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex17.getImaginary(), 0.01);
      assertTrue(complex17.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      
      Complex complex18 = Complex.valueOf(6.283185307179586, 434.537);
      assertNotNull(complex18);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex5);
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex5));
      assertEquals(6.283185307179586, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(434.537, complex18.getImaginary(), 0.01);
      
      Complex complex19 = complex12.divide(complex4);
      assertNotNull(complex19);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex16);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex12);
      assertNotSame(complex11, complex18);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex15));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex2));
      assertTrue(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex12));
      assertTrue(complex19.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertTrue(complex19.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex12.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertTrue(complex12.isInfinite());
      
      Complex complex20 = complex17.sinh();
      assertNotNull(complex20);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex20);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex12);
      assertNotSame(complex11, complex18);
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex8));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex11));
      assertTrue(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex2));
      assertTrue(complex20.equals((Object)complex16));
      assertTrue(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex12));
      assertTrue(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex8));
      assertTrue(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex18));
      assertEquals(Double.NEGATIVE_INFINITY, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex17.getImaginary(), 0.01);
      assertTrue(complex17.isInfinite());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertTrue(complex20.isNaN());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertTrue(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      
      Complex complex21 = complex15.asin();
      assertNotNull(complex21);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex20);
      assertSame(complex15, complex16);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex19);
      assertNotSame(complex15, complex20);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex8);
      assertSame(complex15, complex21);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex21);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex1);
      assertSame(complex21, complex16);
      assertNotSame(complex21, complex11);
      assertSame(complex21, complex15);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex4);
      assertSame(complex21, complex6);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex13);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex19);
      assertSame(complex6, complex21);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex16);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex15);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex20));
      assertTrue(complex15.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex19));
      assertTrue(complex15.equals((Object)complex20));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex18));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex17));
      assertTrue(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex18));
      assertTrue(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex1));
      assertTrue(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex0));
      assertTrue(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex13));
      assertTrue(complex21.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex19));
      assertTrue(complex6.equals((Object)complex20));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertFalse(complex21.isInfinite());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      double double1 = complex7.getArgument();
      assertEquals(0.8487048774164866, double1, 0.01);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex20);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex21);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex21);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex5, complex21);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex21);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex20);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex18));
      assertTrue(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex20));
      assertTrue(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex21));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex15));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.5403023058681398, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.6609555923234067, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.750425016225082, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1526.9227061482127, 1474.966);
      assertNotNull(complex0);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.asin();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.NaN.atan();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      
      Complex complex3 = (Complex)complex2.ZERO.readResolve();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      double double0 = complex0.getReal();
      assertEquals(1526.9227061482127, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex4 = complex1.NaN.exp();
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      Complex complex5 = complex0.INF.sqrt1z();
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex5.NaN.subtract(complex2);
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex7 = complex6.I.sqrt1z();
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      
      List<Complex> list0 = complex6.NaN.nthRoot(1788);
      assertNotNull(list0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertTrue(list0.contains(complex4));
      assertFalse(list0.contains(complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex5));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      
      boolean boolean0 = complex1.isNaN();
      assertFalse(boolean0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex8 = complex0.acos();
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.7680919413548093, complex8.getReal(), 0.01);
      assertEquals((-8.353720287727567), complex8.getImaginary(), 0.01);
      
      double double1 = complex8.getImaginary();
      assertEquals((-8.353720287727567), double1, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.7680919413548093, complex8.getReal(), 0.01);
      assertEquals((-8.353720287727567), complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex5.ZERO.add(complex4);
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex6);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      Complex complex10 = Complex.ZERO;
      assertNotNull(complex10);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex10.add(complex1);
      assertNotNull(complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(8.35372028767317, complex11.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex11.getReal(), 0.01);
      
      Complex complex12 = complex3.pow(complex6);
      assertNotNull(complex12);
      assertSame(complex12, complex9);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex2);
      assertSame(complex6, complex12);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex5));
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex13 = complex0.cos();
      assertNotNull(complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex8));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isInfinite());
      
      Complex complex14 = complex12.createComplex(0.7615941559557649, 1526.9227061482127);
      assertNotNull(complex14);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex4);
      assertSame(complex12, complex9);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex8);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.7615941559557649, complex14.getReal(), 0.01);
      assertEquals(1526.9227061482127, complex14.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex15 = complex6.add((-1328.71714047656));
      assertNotNull(complex15);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex15);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex6);
      assertSame(complex15, complex4);
      assertSame(complex15, complex12);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex10);
      assertSame(complex15, complex2);
      assertSame(complex15, complex9);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex15);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex1));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertTrue(complex15.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex16 = complex14.reciprocal();
      assertNotNull(complex16);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex4);
      assertSame(complex12, complex9);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex8);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex15);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex15);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.7615941559557649, complex14.getReal(), 0.01);
      assertEquals(1526.9227061482127, complex14.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(3.26655058642776E-7, complex16.getReal(), 0.01);
      assertEquals((-6.549118348917592E-4), complex16.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex17 = complex12.tanh();
      assertNotNull(complex17);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertSame(complex12, complex17);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex4);
      assertSame(complex12, complex9);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex15);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex17);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex17, complex3);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertSame(complex17, complex6);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex0);
      assertSame(complex17, complex4);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex14);
      assertSame(complex17, complex15);
      assertSame(complex17, complex9);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex17);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex15);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex12);
      assertSame(complex6, complex17);
      assertNotSame(complex6, complex13);
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex16));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      
      Complex complex18 = complex12.log();
      assertNotNull(complex18);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertSame(complex12, complex18);
      assertSame(complex12, complex17);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex4);
      assertSame(complex12, complex9);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex15);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex18);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex17);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex5);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex10);
      assertSame(complex18, complex4);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex14);
      assertSame(complex18, complex15);
      assertNotSame(complex18, complex0);
      assertSame(complex18, complex9);
      assertSame(complex18, complex17);
      assertSame(complex18, complex2);
      assertSame(complex18, complex12);
      assertSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex17);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex15);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex12);
      assertSame(complex6, complex17);
      assertSame(complex6, complex18);
      assertNotSame(complex6, complex13);
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex1));
      assertTrue(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex16));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Complex complex0 = Complex.valueOf(198.780364, 198.780364);
      assertNotNull(complex0);
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.NaN.pow(0.0);
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      
      double double0 = complex0.getReal();
      assertEquals(198.780364, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      
      Complex complex2 = complex0.exp();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-1.392324796711774E86), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1.617350763303247E86), complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex1.multiply((-1227));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.cos();
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex3);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex0.multiply((-1115.08));
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      assertEquals((-221656.00828911999), complex5.getImaginary(), 0.01);
      assertEquals((-221656.00828911999), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      
      Complex complex6 = complex5.ONE.multiply((-1227));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      assertEquals((-221656.00828911999), complex5.getImaginary(), 0.01);
      assertEquals((-221656.00828911999), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals((-1227.0), complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      
      List<Complex> list0 = complex5.nthRoot(2320);
      assertNotNull(list0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertFalse(list0.contains(complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      assertEquals((-221656.00828911999), complex5.getImaginary(), 0.01);
      assertEquals((-221656.00828911999), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(list0.isEmpty());
      assertEquals(2320, list0.size());
      
      Complex complex7 = complex4.subtract(complex0);
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex1);
      assertSame(complex4, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex3);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertEquals(198.780364, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(198.780364, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Complex complex0 = new Complex(521.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.conjugate();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(521.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.sinh();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(9.25539750851257E225, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.INF.subtract(1108.8);
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(9.25539750851257E225, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      
      Complex complex4 = complex0.ONE.sqrt1z();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex0.pow(complex1);
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(521.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex4.INF.multiply(548);
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      complex6.ZERO.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex4.INF.divide(complex0);
      assertNotNull(complex7);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      
      Complex complex8 = complex1.createComplex(521.0, 1465.011);
      assertNotNull(complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(521.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1465.011, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(521.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex1.pow(1465.011);
      assertNotNull(complex9);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(521.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex4.I.acos();
      assertNotNull(complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-0.8813735870195429), complex10.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex10.getReal(), 0.01);
      
      Complex complex11 = complex10.ZERO.cosh();
      assertNotNull(complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-0.8813735870195429), complex10.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex10.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex12 = complex9.INF.negate();
      assertNotNull(complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(521.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      
      Complex complex13 = complex9.ZERO.negate();
      assertNotNull(complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(521.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      
      Complex complex14 = complex4.multiply(17);
      assertNotNull(complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex9);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex9));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      
      Complex complex15 = complex6.reciprocal();
      assertNotNull(complex15);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex10);
      assertFalse(complex15.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex8));
      assertTrue(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex14));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex16 = Complex.valueOf(521.0, 1465.011);
      assertNotNull(complex16);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex10);
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex15));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex10));
      assertEquals(1465.011, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(521.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      
      boolean boolean0 = complex1.equals(complex9);
      assertFalse(boolean0);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex14);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex14));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(521.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      Complex complex17 = complex0.sqrt1z();
      assertNotNull(complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(521.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(520.9990403062178, complex17.getImaginary(), 0.01);
      
      try { 
        complex14.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1804.209550126535);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      
      Complex complex1 = (Complex)complex0.ZERO.readResolve();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.tanh();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.tan();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(1.557407724654902, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex3.I.cosh();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(1.557407724654902, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.5403023058681398, complex4.getReal(), 0.01);
      
      Complex complex5 = complex0.exp();
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      
      List<Complex> list0 = complex5.ONE.nthRoot(313);
      assertNotNull(list0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertTrue(list0.contains(complex2));
      assertFalse(list0.contains(complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(313, list0.size());
      assertFalse(list0.isEmpty());
      
      Complex complex6 = complex2.asin();
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex0.subtract(complex6);
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(1802.6387537997402, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex4.multiply(1804.209550126535);
      assertNotNull(complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(1.557407724654902, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.5403023058681398, complex4.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(974.818580202686, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex7.log();
      assertNotNull(complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(1802.6387537997402, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(7.4970068447260845, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex6.sqrt1z();
      assertNotNull(complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex10);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1804.209550126535, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(1.2113633229846195, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = Complex.valueOf((-755.56404049), (-755.56404049));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals((-755.56404049), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-755.56404049), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.I.add((-755.56404049));
      assertNotNull(complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals((-755.56404049), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-755.56404049), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getImaginary(), 0.01);
      assertEquals((-755.56404049), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      double double0 = complex0.getReal();
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      
      Complex complex1 = complex0.ONE.asin();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.5707963267948966, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex0.ONE.add(352.811245);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(353.811245, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.INF.conjugate();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(353.811245, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      
      Complex complex4 = complex0.sqrt();
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex0.NaN.add(1469.954435348749);
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex4.ZERO.log();
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertTrue(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.ZERO.sqrt1z();
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertTrue(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex5.NaN.multiply(complex0);
      assertNotNull(complex8);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = complex4.INF.pow(607.3988);
      assertNotNull(complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      
      Complex complex10 = complex0.sin();
      assertNotNull(complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex4));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      
      Complex complex11 = complex5.acos();
      assertNotNull(complex11);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex8);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex9));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex5.I.multiply(complex11);
      assertNotNull(complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex12);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertSame(complex5, complex11);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex8);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex4));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      
      try { 
        complex2.nthRoot((-1272));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -1,272
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.log();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.ONE.atan();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex1.INF.divide(complex0);
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.I.log();
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.5707963267948966, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      
      double double0 = complex3.ONE.abs();
      assertEquals(1.0, double0, 0.01);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex5 = complex0.conjugate();
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex5.ONE.reciprocal();
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      
      Complex complex7 = complex0.INF.sqrt1z();
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      
      Complex complex8 = complex5.sinh();
      assertNotNull(complex8);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex8.NaN.tan();
      assertNotNull(complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      complex8.hashCode();
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.negate();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.I.divide(complex1);
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      
      Complex complex3 = complex1.I.sin();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.ZERO.cosh();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex0.NaN.atan();
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex0.sqrt();
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex6.INF.tanh();
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertSame(complex7, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      
      double double0 = complex6.ZERO.abs();
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      complex6.ONE.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex8 = complex5.log();
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex5.sin();
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex9);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex7);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex3.sqrt();
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.7665511051599239, complex10.getReal(), 0.01);
      assertEquals(0.7665511051599239, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      
      Complex complex11 = complex7.acos();
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertSame(complex7, complex9);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertSame(complex7, complex2);
      assertSame(complex7, complex11);
      assertSame(complex11, complex9);
      assertSame(complex11, complex7);
      assertSame(complex11, complex2);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      Complex complex12 = complex4.acos();
      assertNotNull(complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      
      Complex complex13 = complex4.multiply(1);
      assertNotNull(complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(1.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.INF.acos();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      
      Complex complex2 = complex0.ONE.subtract(complex1);
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      
      Complex complex3 = complex2.NaN.subtract(complex1);
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex2.sin();
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex4);
      assertSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      Complex complex5 = complex4.I.reciprocal();
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex4.ZERO.negate();
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = Complex.valueOf(0.0);
      assertNotNull(complex7);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex1.INF.cos();
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = (Complex)complex0.readResolve();
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      
      Complex complex10 = complex1.add((-1.0));
      assertNotNull(complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertSame(complex10, complex3);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      
      double double0 = complex8.abs();
      assertEquals(Double.NaN, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      complex0.hashCode();
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex11 = complex8.sqrt1z();
      assertNotNull(complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex11);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertSame(complex11, complex3);
      assertSame(complex11, complex1);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex10);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      List<Complex> list0 = complex11.nthRoot(350);
      assertNotNull(list0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex11);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex4);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertSame(complex11, complex3);
      assertSame(complex11, complex1);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex10);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertTrue(list0.contains(complex11));
      assertFalse(list0.contains(complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      
      Complex complex1 = new Complex(4.203159541613745E-8);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      
      Complex complex2 = complex1.ONE.subtract(complex0);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      
      Complex complex3 = complex2.NaN.multiply((-1038));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      
      Complex complex4 = complex0.ONE.add(complex1);
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      
      Object object0 = complex4.ZERO.readResolve();
      assertNotNull(object0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, object0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(object0, complex1);
      assertNotSame(object0, complex4);
      assertNotSame(object0, complex0);
      assertNotSame(object0, complex2);
      assertNotSame(object0, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(object0.equals((Object)complex1));
      assertFalse(object0.equals((Object)complex4));
      assertFalse(object0.equals((Object)complex0));
      assertFalse(object0.equals((Object)complex2));
      assertFalse(object0.equals((Object)complex3));
      
      String string0 = complex0.NaN.toString();
      assertNotNull(string0);
      assertEquals("(NaN, NaN)", string0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      
      Complex complex5 = complex0.cosh();
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex2));
      
      Complex complex6 = complex5.I.acos();
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, object0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      
      Complex complex7 = complex6.INF.log();
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, object0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, object0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      
      double double0 = complex6.ZERO.abs();
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, object0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      
      Complex complex8 = complex1.sin();
      assertNotNull(complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)object0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      
      Complex complex9 = complex0.multiply((-1446));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      
      Complex complex10 = complex9.sin();
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)object0));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      
      List<Complex> list0 = complex0.NaN.nthRoot(973);
      assertNotNull(list0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertTrue(list0.contains(complex10));
      assertFalse(list0.contains(complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      
      Complex complex11 = complex2.atan();
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, object0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      
      Complex complex12 = complex11.INF.acos();
      assertNotNull(complex12);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, object0);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, object0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, object0);
      assertSame(complex11, complex3);
      assertSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)object0));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      
      Complex complex13 = complex12.pow(2169.4981659846);
      assertNotNull(complex13);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, object0);
      assertSame(complex12, complex11);
      assertSame(complex12, complex13);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, object0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, object0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex13);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, object0);
      assertSame(complex11, complex3);
      assertSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)object0));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)object0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)object0));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      
      String string1 = complex11.I.toString();
      assertNotNull(string1);
      assertEquals("(0.0, 1.0)", string1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, object0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex13);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, object0);
      assertSame(complex11, complex3);
      assertSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(string1.equals((Object)string0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)object0));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      
      Complex complex14 = complex9.INF.reciprocal();
      assertNotNull(complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, object0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex12);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)object0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      
      Complex complex15 = complex0.pow(complex4);
      assertNotNull(complex15);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, object0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertTrue(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex5));
      assertTrue(complex15.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)object0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      
      Complex complex16 = complex4.cosh();
      assertNotNull(complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, object0);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)object0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex8));
      
      complex5.INF.hashCode();
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex13));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex6));
      
      Complex complex17 = complex16.subtract(complex15);
      assertNotNull(complex17);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, object0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, object0);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex8);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex0);
      assertSame(complex17, complex13);
      assertSame(complex17, complex12);
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, object0);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertTrue(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex5));
      assertTrue(complex15.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)object0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)object0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)object0));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex4));
      
      Complex complex18 = complex0.divide(complex5);
      assertNotNull(complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex17);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex5);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, object0);
      assertNotSame(complex18, complex14);
      assertSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex12);
      assertSame(complex18, complex13);
      assertNotSame(complex18, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex17));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex13));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex2));
      assertTrue(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)object0));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex1));
      
      Complex complex19 = complex1.asin();
      assertNotNull(complex19);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, object0);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex7);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex7));
      
      Complex complex20 = complex1.asin();
      assertNotNull(complex20);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, object0);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex6));
      assertTrue(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)object0));
      
      Complex complex21 = complex9.tanh();
      assertNotNull(complex21);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex21, object0);
      assertNotSame(complex21, complex8);
      assertSame(complex21, complex11);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex5);
      assertSame(complex21, complex3);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex4);
      assertSame(complex21, complex18);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex7);
      assertSame(complex21, complex13);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex1);
      assertSame(complex21, complex12);
      assertNotSame(complex21, complex16);
      assertSame(complex21, complex17);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex2);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex21);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex20);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex21.equals((Object)object0));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex10));
      assertTrue(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex7));
      assertTrue(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      
      Complex complex22 = complex21.NaN.atan();
      assertNotNull(complex22);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex22);
      assertNotSame(complex21, object0);
      assertNotSame(complex21, complex8);
      assertSame(complex21, complex11);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex5);
      assertSame(complex21, complex3);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex4);
      assertSame(complex21, complex18);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex7);
      assertSame(complex21, complex22);
      assertSame(complex21, complex13);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex1);
      assertSame(complex21, complex12);
      assertNotSame(complex21, complex16);
      assertSame(complex21, complex17);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex2);
      assertSame(complex22, complex13);
      assertSame(complex22, complex3);
      assertNotSame(complex22, complex15);
      assertSame(complex22, complex21);
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, object0);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex19);
      assertNotSame(complex22, complex9);
      assertSame(complex22, complex18);
      assertSame(complex22, complex11);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex8);
      assertSame(complex22, complex17);
      assertNotSame(complex22, complex0);
      assertSame(complex22, complex12);
      assertNotSame(complex22, complex16);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex21);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex22);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex20);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex21.equals((Object)object0));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex10));
      assertTrue(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex7));
      assertTrue(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)object0));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex9));
      assertTrue(complex22.equals((Object)complex15));
      assertTrue(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex20));
      assertTrue(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      
      complex15.hashCode();
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex22);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex22);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex21);
      assertNotSame(complex15, object0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex19);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex20);
      assertNotSame(complex15, complex14);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex21);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex22);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex17));
      
      Complex complex23 = complex15.divide((double) 973);
      assertNotNull(complex23);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex22);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex23);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex22);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex21);
      assertNotSame(complex15, object0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex19);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex23);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex20);
      assertNotSame(complex15, complex14);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex21);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex22);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex23);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex23, complex17);
      assertNotSame(complex23, complex5);
      assertNotSame(complex23, complex2);
      assertNotSame(complex23, complex16);
      assertNotSame(complex23, complex1);
      assertNotSame(complex23, complex4);
      assertNotSame(complex23, complex19);
      assertNotSame(complex23, complex10);
      assertNotSame(complex23, complex15);
      assertNotSame(complex23, complex6);
      assertSame(complex23, complex21);
      assertSame(complex23, complex13);
      assertNotSame(complex23, complex20);
      assertNotSame(complex23, complex14);
      assertSame(complex23, complex18);
      assertSame(complex23, complex3);
      assertSame(complex23, complex12);
      assertNotSame(complex23, complex8);
      assertNotSame(complex23, object0);
      assertNotSame(complex23, complex9);
      assertNotSame(complex23, complex0);
      assertSame(complex23, complex11);
      assertNotSame(complex23, complex7);
      assertSame(complex23, complex22);
      
      Complex complex24 = complex2.sinh();
      assertNotNull(complex24);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex24);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex22);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex24);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex23);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex17);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex24);
      assertNotSame(complex2, complex23);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex22);
      assertNotSame(complex24, complex19);
      assertNotSame(complex24, complex20);
      assertNotSame(complex24, complex1);
      assertNotSame(complex24, complex16);
      assertNotSame(complex24, complex21);
      assertNotSame(complex24, complex13);
      assertNotSame(complex24, complex4);
      assertNotSame(complex24, complex2);
      assertNotSame(complex24, complex12);
      assertNotSame(complex24, complex10);
      assertNotSame(complex24, complex17);
      assertNotSame(complex24, complex15);
      assertNotSame(complex24, complex22);
      assertNotSame(complex24, complex7);
      assertNotSame(complex24, complex8);
      assertNotSame(complex24, object0);
      assertNotSame(complex24, complex6);
      assertNotSame(complex24, complex11);
      assertNotSame(complex24, complex23);
      assertNotSame(complex24, complex14);
      assertNotSame(complex24, complex18);
      assertNotSame(complex24, complex0);
      assertNotSame(complex24, complex9);
      assertNotSame(complex24, complex3);
      assertNotSame(complex24, complex5);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      double double0 = complex0.ZERO.abs();
      assertEquals(0.0, double0, 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.sqrt1z();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      
      Complex complex2 = complex1.I.add(complex0);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.ONE.cos();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      
      boolean boolean0 = complex0.isInfinite();
      assertTrue(boolean0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex4 = complex1.sqrt1z();
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      
      Complex complex5 = complex1.I.pow(complex3);
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.750425016225082, complex5.getImaginary(), 0.01);
      assertEquals(0.6609555923234067, complex5.getReal(), 0.01);
      
      Complex complex6 = complex1.createComplex(434.537, 434.537);
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      
      Complex complex7 = complex6.ONE.subtract(complex0);
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex7.getReal(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex0.ONE.tanh();
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.7615941559557649, complex8.getReal(), 0.01);
      
      boolean boolean1 = complex4.equals(complex0);
      assertFalse(boolean1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(boolean1 == boolean0);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      
      Complex complex9 = complex6.add(complex4);
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      
      Complex complex10 = complex2.pow(complex6);
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex10.cos();
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex1.createComplex((-145.24772139868665), 434.537);
      assertNotNull(complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals((-145.24772139868665), complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(434.537, complex12.getImaginary(), 0.01);
      
      Complex complex13 = complex6.add(177.0);
      assertNotNull(complex13);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex9);
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertEquals(611.537, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(434.537, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      
      Complex complex14 = complex11.reciprocal();
      assertNotNull(complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex9);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      Complex complex15 = complex14.tanh();
      assertNotNull(complex15);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex9);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex2);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex3);
      assertSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex15);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertTrue(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      Complex complex16 = complex10.log();
      assertNotNull(complex16);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex10);
      assertSame(complex16, complex9);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertSame(complex16, complex15);
      assertSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex2);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex2));
      assertTrue(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex11));
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(434.537, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(434.537, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.multiply((-3248.0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-3248.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      
      double double0 = complex0.getImaginary();
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex2 = complex0.sinh();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.1752011936438014, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex2.acos();
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.1752011936438014, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.5836293809324177, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex2.INF.divide(20.0);
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.1752011936438014, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      
      Complex complex5 = complex0.conjugate();
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex0.multiply(complex4);
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.1752011936438014, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1526.9227061482127, 1474.966);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.asin();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      
      Complex complex2 = complex1.NaN.atan();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      
      Complex complex3 = (Complex)complex2.ZERO.readResolve();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      double double0 = complex0.getReal();
      assertEquals(1526.9227061482127, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex4 = complex1.NaN.exp();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex0.INF.sqrt1z();
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex5.NaN.subtract(complex2);
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.I.sqrt1z();
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      
      List<Complex> list0 = complex6.NaN.nthRoot(1788);
      assertNotNull(list0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertTrue(list0.contains(complex4));
      assertFalse(list0.contains(complex0));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      
      boolean boolean0 = complex1.isNaN();
      assertFalse(boolean0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      
      Complex complex8 = complex0.acos();
      assertNotNull(complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(0.7680919413548093, complex8.getReal(), 0.01);
      assertEquals((-8.353720287727567), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      double double1 = complex8.getImaginary();
      assertEquals((-8.353720287727567), double1, 0.01);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(0.7680919413548093, complex8.getReal(), 0.01);
      assertEquals((-8.353720287727567), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex5.ZERO.add(complex4);
      assertNotNull(complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex4);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      
      Complex complex10 = complex8.multiply(1);
      assertNotNull(complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(0.7680919413548093, complex8.getReal(), 0.01);
      assertEquals((-8.353720287727567), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals((-8.353720287727567), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.7680919413548093, complex10.getReal(), 0.01);
      
      Complex complex11 = Complex.valueOf((double) 1788);
      assertNotNull(complex11);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1788.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      
      Complex complex12 = complex2.sqrt();
      assertNotNull(complex12);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertSame(complex2, complex12);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex6);
      assertSame(complex2, complex4);
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      
      Complex complex13 = complex1.tan();
      assertNotNull(complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0000000038390664, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(1.1087165994819074E-7, complex13.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      
      Complex complex14 = complex11.NaN.subtract(complex2);
      assertNotNull(complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex9);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertSame(complex2, complex12);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex6);
      assertSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex4);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex13);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1788.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      
      Complex complex15 = complex11.pow(6.283185307179586);
      assertNotNull(complex15);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex12);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex13);
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(2.7241296952463416E20, complex15.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1788.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      
      Complex complex16 = complex6.divide(0.0);
      assertNotNull(complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex2, complex12);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex15);
      assertSame(complex2, complex6);
      assertSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex4);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex12);
      assertSame(complex16, complex6);
      assertSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex15);
      assertSame(complex16, complex9);
      assertSame(complex16, complex14);
      assertSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex0);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex16);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex14);
      assertSame(complex6, complex12);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex15);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex15));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      Complex complex17 = Complex.valueOf((double) 1, 1770.521757239527);
      assertNotNull(complex17);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex9);
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(1770.521757239527, complex17.getImaginary(), 0.01);
      assertEquals(1.0, complex17.getReal(), 0.01);
      
      Complex complex18 = complex17.divide(complex6);
      assertNotNull(complex18);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex2, complex12);
      assertSame(complex2, complex9);
      assertSame(complex2, complex16);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex15);
      assertSame(complex2, complex18);
      assertSame(complex2, complex6);
      assertSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex4);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex9);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex6);
      assertSame(complex18, complex9);
      assertSame(complex18, complex14);
      assertSame(complex18, complex12);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex0);
      assertSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex16);
      assertSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex17);
      assertSame(complex6, complex18);
      assertSame(complex6, complex16);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex14);
      assertSame(complex6, complex12);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex15);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex15));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex17));
      assertTrue(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(1770.521757239527, complex17.getImaginary(), 0.01);
      assertEquals(1.0, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      Complex complex19 = complex16.sinh();
      assertNotNull(complex19);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex2, complex12);
      assertSame(complex2, complex9);
      assertSame(complex2, complex19);
      assertSame(complex2, complex16);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex15);
      assertSame(complex2, complex18);
      assertSame(complex2, complex6);
      assertSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex4);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex12);
      assertSame(complex16, complex19);
      assertSame(complex16, complex6);
      assertSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex15);
      assertSame(complex16, complex9);
      assertNotSame(complex16, complex17);
      assertSame(complex16, complex14);
      assertSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex1);
      assertSame(complex16, complex18);
      assertNotSame(complex16, complex0);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex7);
      assertSame(complex19, complex2);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex17);
      assertSame(complex19, complex18);
      assertSame(complex19, complex16);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertSame(complex19, complex6);
      assertSame(complex19, complex4);
      assertNotSame(complex19, complex10);
      assertSame(complex19, complex14);
      assertSame(complex19, complex12);
      assertSame(complex19, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex17);
      assertSame(complex6, complex18);
      assertSame(complex6, complex19);
      assertSame(complex6, complex16);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex14);
      assertSame(complex6, complex12);
      assertSame(complex6, complex9);
      assertNotSame(complex6, complex15);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex15));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex17));
      assertTrue(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex11));
      assertTrue(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      Complex complex20 = complex14.asin();
      assertNotNull(complex20);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex14, complex18);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex9);
      assertSame(complex14, complex20);
      assertSame(complex14, complex4);
      assertSame(complex14, complex16);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex15);
      assertSame(complex14, complex12);
      assertSame(complex14, complex19);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex2);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex13);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertSame(complex2, complex12);
      assertSame(complex2, complex9);
      assertSame(complex2, complex19);
      assertSame(complex2, complex16);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex15);
      assertSame(complex2, complex18);
      assertSame(complex2, complex6);
      assertSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex20);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex4);
      assertSame(complex20, complex4);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex11);
      assertSame(complex20, complex6);
      assertSame(complex20, complex19);
      assertSame(complex20, complex16);
      assertNotSame(complex20, complex5);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex7);
      assertSame(complex20, complex9);
      assertSame(complex20, complex2);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex14);
      assertSame(complex20, complex18);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex17);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex13);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex15));
      assertTrue(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertTrue(complex20.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1788.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      
      double double2 = complex4.getArgument();
      assertEquals(Double.NaN, double2, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertSame(complex4, complex19);
      assertSame(complex4, complex16);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex15);
      assertSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex9);
      assertSame(complex4, complex14);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex13);
      assertSame(complex4, complex20);
      assertNotSame(complex4, complex17);
      assertSame(complex4, complex18);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex0));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1474.966, complex0.getImaginary(), 0.01);
      assertEquals(1526.9227061482127, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.35372028767317, complex1.getImaginary(), 0.01);
      assertEquals(0.802704385704528, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.subtract(1248.18035297239);
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1248.18035297239), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.ONE.pow(0.0);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex2.NaN.reciprocal();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      
      Complex complex4 = complex3.ONE.add(complex2);
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex4.isNaN());
      assertEquals(2.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      complex4.NaN.hashCode();
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex4.isNaN());
      assertEquals(2.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex1.cos();
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1248.18035297239), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-0.8747584021326009), complex5.getReal(), 0.01);
      assertEquals((-0.968122357797768), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      complex5.hashCode();
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1248.18035297239), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-0.8747584021326009), complex5.getReal(), 0.01);
      assertEquals((-0.968122357797768), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      int int0 = (-1126);
      Complex complex6 = complex5.I.multiply((-1126));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1248.18035297239), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-0.8747584021326009), complex5.getReal(), 0.01);
      assertEquals((-0.968122357797768), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals((-1126.0), complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.INF.add(complex1);
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1248.18035297239), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-0.8747584021326009), complex5.getReal(), 0.01);
      assertEquals((-0.968122357797768), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals((-1126.0), complex6.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      
      try { 
        complex0.nthRoot((-357));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -357
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2175.24335), (-2175.24335));
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      
      Complex complex1 = Complex.valueOf((-2175.24335));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex0.NaN.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      
      Complex complex2 = complex0.pow(complex1);
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.INF.sinh();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      
      Complex complex4 = complex3.ZERO.add(complex0);
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals((-2175.24335), complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-2175.24335), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex2.ZERO.multiply(complex3);
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      double double0 = complex1.ZERO.getArgument();
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex6 = complex2.ONE.reciprocal();
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      
      double double1 = complex6.getArgument();
      assertEquals(-0.0, double1, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals(double1, double0, 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      
      Complex complex7 = (Complex)complex6.ONE.readResolve();
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex2.negate();
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex8.INF.multiply(0.0);
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      
      Complex complex10 = complex2.add(complex1);
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2175.24335), complex0.getReal(), 0.01);
      assertEquals((-2175.24335), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2175.24335), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals((-2175.24335), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.I.sin();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.1752011936438014, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.cos();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.ONE.add(0.0);
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex2.conjugate();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      
      List<Complex> list0 = complex4.INF.nthRoot(1725);
      assertNotNull(list0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertFalse(list0.contains(complex4));
      assertTrue(list0.contains(complex0));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      
      Complex complex5 = complex2.I.sin();
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex5.I.createComplex(1725, 3768.3094253437234);
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex5.getImaginary(), 0.01);
      assertEquals(3768.3094253437234, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(1725.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex4.INF.asin();
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex4);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      String string0 = complex7.NaN.toString();
      assertNotNull(string0);
      assertEquals("(NaN, NaN)", string0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex4);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      Complex complex8 = complex1.add(54.59815216064453);
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.1752011936438014, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.1752011936438014, complex8.getImaginary(), 0.01);
      assertEquals(54.59815216064453, complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.INF.subtract((double) 1725);
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.1752011936438014, complex1.getImaginary(), 0.01);
      
      Complex complex10 = complex9.ONE.asin();
      assertNotNull(complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      
      Complex complex11 = complex4.I.cosh();
      assertNotNull(complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      
      Complex complex12 = complex1.multiply(1726.4003672);
      assertNotNull(complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      
      String string1 = complex12.I.toString();
      assertNotNull(string1);
      assertEquals("(0.0, 1.0)", string1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(string1.equals((Object)string0));
      
      double double0 = complex12.I.getArgument();
      assertEquals(1.5707963267948966, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      
      double double1 = complex0.getArgument();
      assertEquals(0.7853981633974483, double1, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertNotEquals(double1, double0, 0.01);
      
      Complex complex13 = complex0.ZERO.atan();
      assertNotNull(complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      
      double double2 = complex1.getArgument();
      assertEquals(1.5707963267948966, double2, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      
      Complex complex14 = complex1.sinh();
      assertNotNull(complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      
      Complex complex15 = complex14.ONE.conjugate();
      assertNotNull(complex15);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex13);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex13));
      
      double double3 = complex4.getArgument();
      assertEquals(Double.NaN, double3, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      
      Complex complex16 = complex14.NaN.createComplex(0.7853981633974483, 1.5707963267948966);
      assertNotNull(complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      
      Complex complex17 = complex1.reciprocal();
      assertNotNull(complex17);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex16);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex16));
      
      Complex complex18 = complex14.cos();
      assertNotNull(complex18);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex0);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex0));
      
      Complex complex19 = complex14.NaN.cosh();
      assertNotNull(complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex13);
      assertSame(complex19, complex4);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex1);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      
      Complex complex20 = complex13.asin();
      assertNotNull(complex20);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex19);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex20);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex0);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex11);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex19));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex19));
      assertTrue(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex11));
      
      double double4 = complex16.getImaginary();
      assertEquals(1.5707963267948966, double4, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex20);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex20);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex19);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex20));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex20));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex19));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertNotEquals(double4, double1, 0.01);
      assertEquals(double4, double2, 0.01);
      assertEquals(double4, double0, 0.01);
      assertNotEquals(double4, double3, 0.01);
      
      double double5 = complex9.getImaginary();
      assertEquals(Double.POSITIVE_INFINITY, double5, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex20);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex20);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex3);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex20));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex10));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex3));
      assertNotEquals(double5, double3, 0.01);
      assertNotEquals(double5, double4, 0.01);
      assertNotEquals(double5, double0, 0.01);
      assertNotEquals(double5, double2, 0.01);
      assertNotEquals(double5, double1, 0.01);
      
      double double6 = complex11.getReal();
      assertEquals(0.5403023058681398, double6, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex4, complex14);
      assertSame(complex4, complex19);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex18);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex18));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex20));
      assertTrue(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertNotEquals(double6, double1, 0.01);
      assertNotEquals(double6, double2, 0.01);
      assertNotEquals(double6, double0, 0.01);
      assertNotEquals(double6, double3, 0.01);
      assertNotEquals(double6, double5, 0.01);
      assertNotEquals(double6, double4, 0.01);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.sinh();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.ZERO.cosh();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      double double0 = complex2.ZERO.abs();
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.NaN.tan();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.INF.pow(800.41);
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex1.ONE.multiply(0);
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex4.log();
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex0.exp();
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(2.718281828459045, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      
      ComplexField complexField0 = complex1.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex8 = complex1.ONE.multiply(complex3);
      assertNotNull(complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex3);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      String string0 = complex8.INF.toString();
      assertNotNull(string0);
      assertEquals("(Infinity, Infinity)", string0);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex3);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex1.asin();
      assertNotNull(complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex9.isInfinite());
      assertEquals(1.5707963267948966, complex9.getReal(), 0.01);
      assertEquals((-0.5836293809324178), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      
      Complex complex10 = complex5.multiply(complex0);
      assertNotNull(complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex10.I.acos();
      assertNotNull(complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals((-0.8813735870195429), complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(1.5707963267948966, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      
      Complex complex12 = complex2.tanh();
      assertNotNull(complex12);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.7615941559557649, complex12.getReal(), 0.01);
      
      Complex complex13 = complex0.acos();
      assertNotNull(complex13);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      boolean boolean0 = complex4.isNaN();
      assertTrue(boolean0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex14 = complex8.log();
      assertNotNull(complex14);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex8);
      assertSame(complex14, complex3);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex12);
      assertSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex6);
      assertSame(complex8, complex14);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex15 = new Complex(4460.5, (-3924.12653752765));
      assertNotNull(complex15);
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(4460.5, complex15.getReal(), 0.01);
      assertEquals((-3924.12653752765), complex15.getImaginary(), 0.01);
      
      boolean boolean1 = complex14.equals(complex15);
      assertFalse(boolean1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex8);
      assertSame(complex14, complex3);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex12);
      assertSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex15);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex6);
      assertSame(complex8, complex14);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(boolean1 == boolean0);
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(4460.5, complex15.getReal(), 0.01);
      assertEquals((-3924.12653752765), complex15.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1506.89), (-1506.89));
      assertNotNull(complex0);
      assertEquals((-1506.89), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1506.89), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = Complex.valueOf((-386.664279657));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals((-386.664279657), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.ZERO.multiply(complex0);
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals((-1506.89), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1506.89), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-386.664279657), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.INF.pow(complex1);
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals((-1506.89), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1506.89), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-386.664279657), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex0.cos();
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals((-1506.89), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1506.89), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex4.I.sinh();
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertEquals((-1506.89), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1506.89), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex5.getImaginary(), 0.01);
      
      Complex complex6 = (Complex)complex5.ONE.readResolve();
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals((-1506.89), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1506.89), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getReal(), 0.01);
      
      Complex complex7 = complex4.acos();
      assertNotNull(complex7);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertEquals((-1506.89), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1506.89), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex8 = (Complex)complex7.readResolve();
      assertNotNull(complex8);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex7));
      assertEquals((-1506.89), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1506.89), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Complex complex0 = new Complex(4273.8);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = Complex.valueOf(4273.8, 0.0);
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(4273.8, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = new Complex((-2267.4));
      assertNotNull(complex2);
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.INF.subtract((-1455.73660668));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.I.atan();
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex0.INF.pow(complex2);
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex5.ONE.sin();
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      String string0 = complex0.toString();
      assertNotNull(string0);
      assertEquals("(4273.8, 0.0)", string0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex6.I.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = Complex.INF;
      assertNotNull(complex7);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      
      Complex complex8 = complex7.INF.sinh();
      assertNotNull(complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = complex8.ONE.sqrt1z();
      assertNotNull(complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex0.divide(complex7);
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      
      String string1 = complex2.toString();
      assertNotNull(string1);
      assertEquals("(-2267.4, 0.0)", string1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex11 = complex7.pow(complex5);
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      Complex complex12 = complex11.ZERO.tanh();
      assertNotNull(complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      
      Complex complex13 = complex12.ONE.acos();
      assertNotNull(complex13);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex7);
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex8));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      
      Complex complex14 = complex5.sinh();
      assertNotNull(complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertTrue(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex15 = complex2.INF.asin();
      assertNotNull(complex15);
      assertSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex5);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertSame(complex15, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex16 = Complex.valueOf(Double.POSITIVE_INFINITY);
      assertNotNull(complex16);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex8);
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex8));
      assertEquals(Double.POSITIVE_INFINITY, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertTrue(complex16.isInfinite());
      
      Complex complex17 = complex5.cosh();
      assertNotNull(complex17);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex10);
      assertSame(complex17, complex14);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex6);
      assertSame(complex17, complex4);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      double double0 = complex17.INF.abs();
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex10);
      assertSame(complex17, complex14);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex6);
      assertSame(complex17, complex4);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex17));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      boolean boolean0 = complex6.equals("(4273.8, 0.0)");
      assertFalse(boolean0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex17));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex18 = complex3.subtract(complex7);
      assertNotNull(complex18);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex0);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertTrue(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertTrue(complex18.isNaN());
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      
      double double1 = complex18.I.abs();
      assertEquals(1.0, double1, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex0);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertTrue(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex11));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertTrue(complex18.isNaN());
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      
      Complex complex19 = complex5.add(complex13);
      assertNotNull(complex19);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex19);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex11);
      assertSame(complex19, complex4);
      assertNotSame(complex19, complex9);
      assertSame(complex19, complex14);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex18);
      assertSame(complex19, complex11);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex10);
      assertSame(complex19, complex17);
      assertSame(complex19, complex15);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex7);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex15);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex17);
      assertSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex12);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex16);
      assertSame(complex11, complex19);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex18);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex7);
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex18));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex17));
      assertTrue(complex5.equals((Object)complex18));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex11));
      assertTrue(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex12));
      assertTrue(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex1));
      assertTrue(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex13));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex15));
      assertTrue(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(-0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex0.isInfinite());
      assertEquals(4273.8, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2267.4), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      
      try { 
        complex13.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.multiply((-2248.1484334));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.createComplex((-1179.846581), (-1179.846581));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1179.846581), complex2.getImaginary(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.NaN.conjugate();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1179.846581), complex2.getImaginary(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.ONE.pow(0.0);
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1179.846581), complex2.getImaginary(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex0.INF.sqrt();
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      
      ComplexField complexField0 = complex0.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      boolean boolean0 = complex2.equals(complex1);
      assertFalse(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertEquals((-1179.846581), complex2.getImaginary(), 0.01);
      assertEquals((-1179.846581), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex6 = complex0.reciprocal();
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex0.NaN.getField();
      assertNotNull(complexField0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.atan();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertTrue(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.ONE.multiply((-996.69));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals((-996.69), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.NaN.atan();
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      
      Complex complex4 = complex3.I.multiply(complex1);
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex3.exp();
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertTrue(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      complex0.INF.hashCode();
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex6 = complex0.add(1834.86809);
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(1834.86809, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex3.asin();
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex3);
      assertSame(complex7, complex5);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex0.pow(0.0);
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.4709796905517578, (-1.0));
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertEquals(0.4709796905517578, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      double double0 = complex0.abs();
      assertEquals(1.105360515357876, double0, 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertEquals(0.4709796905517578, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.multiply((-1127.0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertEquals(0.4709796905517578, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-530.794111251831), complex1.getReal(), 0.01);
      assertEquals(1127.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      try { 
        complex0.ZERO.add((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.NaN.tan();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.I.subtract(complex1);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      
      Complex complex3 = (Complex)complex2.NaN.readResolve();
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      Complex complex4 = complex0.subtract(2938.520193801);
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      
      Complex complex5 = complex4.ONE.multiply(2938.520193801);
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(2938.520193801, complex5.getReal(), 0.01);
      
      Complex complex6 = complex4.tan();
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      assertEquals(1.160731261480031, complex6.getImaginary(), 0.01);
      assertEquals((-0.24655666145282273), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex6.INF.atan();
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      assertEquals(1.160731261480031, complex6.getImaginary(), 0.01);
      assertEquals((-0.24655666145282273), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex6.pow(complex0);
      assertNotNull(complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      assertEquals(1.160731261480031, complex6.getImaginary(), 0.01);
      assertEquals((-0.24655666145282273), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.02871320473595165, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.16615857012138086, complex8.getReal(), 0.01);
      
      String string0 = complex0.ONE.toString();
      assertNotNull(string0);
      assertEquals("(1.0, 0.0)", string0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex9 = complex8.I.multiply(complex0);
      assertNotNull(complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      assertEquals(1.160731261480031, complex6.getImaginary(), 0.01);
      assertEquals((-0.24655666145282273), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.02871320473595165, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.16615857012138086, complex8.getReal(), 0.01);
      assertEquals((-1.0), complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex0.multiply(2938.520193801);
      assertNotNull(complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex10.isNaN());
      assertEquals(2938.520193801, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      
      boolean boolean0 = complex0.isNaN();
      assertFalse(boolean0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex11 = complex7.tanh();
      assertNotNull(complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex10);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex2);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      assertEquals(1.160731261480031, complex6.getImaginary(), 0.01);
      assertEquals((-0.24655666145282273), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      
      Complex complex12 = complex7.ONE.pow(complex4);
      assertNotNull(complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      assertEquals(1.160731261480031, complex6.getImaginary(), 0.01);
      assertEquals((-0.24655666145282273), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      
      boolean boolean1 = complex7.equals("");
      assertFalse(boolean1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(boolean1 == boolean0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals((-2938.520193801), complex4.getReal(), 0.01);
      assertEquals(1.160731261480031, complex6.getImaginary(), 0.01);
      assertEquals((-0.24655666145282273), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Complex complex0 = new Complex(549.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(549.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.INF.conjugate();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(549.0, complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.ZERO.sqrt1z();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(549.0, complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.ZERO.log();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(549.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      
      complex3.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(549.0, complex0.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      
      int int0 = (-1);
      try { 
        complex0.nthRoot((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -1
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.NaN.tanh();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.ONE.sinh();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex1.ONE.subtract((-404.62));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(405.62, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      double double0 = complex2.ZERO.abs();
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex4 = Complex.I;
      assertNotNull(complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex0.subtract(complex4);
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex1.INF.multiply((-939.747427744));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      
      Complex complex7 = complex1.ONE.subtract(0.0);
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex5.atan();
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      
      complex2.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex9 = complex0.atan();
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      
      ComplexField complexField0 = complex8.ZERO.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      
      Complex complex10 = complex9.ONE.add(complex8);
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      
      Complex complex11 = complex10.NaN.sqrt1z();
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex10));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex8.cos();
      assertNotNull(complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = complex8.subtract(complex7);
      assertNotNull(complex13);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex6);
      assertTrue(complex13.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertEquals(Double.POSITIVE_INFINITY, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      
      ComplexField complexField1 = complex5.getField();
      assertNotNull(complexField1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertSame(complexField1, complexField0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex14 = complex1.sqrt();
      assertNotNull(complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      
      Complex complex15 = complex14.add(0.0);
      assertNotNull(complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex11);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertSame(complex15, complex1);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      
      String string0 = complex15.ONE.toString();
      assertNotNull(string0);
      assertEquals("(1.0, 0.0)", string0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex11);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertSame(complex15, complex1);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex8));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      
      Complex complex16 = complex11.tanh();
      assertNotNull(complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex7);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex14);
      assertSame(complex16, complex1);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex12);
      assertSame(complex11, complex15);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex1);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex16);
      assertNotSame(complex11, complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertTrue(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex11));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      complex11.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex12);
      assertSame(complex11, complex15);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex1);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex16);
      assertNotSame(complex11, complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex11));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      
      Complex complex17 = complex8.reciprocal();
      assertNotNull(complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex17);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex0);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex12);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex13));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-1.0), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertTrue(complex8.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-489.136), 1.0);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.ONE.multiply((-463.44327530776));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-463.44327530776), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.pow(724.2057458758251);
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.ZERO.acos();
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex0.acos();
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-6.885788794898004), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(3.1395482309821703, complex4.getReal(), 0.01);
      
      Complex complex5 = complex1.multiply((-1010));
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-489.136), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-463.44327530776), complex1.getReal(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(468077.70806083764, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.add((-740.211901571591));
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex2 = complex1.I.sin();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.ONE.multiply(complex0);
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      Complex complex4 = complex0.I.acos();
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals((-0.8813735870195429), complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex1.ZERO.atan();
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      
      try { 
        complex1.ONE.nthRoot((-2051));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -2,051
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = new Complex(499.4849435);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(499.4849435, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.pow(complex1);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(499.4849435, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      
      double double0 = complex0.getReal();
      assertEquals(0.0, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex3 = Complex.NaN;
      assertNotNull(complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      Complex complex4 = complex0.add(complex3);
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex4);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      
      try { 
        complex3.ZERO.nthRoot((-660));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -660
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      
      Complex complex1 = complex0.NaN.log();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      
      Object object0 = complex0.ZERO.readResolve();
      assertNotNull(object0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(object0, complex0);
      assertNotSame(object0, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(object0.equals((Object)complex0));
      assertFalse(object0.equals((Object)complex1));
      
      Object object1 = complex0.ZERO.readResolve();
      assertNotNull(object1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, object1);
      assertNotSame(object1, complex1);
      assertNotSame(object1, complex0);
      assertNotSame(object1, object0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(object1.equals((Object)complex1));
      assertTrue(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)complex0));
      
      Complex complex2 = Complex.valueOf(1028.7643362933);
      assertNotNull(complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, object1);
      assertNotSame(complex2, object0);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object1));
      assertFalse(complex2.equals((Object)object0));
      
      Complex complex3 = complex0.cosh();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, object1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, object1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)object1));
      
      Complex complex4 = complex0.add(complex3);
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, object1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, object1);
      assertNotSame(complex4, object1);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)object1));
      assertFalse(complex4.equals((Object)object1));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      
      double double0 = complex0.getReal();
      assertEquals(1.0, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, object1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)object1));
      
      Complex complex5 = Complex.valueOf(1794.7518032, 1028.7643362933);
      assertNotNull(complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, object1);
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)object1));
      
      Complex complex6 = complex2.NaN.divide(complex5);
      assertNotNull(complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, object1);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, object1);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex1);
      assertNotSame(complex6, object1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, object0);
      assertNotSame(complex6, complex2);
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)object1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)object1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex2));
      
      Complex complex7 = complex6.INF.multiply(1794.7518032);
      assertNotNull(complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, object1);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, object1);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex1);
      assertNotSame(complex6, object1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, object0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, object1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, object0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)object1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)object1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)object0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)object1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      
      Complex complex8 = complex3.atan();
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, object1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, object1);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)object1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)object0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)object1));
      assertFalse(complex8.equals((Object)complex5));
      
      Complex complex9 = complex8.ZERO.log();
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, object1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, object1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, object1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)object1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)object0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)object1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)object1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      
      Complex complex10 = complex0.pow(complex1);
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object1);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, object1);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object1));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)object1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      
      complex10.ONE.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, object1);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, object1);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object1));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)object1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      
      Complex complex11 = complex10.acos();
      assertNotNull(complex11);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, object1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex10, complex9);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, object1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, object1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex1);
      assertSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)object1));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)object1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex11.equals((Object)object1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      
      Complex complex12 = Complex.valueOf(1.0);
      assertNotNull(complex12);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, object1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)object1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      
      Complex complex13 = complex12.ONE.multiply(complex2);
      assertNotNull(complex13);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, object1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, object0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, object1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, object1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)object1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)object0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)object1));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      
      Complex complex14 = complex13.ONE.add(1794.7518032);
      assertNotNull(complex14);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, object1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, object0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, object1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, object0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, object1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, object1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)object1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)object0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)object1));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)object0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)object1));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object1));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      
      double double1 = complex13.ZERO.abs();
      assertEquals(0.0, double1, 0.01);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, object1);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, object0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, object0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, object1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, object1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)object1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)object0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)object1));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object1));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      
      double double2 = complex4.I.abs();
      assertEquals(1.0, double2, 0.01);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, object1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, object1);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)object1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)object1));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      
      Complex complex15 = complex11.INF.tanh();
      assertNotNull(complex15);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, object1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertSame(complex15, complex1);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, object0);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, object1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex12);
      assertNotSame(complex10, complex9);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex13);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, object1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex15);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, object1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex14);
      assertSame(complex11, complex15);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex1);
      assertSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)object1));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)object0));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)object1));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)object1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)object1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      
      Complex complex16 = complex10.tanh();
      assertNotNull(complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, object1);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex16, object0);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, object1);
      assertNotSame(complex16, complex8);
      assertSame(complex16, complex1);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertSame(complex16, complex10);
      assertSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex6);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex10, complex9);
      assertSame(complex10, complex16);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex13);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, object1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex15);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)object1));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex16.equals((Object)object0));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)object1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)object1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      
      Complex complex17 = complex0.multiply(complex9);
      assertNotNull(complex17);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, object1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, object1);
      assertNotSame(complex17, object0);
      assertSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, object1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex13);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, object1);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex8);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)object1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)object1));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)object1));
      assertFalse(complex17.equals((Object)object0));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)object0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex7));
      
      Complex complex18 = complex17.INF.cosh();
      assertNotNull(complex18);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, object1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, object1);
      assertNotSame(complex17, object0);
      assertSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, object0);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, object1);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, object1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex13);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, object1);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex8);
      
      Complex complex19 = complex18.I.createComplex((-733.362462818639), 1.0);
      assertNotNull(complex19);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, object1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex19);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, object1);
      assertNotSame(complex17, object0);
      assertSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, object0);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, object1);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, object1);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, object0);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex15);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, object1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex13);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, object1);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex19);
      
      Complex complex20 = complex19.ONE.acos();
      assertNotNull(complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, object1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex19);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex20);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, object1);
      assertNotSame(complex17, object0);
      assertSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, object0);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex20);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, object1);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, object1);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, object0);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex15);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, object0);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, object1);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, object0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex20);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, object1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex13);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, object1);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, object0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex20);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex19);
      
      Complex complex21 = complex4.log();
      assertNotNull(complex21);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, object1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex21);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, object0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex19);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex21);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, object1);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex3);
      assertNotSame(complex21, object1);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, object0);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex17);
      
      Complex complex22 = complex0.tan();
      assertNotNull(complex22);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex22, complex12);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex19);
      assertNotSame(complex22, object1);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex0);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, object0);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex3);
      
      Complex complex23 = complex15.add(1.0);
      assertNotNull(complex23);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex18);
      assertSame(complex1, complex23);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, object1);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, object0);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex19);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, object1);
      assertSame(complex15, complex23);
      assertNotSame(complex15, complex22);
      assertSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex16);
      assertNotSame(complex15, complex20);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex21);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex12);
      assertSame(complex23, complex16);
      assertSame(complex23, complex1);
      assertNotSame(complex23, complex20);
      assertNotSame(complex23, complex13);
      assertSame(complex23, complex10);
      assertNotSame(complex23, complex12);
      assertNotSame(complex23, object1);
      assertNotSame(complex23, complex21);
      assertNotSame(complex23, complex22);
      assertNotSame(complex23, complex14);
      assertNotSame(complex23, complex5);
      assertSame(complex23, complex6);
      assertNotSame(complex23, complex4);
      assertNotSame(complex23, object0);
      assertNotSame(complex23, complex0);
      assertSame(complex23, complex15);
      assertNotSame(complex23, complex9);
      assertSame(complex23, complex11);
      assertNotSame(complex23, complex7);
      assertNotSame(complex23, complex8);
      assertNotSame(complex23, complex3);
      assertNotSame(complex23, complex19);
      assertNotSame(complex23, complex18);
      assertNotSame(complex23, complex2);
      assertNotSame(complex23, complex17);
      assertNotSame(complex10, complex20);
      assertNotSame(complex10, complex21);
      assertSame(complex10, complex16);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex13);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, object0);
      assertSame(complex10, complex23);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex18);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex22);
      assertNotSame(complex10, object1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex15);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, object1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex22);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex1);
      assertSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex16);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, object0);
      assertSame(complex11, complex23);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex15);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex21);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex18);
      
      Complex complex24 = complex11.ZERO.multiply(complex7);
      assertNotNull(complex24);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex24);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, object1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex9);
      assertSame(complex1, complex15);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex24);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex18);
      assertSame(complex1, complex23);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, object1);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex24);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, object1);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex23);
      assertNotSame(complex2, complex22);
      assertNotSame(complex2, complex13);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex21);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex23);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex24);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, object1);
      assertNotSame(complex5, complex22);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex22);
      assertSame(complex6, complex15);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex24);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex21);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex11);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, object1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex23);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex16);
      assertNotSame(complex6, object0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex21);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex17);
      assertNotSame(complex7, complex20);
      assertNotSame(complex7, object0);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex13);
      assertSame(complex7, complex24);
      assertNotSame(complex7, complex23);
      assertNotSame(complex7, object1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex22);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex12);
      assertNotSame(complex10, complex20);
      assertNotSame(complex10, complex21);
      assertSame(complex10, complex16);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex13);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, object0);
      assertSame(complex10, complex23);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex18);
      assertSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex22);
      assertNotSame(complex10, object1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex15);
      assertNotSame(complex10, complex24);
      assertNotSame(complex24, complex14);
      assertNotSame(complex24, complex3);
      assertNotSame(complex24, complex19);
      assertNotSame(complex24, complex8);
      assertNotSame(complex24, complex12);
      assertNotSame(complex24, complex5);
      assertNotSame(complex24, object1);
      assertNotSame(complex24, complex22);
      assertNotSame(complex24, complex11);
      assertNotSame(complex24, complex13);
      assertNotSame(complex24, complex0);
      assertNotSame(complex24, complex4);
      assertNotSame(complex24, complex20);
      assertNotSame(complex24, object0);
      assertNotSame(complex24, complex6);
      assertSame(complex24, complex17);
      assertNotSame(complex24, complex16);
      assertSame(complex24, complex7);
      assertNotSame(complex24, complex21);
      assertNotSame(complex24, complex1);
      assertNotSame(complex24, complex23);
      assertNotSame(complex24, complex9);
      assertNotSame(complex24, complex15);
      assertNotSame(complex24, complex2);
      assertNotSame(complex24, complex18);
      assertNotSame(complex24, complex10);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, object1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex22);
      assertNotSame(complex11, complex13);
      assertSame(complex11, complex1);
      assertSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex16);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, object0);
      assertSame(complex11, complex23);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex15);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex21);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex24);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex18);
      
      try { 
        complex4.divide((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      try { 
        complex0.subtract((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Complex complex0 = new Complex(931.2);
      assertNotNull(complex0);
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      double double0 = complex0.ZERO.getArgument();
      assertEquals(0.0, double0, 0.01);
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.INF.conjugate();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex1.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.sqrt1z();
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(931.1994630582644, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.ONE.multiply(1144);
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1144.0, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.ZERO.pow(complex0);
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(1144.0, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      int int0 = 4104;
      Complex complex5 = complex0.multiply(4104);
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(3821644.8000000003, complex5.getReal(), 0.01);
      
      int int1 = complex5.hashCode();
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(int1 == int0);
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(3821644.8000000003, complex5.getReal(), 0.01);
      
      Complex complex6 = complex5.divide(931.2);
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(3821644.8000000003, complex5.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(4104.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex6.NaN.sqrt1z();
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(3821644.8000000003, complex5.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(4104.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      Complex complex8 = complex5.ONE.tanh();
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(3821644.8000000003, complex5.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.7615941559557649, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex7.NaN.cosh();
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(3821644.8000000003, complex5.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(4104.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex2.subtract(0.0);
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(931.1994630582644, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(931.1994630582644, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex10.pow(complex5);
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(931.1994630582644, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(3821644.8000000003, complex5.getReal(), 0.01);
      assertEquals(931.1994630582644, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isInfinite());
      
      Complex complex12 = complex6.I.divide(complex5);
      assertNotNull(complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertEquals(931.2, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(3821644.8000000003, complex5.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(4104.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(2.6166743701560124E-7, complex12.getImaginary(), 0.01);
      
      try { 
        complex5.INF.nthRoot((-293));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -293
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 6.283185307179586);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.reciprocal();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.I.pow(0.0);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex2.I.sin();
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      
      Complex complex4 = (Complex)complex1.readResolve();
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.15915494309189535), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex2.ONE.tanh();
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.7615941559557649, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      
      Complex complex6 = complex1.ZERO.divide(complex2);
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.ONE.createComplex(0.0, 99.9160372);
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(99.9160372, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      
      boolean boolean0 = complex1.equals(complex4);
      assertTrue(boolean0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.15915494309189535), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex8 = complex1.divide(0.0);
      assertNotNull(complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex0.negate();
      assertNotNull(complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-6.283185307179586), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      
      Complex complex10 = complex2.ZERO.pow(complex9);
      assertNotNull(complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-6.283185307179586), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex9.INF.log();
      assertNotNull(complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-6.283185307179586), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.7853981633974483, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isInfinite());
      
      Complex complex12 = complex1.I.add(2458.21268047);
      assertNotNull(complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(1.0, complex12.getImaginary(), 0.01);
      assertEquals(2458.21268047, complex12.getReal(), 0.01);
      
      Complex complex13 = complex2.ONE.createComplex(0.0, 2458.21268047);
      assertNotNull(complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(2458.21268047, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getReal(), 0.01);
      
      Complex complex14 = complex9.NaN.sin();
      assertNotNull(complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-6.283185307179586), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      
      Complex complex15 = complex8.tan();
      assertNotNull(complex15);
      assertSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex3);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex11);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex16 = (Complex)complex14.readResolve();
      assertNotNull(complex16);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex14, complex4);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex6);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex0));
      assertTrue(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex12));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-6.283185307179586), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      
      Complex complex17 = complex8.reciprocal();
      assertNotNull(complex17);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex16);
      assertSame(complex17, complex14);
      assertSame(complex17, complex8);
      assertNotSame(complex17, complex11);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex14);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex9));
      assertTrue(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertTrue(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex18 = complex14.subtract(complex3);
      assertNotNull(complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex16);
      assertNotSame(complex18, complex10);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex17);
      assertSame(complex18, complex14);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex0);
      assertSame(complex18, complex15);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex14, complex4);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex6);
      assertSame(complex14, complex18);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertSame(complex14, complex17);
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex2));
      assertTrue(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex11));
      assertTrue(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertTrue(complex18.isNaN());
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-6.283185307179586), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      
      Complex complex19 = complex8.pow(complex0);
      assertNotNull(complex19);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex12);
      assertSame(complex19, complex15);
      assertNotSame(complex19, complex13);
      assertSame(complex19, complex18);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex1);
      assertSame(complex19, complex8);
      assertSame(complex19, complex14);
      assertNotSame(complex19, complex4);
      assertSame(complex19, complex17);
      assertNotSame(complex19, complex16);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex19);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex14);
      assertSame(complex8, complex18);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex2));
      assertTrue(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex11));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertTrue(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex20 = complex19.multiply((-3309));
      assertNotNull(complex20);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex12);
      assertSame(complex19, complex15);
      assertNotSame(complex19, complex13);
      assertSame(complex19, complex18);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex11);
      assertSame(complex19, complex20);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex1);
      assertSame(complex19, complex8);
      assertSame(complex19, complex14);
      assertNotSame(complex19, complex4);
      assertSame(complex19, complex17);
      assertNotSame(complex19, complex16);
      assertNotSame(complex20, complex6);
      assertSame(complex20, complex17);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex11);
      assertSame(complex20, complex19);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex0);
      assertSame(complex20, complex15);
      assertNotSame(complex20, complex13);
      assertSame(complex20, complex18);
      assertNotSame(complex20, complex2);
      assertSame(complex20, complex8);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex16);
      assertSame(complex20, complex14);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex4);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex19);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex20);
      assertSame(complex8, complex14);
      assertSame(complex8, complex18);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex2));
      assertTrue(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex11));
      assertTrue(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex11));
      assertTrue(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex12));
      assertTrue(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertTrue(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertTrue(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      boolean boolean1 = complex17.isNaN();
      assertTrue(boolean1);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertSame(complex17, complex15);
      assertSame(complex17, complex20);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex16);
      assertSame(complex17, complex14);
      assertSame(complex17, complex18);
      assertSame(complex17, complex8);
      assertSame(complex17, complex19);
      assertNotSame(complex17, complex11);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertSame(complex8, complex19);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex20);
      assertSame(complex8, complex14);
      assertSame(complex8, complex18);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex9));
      assertTrue(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex11));
      assertTrue(boolean1 == boolean0);
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertTrue(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-0.15915494309189535), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex21 = complex11.pow(721.7235);
      assertNotNull(complex21);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex20);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex20);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex21);
      assertNotSame(complex9, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex21);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex6));
      assertTrue(complex21.equals((Object)complex17));
      assertTrue(complex21.equals((Object)complex20));
      assertTrue(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex9));
      assertTrue(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex3));
      assertTrue(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex4));
      assertTrue(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex21.isInfinite());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-6.283185307179586), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.7853981633974483, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isInfinite());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.sqrt();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex0.INF.asin();
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.sin();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      
      double double0 = complex3.getImaginary();
      assertEquals(1.1752011936438014, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      
      boolean boolean0 = complex2.isInfinite();
      assertFalse(boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex0.getField();
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex4 = complex3.cosh();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.38535742648327137, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex1.tan();
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.42318427386994595, complex5.getReal(), 0.01);
      assertEquals(0.82903227364117, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex5.add(1.1752011936438014);
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.42318427386994595, complex5.getReal(), 0.01);
      assertEquals(0.82903227364117, complex5.getImaginary(), 0.01);
      assertEquals(0.82903227364117, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.5983854675137472, complex6.getReal(), 0.01);
      
      Complex complex7 = complex6.ZERO.multiply(1.1752011936438014);
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.42318427386994595, complex5.getReal(), 0.01);
      assertEquals(0.82903227364117, complex5.getImaginary(), 0.01);
      assertEquals(0.82903227364117, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.5983854675137472, complex6.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex5.INF.asin();
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.42318427386994595, complex5.getReal(), 0.01);
      assertEquals(0.82903227364117, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex8.add(1.1752011936438014);
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex8);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.42318427386994595, complex5.getReal(), 0.01);
      assertEquals(0.82903227364117, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex4.negate();
      assertNotNull(complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.1752011936438014, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.38535742648327137, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.38535742648327137), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      
      double double1 = complex5.getImaginary();
      assertEquals(0.82903227364117, double1, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.42318427386994595, complex5.getReal(), 0.01);
      assertEquals(0.82903227364117, complex5.getImaginary(), 0.01);
      
      Complex complex11 = complex5.createComplex((-2106.2134946051), 1.1752011936438014);
      assertNotNull(complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.42318427386994595, complex5.getReal(), 0.01);
      assertEquals(0.82903227364117, complex5.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals((-2106.2134946051), complex11.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex5.add(1.1752011936438014);
      assertNotNull(complex12);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex12.isNaN());
      assertEquals(0.82903227364117, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.5983854675137472, complex12.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.7071067811865475, complex1.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.42318427386994595, complex5.getReal(), 0.01);
      assertEquals(0.82903227364117, complex5.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Complex complex0 = Complex.valueOf(2.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      
      double double0 = complex0.ZERO.abs();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.exp();
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.I.multiply(50);
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(50.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex1.NaN.sqrt1z();
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      complex3.ONE.hashCode();
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.reciprocal();
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex1.INF.multiply(3044.74567287009);
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertTrue(complex5.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      
      Complex complex6 = complex1.acos();
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(2.688536497307481, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      
      Complex complex7 = complex6.ONE.pow((double) 50);
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(2.688536497307481, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = (Complex)complex6.ZERO.readResolve();
      assertNotNull(complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(2.688536497307481, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      
      complex0.hashCode();
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      
      Complex complex9 = complex2.cos();
      assertNotNull(complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(7.38905609893065, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(50.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertEquals(2.592352764293536E21, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Complex complex0 = Complex.valueOf(9.676190774054103E-143);
      Complex complex1 = complex0.I.tan();
      Complex complex2 = complex0.INF.tan();
      Complex complex3 = complex2.ZERO.divide(complex1);
      Complex complex4 = complex3.I.tanh();
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(1.557407724654902, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      
      List<Complex> list0 = complex2.I.nthRoot(353);
      assertEquals(353, list0.size());
      
      complex2.ONE.sinh();
      Complex complex5 = complex0.ZERO.conjugate();
      Complex complex6 = complex0.exp();
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      
      Complex complex7 = complex0.NaN.reciprocal();
      Complex complex8 = Complex.valueOf((-2117.3540874252), 0.0);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex5.NaN.sqrt1z();
      Complex complex10 = complex5.divide((-2117.3540874252));
      Complex complex11 = complex10.ONE.createComplex(0.0, 353);
      Complex complex12 = complex5.sin();
      Complex complex13 = complex12.NaN.subtract(0.0);
      assertTrue(complex12.equals((Object)complex3));
      
      Complex complex14 = complex10.log();
      assertTrue(complex14.isInfinite());
      
      Complex complex15 = complex7.tan();
      assertSame(complex7, complex9);
      assertSame(complex15, complex13);
      
      complex11.readResolve();
      Complex complex16 = complex1.divide((-2374.141128997064));
      assertEquals(-0.0, complex16.getReal(), 0.01);
      assertEquals((-3.2078722981286877E-4), complex16.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = Complex.ZERO;
      Complex complex2 = complex1.ONE.multiply(584.0051877);
      Complex complex3 = complex0.divide(complex1);
      Complex complex4 = complex0.add(1752.204);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1753.204, complex4.getReal(), 0.01);
      
      Complex complex5 = new Complex(584.0051877, 0.0);
      Complex complex6 = complex3.pow(complex5);
      assertSame(complex6, complex3);
      
      Complex complex7 = complex2.negate();
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-584.0051877), complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = complex0.NaN.divide(0.0);
      Complex complex2 = complex0.subtract(0.0);
      Complex complex3 = complex2.pow(0.0);
      Complex complex4 = complex1.I.sinh();
      Complex complex5 = complex4.I.pow((-37.36262383));
      String string0 = complex0.INF.toString();
      assertEquals("(Infinity, Infinity)", string0);
      
      Complex complex6 = complex5.NaN.log();
      Object object0 = complex0.readResolve();
      complex1.getField();
      Complex complex7 = complex0.multiply(1246);
      Complex complex8 = complex7.ONE.multiply(complex0);
      complex6.createComplex((-1686.2462), 0.0);
      Complex complex9 = complex2.sqrt1z();
      assertSame(complex9, complex3);
      
      Complex complex10 = complex6.acos();
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals((-0.539302133824466), complex5.getReal(), 0.01);
      assertSame(complex1, complex8);
      assertTrue(complex10.equals((Object)object0));
      assertSame(complex10, complex7);
      assertEquals((-0.8421123490677344), complex5.getImaginary(), 0.01);
  }
}
