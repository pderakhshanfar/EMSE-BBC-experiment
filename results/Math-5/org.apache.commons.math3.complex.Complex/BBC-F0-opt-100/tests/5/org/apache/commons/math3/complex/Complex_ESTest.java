/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 21:50:55 GMT 2021
 */

package org.apache.commons.math3.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Complex_ESTest extends Complex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = new Complex((-2319.73527), Double.POSITIVE_INFINITY);
      complex1.multiply(1662);
      Complex complex2 = new Complex(1662, 1.0);
      complex2.pow(complex1);
      complex1.abs();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.subtract((-78.0));
      Complex complex2 = complex1.INF.tanh();
      Complex complex3 = complex2.cos();
      Complex complex4 = complex0.createComplex(2304.173335687, (-2580.8011519951788));
      Complex complex5 = complex0.sqrt();
      Complex complex6 = complex0.multiply(complex4);
      Complex complex7 = complex5.createComplex((-3608.2168), (-2580.8011519951788));
      complex0.INF.subtract((-2580.8011519951788));
      complex7.createComplex((-37.0), (-2580.8011519951788));
      complex6.negate();
      Complex complex8 = complex7.exp();
      Complex complex9 = complex7.ONE.asin();
      complex9.abs();
      complex8.INF.divide(complex5);
      complex1.sqrt1z();
      Complex complex10 = complex0.negate();
      complex10.createComplex(-0.0, 1865.4618716);
      complex7.createComplex(3573.374, 504.98755262);
      complex10.atan();
      complex5.createComplex(852.5845513, (-78.0));
      complex3.abs();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = new Complex(4.2269712317468864E-156, 4.2269712317468864E-156);
      Complex complex2 = new Complex(4.2269712317468864E-156, 4.2269712317468864E-156);
      Complex complex3 = new Complex(1056.586);
      complex3.readResolve();
      Complex complex4 = new Complex(4.2269712317468864E-156);
      Complex complex5 = complex4.negate();
      complex5.multiply(complex0);
      Complex complex6 = new Complex(4.2269712317468864E-156, 2.782159649779516);
      Complex complex7 = complex6.asin();
      complex4.abs();
      complex6.toString();
      complex1.acos();
      Complex complex8 = Complex.I;
      Complex complex9 = complex8.createComplex(1056.586, 1056.586);
      complex7.tan();
      Complex complex10 = complex2.add(complex9);
      Complex complex11 = Complex.valueOf(4.2269712317468864E-156, Double.POSITIVE_INFINITY);
      complex6.nthRoot(317);
      Complex complex12 = complex11.divide(4.2269712317468864E-156);
      complex12.multiply(complex3);
      complex7.add(complex10);
      Complex complex13 = Complex.INF;
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Complex complex0 = Complex.I;
      complex0.NaN.log();
      Complex complex1 = Complex.valueOf(1814.4, Double.POSITIVE_INFINITY);
      complex1.INF.pow(1814.4);
      complex1.acos();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = new Complex(98.470814453, Double.POSITIVE_INFINITY);
      complex0.I.pow(complex1);
      complex0.atan();
      complex0.nthRoot(1156);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Complex complex0 = new Complex(2147483405, (-1931.3803339));
      complex0.exp();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Complex complex0 = new Complex((-130.6426247), 20.0);
      complex0.sqrt();
      complex0.tan();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.multiply((-20.0));
      Complex.valueOf((-20.0), (-20.0));
      complex1.nthRoot(416);
      complex1.createComplex(2.0, (-868.172774));
      complex1.getArgument();
      Complex complex2 = Complex.valueOf(3091.2406972);
      Complex complex3 = Complex.valueOf(931.913, (-1.0));
      complex2.acos();
      Complex.valueOf(9.350990339947455E-147, (-868.172774));
      complex3.readResolve();
      Object object0 = new Object();
      complex0.equals(", ");
      complex2.divide((-20.0));
      complex1.tan();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.createComplex((-850.226608354264), (-850.226608354264));
      Complex complex2 = complex1.multiply(1371);
      complex2.getField();
      Complex complex3 = Complex.valueOf((-643.31435568872), (-643.31435568872));
      Complex complex4 = complex1.acos();
      complex2.sqrt1z();
      Complex complex5 = complex4.multiply((-643.31435568872));
      complex5.atan();
      Complex complex6 = complex5.multiply(3392487.7806410003);
      Complex complex7 = new Complex((-643.31435568872));
      Complex complex8 = Complex.ONE;
      complex8.nthRoot(7);
      complex2.getArgument();
      Complex.valueOf(Double.POSITIVE_INFINITY);
      complex3.sqrt();
      Complex complex9 = Complex.valueOf((-2.356194490192345), 4.2269712317468864E-156);
      complex6.readResolve();
      Complex complex10 = Complex.NaN;
      Object object0 = new Object();
      complex7.equals(object0);
      Complex complex11 = Complex.ONE;
      complex11.divide((-643.31435568872));
      complex9.tan();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.tan();
      Complex complex2 = complex0.add(0.5403023058681398);
      Complex complex3 = complex2.conjugate();
      Complex complex4 = Complex.valueOf(0.0, (-1469.0728));
      Complex.valueOf(3811918.1750225998);
      complex1.add(0.5403023058681398);
      Complex complex5 = complex4.reciprocal();
      complex2.getField();
      Complex complex6 = complex1.add(complex2);
      Complex complex7 = complex0.sqrt1z();
      Complex complex8 = Complex.ONE;
      complex3.add(complex6);
      Complex complex9 = Complex.ONE;
      Complex complex10 = complex5.pow(complex9);
      complex10.hashCode();
      complex0.reciprocal();
      complex9.getField();
      Complex complex11 = complex8.cos();
      Complex complex12 = complex1.sqrt();
      Complex complex13 = Complex.ZERO;
      complex13.readResolve();
      complex5.negate();
      complex11.multiply(complex2);
      complex0.asin();
      complex7.acos();
      complex0.reciprocal();
      complex7.sin();
      complex12.atan();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.add(5965.4431534);
      complex1.conjugate();
      Complex complex2 = Complex.valueOf(169.38179, (-3167.69939));
      complex1.add(5965.4431534);
      complex0.reciprocal();
      complex1.getField();
      Complex complex3 = complex1.add(complex2);
      Complex complex4 = Complex.ONE;
      complex4.sqrt1z();
      Complex complex5 = Complex.ONE;
      Complex complex6 = null;
      try { 
        complex3.add((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = Complex.valueOf(4.2269712317468864E-156, 4.2269712317468864E-156);
      Complex complex2 = complex1.NaN.tan();
      Complex complex3 = complex2.INF.add(4.2269712317468864E-156);
      Complex complex4 = complex3.conjugate();
      Complex complex5 = Complex.valueOf(4.2269712317468864E-156, 4.2269712317468864E-156);
      Complex complex6 = complex5.add(4.2269712317468864E-156);
      Complex complex7 = complex5.ZERO.reciprocal();
      complex0.getField();
      complex0.ONE.add(complex1);
      Complex complex8 = complex0.I.sqrt1z();
      Complex complex9 = Complex.ONE;
      Complex complex10 = complex8.INF.add(complex9);
      Complex complex11 = Complex.ONE;
      complex4.add(complex5);
      Complex complex12 = complex1.pow(complex2);
      complex10.hashCode();
      Complex complex13 = complex12.reciprocal();
      complex7.I.cosh();
      complex5.getField();
      complex10.cos();
      Complex complex14 = complex3.sqrt();
      complex14.NaN.cos();
      complex3.readResolve();
      complex5.negate();
      complex8.multiply(complex13);
      complex1.asin();
      complex6.abs();
      complex7.toString();
      complex2.conjugate();
      complex0.sinh();
      Complex complex15 = Complex.INF;
      complex15.cosh();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      try { 
        complex0.INF.multiply((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      Complex complex2 = complex1.ONE.subtract(412.6579250638069);
      Complex complex3 = complex0.pow(complex1);
      Complex complex4 = complex3.I.cos();
      complex1.INF.divide(complex0);
      Complex complex5 = complex2.ZERO.acos();
      Complex complex6 = new Complex(4215.2032554, 412.6579250638069);
      complex5.NaN.subtract(complex6);
      Complex complex7 = complex2.exp();
      complex7.NaN.multiply(1);
      complex6.INF.abs();
      Complex complex8 = Complex.ONE;
      complex4.pow(412.6579250638069);
      Complex complex9 = complex4.divide(complex0);
      complex9.atan();
      complex4.abs();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.negate();
      complex1.hashCode();
      complex2.INF.sin();
      complex2.ONE.reciprocal();
      Complex complex3 = complex0.multiply(420.0861777);
      Complex complex4 = complex3.divide(complex1);
      Complex complex5 = complex2.ZERO.sqrt1z();
      complex1.divide(Double.POSITIVE_INFINITY);
      complex1.cos();
      Complex complex6 = new Complex(Double.POSITIVE_INFINITY);
      complex6.sqrt();
      complex4.readResolve();
      Complex complex7 = complex5.negate();
      Complex complex8 = Complex.ZERO;
      complex8.multiply(complex6);
      complex7.asin();
      Complex complex9 = complex6.ONE.subtract(complex7);
      complex9.ZERO.cosh();
      complex2.abs();
      complex1.toString();
      complex7.conjugate();
      complex8.sinh();
      try { 
        complex2.nthRoot((-4274));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -4,274
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.negate();
      complex1.hashCode();
      complex2.INF.sin();
      Complex complex3 = complex2.ONE.reciprocal();
      Complex complex4 = complex0.multiply(420.0861777);
      Complex complex5 = Complex.I;
      Complex complex6 = complex2.ZERO.sqrt1z();
      Complex complex7 = new Complex((-2752.7100121246044), Double.POSITIVE_INFINITY);
      complex7.reciprocal();
      complex0.getField();
      Complex complex8 = complex3.cos();
      complex1.sqrt();
      complex3.readResolve();
      Complex complex9 = complex0.negate();
      Complex complex10 = complex3.multiply(complex4);
      complex10.asin();
      complex2.abs();
      complex0.toString();
      Complex complex11 = complex9.conjugate();
      Complex complex12 = complex8.sinh();
      complex11.nthRoot(4125);
      complex1.subtract(complex6);
      complex5.toString();
      complex12.pow(complex11);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Complex complex0 = new Complex(420.0861777, 4215.2032554);
      Complex complex1 = Complex.I;
      Complex complex2 = Complex.valueOf(4215.2032554, Double.NaN);
      Complex complex3 = complex1.subtract(complex2);
      Complex complex4 = complex2.exp();
      Complex complex5 = Complex.NaN;
      Complex complex6 = complex5.multiply(1);
      complex4.abs();
      complex3.divide(complex6);
      complex5.sinh();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.tanh();
      Complex complex2 = complex0.negate();
      complex1.hashCode();
      Complex complex3 = complex2.INF.sin();
      Complex complex4 = complex2.ONE.reciprocal();
      complex0.multiply(420.0861777);
      complex3.sqrt1z();
      complex2.divide(874.985387400359);
      complex3.getImaginary();
      Complex complex5 = complex0.sqrt1z();
      Complex complex6 = Complex.NaN;
      complex6.pow(complex0);
      Complex complex7 = complex4.sinh();
      Complex complex8 = Complex.ZERO;
      complex8.tanh();
      complex5.add(2.0000001750680494);
      Complex complex9 = new Complex(874.985387400359, Double.NaN);
      Complex complex10 = complex9.multiply((-9709455.0));
      complex5.getArgument();
      complex4.sqrt1z();
      complex10.getReal();
      complex9.createComplex(Double.NaN, (-480.2715294005355));
      complex7.asin();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Complex complex0 = new Complex((-1.0725602261510391E-7), 1.7069074829463731E180);
      Complex complex1 = Complex.valueOf(38.083, 38.083);
      Complex complex2 = complex1.NaN.multiply((-2028));
      complex1.ONE.createComplex(683.0166052444, (-3769.5836410352));
      Complex complex3 = complex2.I.multiply(1935);
      complex0.multiply(complex1);
      Complex complex4 = complex0.INF.multiply(755);
      complex4.INF.tan();
      Complex complex5 = complex0.negate();
      Complex complex6 = complex5.multiply(complex0);
      complex3.I.subtract(complex2);
      complex3.INF.log();
      Complex complex7 = complex5.NaN.cos();
      complex7.I.multiply(683.0166052444);
      complex3.I.negate();
      Complex complex8 = complex6.I.createComplex(6.283185307179586, 39.98144255880216);
      complex8.INF.pow((-20.0));
      complex8.INF.hashCode();
      complex5.I.sin();
      complex5.subtract((-20.0));
      complex0.sqrt1z();
      Complex complex9 = complex3.cos();
      complex9.I.subtract((-20.0));
      try { 
        complex2.nthRoot((-376));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -376
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.tanh();
      complex0.atan();
      Complex complex2 = complex0.add(8.921974556221016);
      Complex complex3 = Complex.I;
      List<Complex> list0 = complex1.nthRoot(4149);
      Complex.valueOf(8.37464636487337);
      Complex.valueOf(5.052623102983489E-4, (-1761.7764));
      Complex complex4 = complex2.sqrt();
      Complex.valueOf(618.59284536686, 5.052623102983489E-4);
      complex0.readResolve();
      Complex complex5 = new Complex((-1761.7764), (-2896.45536455));
      complex2.equals(list0);
      complex4.divide((-1761.7764));
      Complex complex6 = new Complex(1029.023120451);
      Complex complex7 = Complex.valueOf((-1761.7764), (-879.1879407399065));
      complex7.divide(Double.NaN);
      complex6.tan();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.tanh();
      Complex complex2 = complex1.negate();
      complex1.hashCode();
      Complex complex3 = complex0.sqrt1z();
      complex1.pow(complex3);
      Complex complex4 = new Complex((-2463.00963725), 3.002095574584687E155);
      Complex complex5 = complex4.sinh();
      Complex complex6 = complex1.tanh();
      Complex complex7 = complex2.add(315.0);
      Complex complex8 = complex5.multiply((-881.3526));
      complex5.getArgument();
      Complex complex9 = Complex.ZERO;
      complex9.sqrt1z();
      complex6.getReal();
      complex8.createComplex(75.66, (-2217.637493));
      complex4.asin();
      complex7.abs();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Complex complex0 = new Complex(0.0, (-178.51));
      Complex complex1 = complex0.sqrt();
      Complex complex2 = complex1.sqrt();
      Complex complex3 = complex2.createComplex(0.0, 1.0);
      Complex complex4 = new Complex(1216.7675);
      complex4.hashCode();
      complex0.log();
      complex3.readResolve();
      complex3.asin();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-20.0), 11.78386458318);
      Complex complex1 = complex0.acos();
      Complex complex2 = complex1.sqrt1z();
      complex2.multiply(11.78386458318);
      Complex complex3 = complex1.atan();
      Complex complex4 = complex0.I.add(1.4142135623730951);
      Complex complex5 = Complex.I;
      complex3.nthRoot(4149);
      Complex complex6 = Complex.valueOf(0.0);
      Complex.valueOf(574.28825, 5255063.091548982);
      Complex complex7 = Complex.INF;
      Complex complex8 = complex7.sqrt();
      Complex complex9 = Complex.valueOf(0.0, 0.2990913391113281);
      complex8.readResolve();
      Complex complex10 = new Complex(Double.POSITIVE_INFINITY, (-1922.982));
      complex4.equals(complex8);
      complex9.divide(662.28912);
      Complex complex11 = new Complex(8.37464636487337);
      complex6.divide(1.4865891933441162);
      complex11.tan();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = complex0.createComplex(2982.7215767, 4.137618951061827E263);
      Complex complex2 = complex1.multiply((-1557));
      complex2.getField();
      Complex complex3 = complex0.log();
      Complex complex4 = Complex.valueOf(3156.2164370191, (-4576.0));
      complex2.acos();
      complex3.sqrt1z();
      Complex complex5 = complex0.multiply((-1.0));
      Complex complex6 = complex4.atan();
      Complex complex7 = Complex.I;
      complex7.nthRoot(4179);
      complex6.getArgument();
      Complex.valueOf((-20.0));
      complex4.sqrt();
      Complex.valueOf(2.0, (double) 132);
      complex5.readResolve();
      complex4.equals(complex2);
      Complex complex8 = Complex.NaN;
      complex8.divide((double) (-1557));
      complex7.tan();
      complex5.asin();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-20.0), 11.78386458318);
      Complex complex1 = complex0.acos();
      Complex complex2 = complex1.sqrt1z();
      Complex complex3 = complex2.multiply(11.78386458318);
      complex1.atan();
      Complex complex4 = complex0.I.add(1.4142135623730951);
      Complex complex5 = Complex.I;
      complex0.nthRoot(4149);
      Complex.valueOf(0.0);
      complex4.tan();
      Complex complex6 = new Complex(11.78386458318);
      Complex complex7 = new Complex(4149);
      Complex complex8 = Complex.ZERO;
      Complex complex9 = complex8.pow(complex0);
      Complex complex10 = complex2.sinh();
      Complex complex11 = Complex.I;
      complex0.tanh();
      complex9.add(0.0);
      complex11.abs();
      Complex.valueOf(1.4142135623730951, 0.0);
      complex11.multiply(859.2652405245);
      complex9.getArgument();
      complex5.sqrt1z();
      complex10.getReal();
      complex3.createComplex(859.2652405245, 0.0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.negate();
      complex1.hashCode();
      complex2.INF.sin();
      Complex complex3 = complex2.ONE.reciprocal();
      Complex complex4 = complex0.multiply(420.0861777);
      complex4.divide(complex1);
      complex2.ZERO.sqrt1z();
      Complex complex5 = complex1.divide(Double.POSITIVE_INFINITY);
      Complex complex6 = complex4.sqrt1z();
      Complex complex7 = Complex.ONE;
      complex6.ZERO.sinh();
      Complex complex8 = complex5.tanh();
      complex5.sqrt();
      Complex.valueOf(Double.POSITIVE_INFINITY, (-3253.235));
      Complex complex9 = Complex.ONE;
      complex4.equals(complex3);
      complex1.divide((-3253.235));
      complex8.tan();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Complex complex0 = new Complex(0.0, 0.0);
      Complex complex1 = complex0.negate();
      complex0.hashCode();
      Complex complex2 = complex1.sin();
      Complex complex3 = complex2.reciprocal();
      Complex complex4 = complex3.multiply(0.0);
      Complex complex5 = Complex.INF;
      Complex complex6 = complex5.divide(complex0);
      Complex complex7 = Complex.ONE;
      Complex complex8 = complex7.sqrt1z();
      Complex complex9 = complex2.divide(20.0);
      complex8.getImaginary();
      complex4.sqrt1z();
      Complex complex10 = complex2.pow(complex9);
      complex5.sinh();
      complex6.tanh();
      complex9.hashCode();
      complex10.log();
      complex3.readResolve();
      complex4.asin();
      Complex complex11 = Complex.INF;
      complex11.reciprocal();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.createComplex(0.5403023058681398, 2982.7215767);
      Complex complex2 = new Complex(2982.7215767, 1712.68003);
      Complex complex3 = complex2.pow(complex1);
      Complex complex4 = complex0.exp();
      complex2.cos();
      complex4.acos();
      Complex complex5 = new Complex((-850.226608354264), 0.5403023058681398);
      complex2.subtract(complex1);
      Complex complex6 = complex1.exp();
      complex5.multiply(1278);
      complex6.abs();
      Complex complex7 = complex4.negate();
      Complex complex8 = complex4.pow(Double.NaN);
      complex3.divide(complex7);
      complex8.sinh();
      complex0.tanh();
      complex0.multiply((-1518500250));
      complex2.abs();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = complex0.sqrt();
      Complex complex2 = new Complex((-59.93), 412.6579250638069);
      complex2.createComplex(0.0, Double.POSITIVE_INFINITY);
      complex1.hashCode();
      Complex complex3 = Complex.INF;
      Complex complex4 = complex3.log();
      complex4.readResolve();
      complex3.asin();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.ONE.sqrt();
      Complex complex2 = complex0.NaN.acos();
      complex1.multiply(1643.264772777);
      Complex complex3 = Complex.I;
      Complex complex4 = complex1.divide(complex3);
      Complex complex5 = complex1.divide(Double.POSITIVE_INFINITY);
      complex5.getImaginary();
      complex4.sqrt1z();
      Complex complex6 = complex5.pow(complex4);
      complex0.sinh();
      complex2.tanh();
      Complex complex7 = complex6.add(1643.264772777);
      Complex complex8 = complex0.multiply(0.0);
      complex6.getArgument();
      Complex complex9 = complex4.sqrt1z();
      complex7.getReal();
      complex6.createComplex(0.0, 1643.264772777);
      complex9.asin();
      complex4.sin();
      complex8.subtract(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = 0.0;
      double double1 = 1.4142135623730951;
      Complex complex0 = Complex.valueOf((-20.0), 11.78386458318);
      Complex complex1 = complex0.acos();
      Complex complex2 = complex1.sqrt1z();
      complex2.multiply(11.78386458318);
      complex1.atan();
      Complex complex3 = complex0.I.add(1.4142135623730951);
      Complex complex4 = Complex.I;
      complex0.nthRoot(4149);
      double double2 = 8.37464636487337;
      Complex.valueOf(0.0);
      complex0.multiply(1.4142135623730951);
      Complex complex5 = new Complex((-141.0087583124546));
      complex5.atan();
      Complex complex6 = Complex.I;
      // Undeclared exception!
      complex3.nthRoot(4149);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.createComplex(0.5403023058681398, 2982.7215767);
      Complex complex2 = complex0.multiply(1278);
      complex0.getField();
      complex1.log();
      Complex.valueOf(2.0, 1.4142135623730951);
      complex2.nthRoot(4190);
      Complex complex3 = Complex.NaN;
      complex3.getArgument();
      Complex.valueOf(2851.45137151019);
      complex0.readResolve();
      Complex complex4 = Complex.I;
      complex0.equals(complex4);
      Complex complex5 = Complex.valueOf((-1409.2643));
      complex5.tan();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      Complex complex2 = complex1.ONE.subtract((-1.0));
      Complex complex3 = complex0.pow(complex1);
      complex3.NaN.exp();
      Complex complex4 = Complex.I;
      Complex complex5 = complex2.subtract(complex1);
      Complex complex6 = complex3.multiply((-138.76));
      Complex complex7 = complex5.reciprocal();
      complex1.add((-1.0));
      Complex complex8 = Complex.valueOf((-1.0), (-1.0));
      complex8.divide(complex7);
      complex6.atan();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Complex.valueOf(412.6579250638069, 412.6579250638069);
      Complex complex0 = Complex.valueOf(412.6579250638069, (-271.5577100154));
      complex0.sqrt();
      Complex.valueOf((-1.809622142990733E-8), 412.6579250638069);
      Complex complex1 = Complex.valueOf(172.14950400971944);
      complex1.readResolve();
      Complex complex2 = new Complex(682.40974172, 412.6579250638069);
      complex2.I.negate();
      Complex complex3 = Complex.ZERO;
      complex3.equals(complex0);
      complex0.divide(1307.577416472);
      Complex complex4 = new Complex(Double.NaN);
      Complex complex5 = Complex.I;
      complex5.divide((-39.98144255880216));
      complex0.tan();
      complex5.tan();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.tanh();
      Complex complex2 = complex1.negate();
      complex2.hashCode();
      Complex complex3 = Complex.NaN;
      Complex complex4 = complex3.sin();
      Complex complex5 = complex3.reciprocal();
      Complex complex6 = Complex.I;
      complex0.divide(complex2);
      Complex complex7 = complex1.sqrt1z();
      Complex complex8 = complex0.divide(Double.POSITIVE_INFINITY);
      Complex complex9 = Complex.valueOf(420.0861777, Double.POSITIVE_INFINITY);
      complex9.getImaginary();
      complex0.sqrt1z();
      Complex complex10 = complex6.pow(complex5);
      Complex complex11 = complex8.sinh();
      complex10.tanh();
      complex7.add(14.0);
      complex9.multiply(Double.POSITIVE_INFINITY);
      complex11.getArgument();
      Complex complex12 = complex6.sqrt1z();
      complex4.getReal();
      complex6.createComplex(2.608751108250113, (-3264.1841));
      complex12.asin();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Complex complex0 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      Complex complex1 = complex0.exp();
      Complex complex2 = complex1.multiply(231);
      complex1.abs();
      Complex complex3 = complex1.negate();
      Complex complex4 = complex2.pow(412.6579250638069);
      complex4.divide(complex1);
      Complex complex5 = complex3.sinh();
      complex4.multiply(1232);
      complex5.abs();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = complex0.ZERO.subtract(0.2679491924311228);
      Complex complex2 = complex1.I.subtract(0.2679491924311228);
      complex2.ONE.createComplex(0.2679491924311228, (-20.0));
      Complex complex3 = complex0.INF.log();
      Complex complex4 = complex3.I.add(0.2679491924311228);
      Complex complex5 = complex0.divide(0.2679491924311228);
      Complex complex6 = complex0.INF.subtract(0.2679491924311228);
      Complex complex7 = complex5.atan();
      Complex complex8 = complex7.conjugate();
      complex4.ONE.sin();
      complex5.getField();
      int int0 = (-2565);
      complex6.INF.getField();
      Complex.valueOf((-4.699152670372743E-8), (-4.699152670372743E-8));
      complex6.I.conjugate();
      complex6.ZERO.add(complex2);
      complex8.ONE.add(complex4);
      complex7.NaN.sinh();
      try { 
        complex6.nthRoot((-2565));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -2,565
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.NaN.pow(complex1);
      Complex complex3 = complex0.tanh();
      Complex complex4 = complex3.ONE.negate();
      Complex complex5 = complex1.NaN.conjugate();
      complex4.ONE.divide(Double.POSITIVE_INFINITY);
      Complex complex6 = complex2.pow(complex0);
      complex6.INF.sqrt1z();
      Complex complex7 = complex2.tan();
      complex7.toString();
      complex1.INF.sqrt1z();
      complex7.log();
      complex0.ZERO.sqrt();
      Complex complex8 = complex1.INF.add(1.1409211158752441);
      complex1.abs();
      complex7.sqrt();
      Complex complex9 = complex8.add((-245.5608408));
      complex9.INF.divide((-245.5608408));
      complex3.abs();
      complex2.acos();
      complex7.tan();
      complex7.getField();
      Complex complex10 = complex2.pow((-245.5608408));
      complex10.readResolve();
      Complex.valueOf(1.1409211158752441, Double.POSITIVE_INFINITY);
      complex7.acos();
      complex5.tanh();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Complex complex0 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.divide(complex1);
      complex1.sqrt1z();
      Complex complex3 = complex1.divide(1.557407724654902);
      complex1.getImaginary();
      Complex complex4 = complex3.sqrt1z();
      Complex complex5 = complex0.pow(complex4);
      Complex complex6 = complex0.sinh();
      complex2.tanh();
      Complex complex7 = complex2.add(1.557407724654902);
      complex6.multiply(8.431058126874373);
      Complex complex8 = Complex.ZERO;
      complex8.getArgument();
      complex7.sqrt1z();
      complex4.getReal();
      complex5.createComplex(Double.NaN, (-2250.4));
      complex0.asin();
      complex3.isInfinite();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.tanh();
      Complex complex2 = complex0.negate();
      complex1.hashCode();
      Complex complex3 = complex2.INF.sin();
      complex2.ONE.reciprocal();
      Complex complex4 = complex0.multiply(420.0861777);
      Complex complex5 = complex4.divide(complex1);
      Complex complex6 = complex2.ZERO.sqrt1z();
      complex5.abs();
      Complex complex7 = complex0.negate();
      Complex complex8 = complex0.pow(0.0);
      Complex complex9 = complex7.divide(complex0);
      Complex complex10 = complex2.sinh();
      complex6.pow(complex7);
      Complex complex11 = complex9.exp();
      complex10.sqrt();
      Complex complex12 = complex3.cos();
      complex0.exp();
      complex12.readResolve();
      complex8.conjugate();
      Complex complex13 = complex7.add(Double.POSITIVE_INFINITY);
      Complex complex14 = complex10.tanh();
      complex4.log();
      complex13.getImaginary();
      complex11.multiply(Double.POSITIVE_INFINITY);
      complex14.add(3253879.0169782396);
      try { 
        complex6.pow((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      Complex complex2 = complex1.ONE.subtract((-1.0));
      Complex complex3 = complex0.pow(complex1);
      complex3.NaN.exp();
      Complex complex4 = complex3.I.cos();
      Complex complex5 = complex2.ZERO.acos();
      Complex complex6 = new Complex(4215.2032554, 412.6579250638069);
      complex5.NaN.subtract(complex6);
      Complex complex7 = complex2.exp();
      complex7.NaN.multiply(1);
      complex6.INF.abs();
      Complex complex8 = complex3.NaN.negate();
      complex4.pow(Double.POSITIVE_INFINITY);
      complex4.divide(complex0);
      Complex complex9 = Complex.valueOf(20.0);
      complex3.sinh();
      complex9.tanh();
      complex8.add((-2274.0013090239995));
      Complex complex10 = Complex.ZERO;
      complex10.multiply(0.35745590925216675);
      complex2.getArgument();
      Complex complex11 = Complex.NaN;
      complex4.sqrt1z();
      complex0.getReal();
      complex11.createComplex(0.35745590925216675, 3.410377378271407E-179);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-850.226608354264));
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.divide(complex1);
      Complex complex3 = complex0.sqrt1z();
      Complex complex4 = complex3.divide(4344324.36);
      complex1.getImaginary();
      Complex complex5 = new Complex(1697.04704641101);
      Complex complex6 = complex5.sqrt1z();
      Complex complex7 = complex5.pow(complex0);
      Complex complex8 = complex1.sinh();
      Complex complex9 = Complex.I;
      complex2.pow(complex9);
      Complex complex10 = complex5.exp();
      Complex complex11 = complex2.sqrt();
      Complex complex12 = complex10.cos();
      Complex complex13 = Complex.ONE;
      Complex complex14 = complex13.exp();
      complex13.readResolve();
      complex12.conjugate();
      Complex complex15 = complex4.add((-850.226608354264));
      Complex complex16 = complex15.tanh();
      complex6.log();
      complex8.getImaginary();
      complex10.multiply(Double.NaN);
      complex14.add(Double.NaN);
      complex15.pow(complex16);
      complex7.tanh();
      complex13.getReal();
      Complex complex17 = new Complex((-1140.751));
      complex11.sin();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-850.226608354264), (-1994.182364412));
      Complex complex1 = complex0.acos();
      Complex complex2 = complex1.multiply(1099);
      complex2.getField();
      Complex complex3 = complex1.log();
      Complex complex4 = Complex.valueOf(1.4142135623730951, (-20.0));
      Complex complex5 = complex2.sqrt1z();
      complex3.multiply((-850.226608354264));
      Complex complex6 = complex5.atan();
      complex2.getImaginary();
      Complex complex7 = complex3.sqrt1z();
      complex2.pow(complex2);
      complex4.sinh();
      Complex complex8 = new Complex(1.4142135623730951);
      Complex complex9 = complex5.add((-850.226608354264));
      complex7.multiply(6.283185307179586);
      complex6.getArgument();
      Complex complex10 = complex3.sqrt1z();
      complex9.getReal();
      complex10.createComplex(23.57867323976422, 2.8323395451363237E-248);
      complex0.asin();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-850.226608354264), (-1994.182364412));
      Complex complex1 = complex0.acos();
      Complex complex2 = complex1.multiply(1099);
      complex2.getField();
      Complex complex3 = complex1.log();
      Complex.valueOf(1.4142135623730951, (-20.0));
      Complex complex4 = complex0.acos();
      Complex complex5 = complex4.sqrt1z();
      complex5.I.log();
      Complex complex6 = complex3.multiply((-850.226608354264));
      complex5.atan();
      Complex complex7 = Complex.I;
      complex1.nthRoot(1099);
      complex7.getArgument();
      Complex.valueOf(8.37464636487337);
      Complex complex8 = Complex.valueOf((-850.226608354264), 1029.023120451);
      Complex complex9 = complex8.sqrt();
      Complex.valueOf(1.943514969662872E-141, (-829.2865463371105));
      Object object0 = complex7.readResolve();
      Complex complex10 = new Complex(0.4849066734313965, (-850.226608354264));
      complex10.equals(object0);
      complex2.divide(159.9891582);
      complex6.multiply(complex9);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.createComplex(0.5403023058681398, 2982.7215767);
      Complex complex2 = Complex.ONE;
      complex2.multiply((-20.0));
      Complex complex3 = new Complex(20.0, (-20.0));
      Complex complex4 = complex2.atan();
      complex3.nthRoot(4190);
      complex2.getArgument();
      Complex.valueOf(20.0);
      complex3.sqrt();
      complex1.readResolve();
      complex1.equals(complex0);
      complex3.divide(2982.7215767);
      Complex complex5 = complex4.divide(20.0);
      complex5.pow(complex0);
      complex5.tan();
      complex3.sin();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      complex0.abs();
      Complex complex1 = complex0.exp();
      Complex complex2 = new Complex(1346.7962);
      Complex complex3 = Complex.valueOf(Double.NaN, 1346.7962);
      Complex complex4 = complex3.INF.multiply(1346.7962);
      Complex.valueOf(285.34658);
      complex1.pow(complex2);
      complex1.toString();
      complex0.multiply(complex1);
      Complex complex5 = complex1.acos();
      complex2.NaN.acos();
      complex5.NaN.reciprocal();
      Complex.valueOf(0.42161011695861816);
      Complex complex6 = complex0.reciprocal();
      complex6.ONE.toString();
      complex6.multiply(Double.NaN);
      Complex complex7 = complex2.cos();
      complex7.ONE.sin();
      complex2.getField();
      complex4.createComplex(2.2326303196791324, 285.34658);
      complex6.pow(2.2326303196791324);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Complex complex0 = new Complex(1.1158160971176672E-222, 1.1158160971176672E-222);
      Complex complex1 = complex0.INF.tan();
      Complex complex2 = complex1.ONE.multiply(complex0);
      Complex.valueOf(1.1158160971176672E-222);
      Complex complex3 = complex1.NaN.pow(1.1158160971176672E-222);
      Complex complex4 = complex1.INF.divide(complex3);
      Complex complex5 = complex1.INF.tan();
      complex5.ZERO.hashCode();
      complex0.getField();
      Complex complex6 = complex0.conjugate();
      complex6.I.getField();
      Complex complex7 = complex6.ONE.sin();
      complex7.ONE.add(1.1158160971176672E-222);
      Complex complex8 = complex7.ONE.atan();
      complex8.ZERO.divide(1.1158160971176672E-222);
      Complex complex9 = complex8.INF.conjugate();
      complex0.toString();
      Complex complex10 = complex0.createComplex(1.1158160971176672E-222, 1.1158160971176672E-222);
      complex6.log();
      complex10.pow(1.1158160971176672E-222);
      complex4.cosh();
      complex9.multiply(complex4);
      complex3.reciprocal();
      Complex complex11 = complex5.sqrt1z();
      complex11.divide(complex2);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.tanh();
      Complex complex2 = complex0.negate();
      complex1.hashCode();
      Complex complex3 = complex2.ONE.reciprocal();
      Complex complex4 = Complex.INF;
      Complex complex5 = complex4.divide(complex1);
      complex2.ZERO.sqrt1z();
      Complex complex6 = complex1.divide(Double.POSITIVE_INFINITY);
      complex5.getImaginary();
      Complex complex7 = complex4.sqrt1z();
      complex0.ONE.pow(complex4);
      Complex complex8 = complex7.ZERO.sinh();
      complex6.tanh();
      Complex complex9 = complex2.cos();
      complex9.exp();
      complex8.readResolve();
      Complex complex10 = complex3.conjugate();
      complex5.add(Double.POSITIVE_INFINITY);
      complex1.tanh();
      Complex complex11 = complex4.log();
      complex11.getImaginary();
      complex2.multiply(Double.NaN);
      complex2.add(8.431058126874373);
      complex11.pow(complex3);
      Complex complex12 = complex7.tanh();
      complex12.getReal();
      Complex complex13 = new Complex((-1653.1774755976367));
      complex10.sin();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      Complex complex1 = complex0.cosh();
      Complex complex2 = complex1.NaN.reciprocal();
      complex1.ONE.nthRoot(1676);
      Complex complex3 = complex1.sin();
      Complex complex4 = Complex.ONE;
      Complex complex5 = complex3.reciprocal();
      complex2.multiply(0.0);
      Complex complex6 = complex1.divide(complex5);
      Complex complex7 = complex2.atan();
      Complex complex8 = complex6.sqrt1z();
      complex0.divide(1331808.0340642673);
      complex7.getImaginary();
      Complex complex9 = complex8.sqrt1z();
      Complex complex10 = Complex.valueOf(420.0861777, (double) 1676);
      complex9.pow(complex10);
      complex6.sinh();
      Complex complex11 = complex8.tanh();
      Complex complex12 = complex5.add(420.0861777);
      complex11.multiply(0.0);
      Complex complex13 = new Complex(1676, (-20.0));
      complex10.getArgument();
      complex9.sqrt1z();
      complex11.getReal();
      complex12.createComplex(1.3252078015533721, 0.0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.tanh();
      Complex complex2 = complex0.negate();
      complex1.hashCode();
      complex2.INF.sin();
      double double0 = 420.0861777;
      complex2.ONE.reciprocal();
      Complex complex3 = complex0.multiply(420.0861777);
      Complex complex4 = complex3.divide(complex1);
      complex2.ZERO.sqrt1z();
      Complex complex5 = Complex.I;
      try { 
        complex4.subtract((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      complex0.sqrt();
      Complex complex2 = complex0.acos();
      Complex complex3 = complex1.log();
      Complex complex4 = Complex.I;
      Complex complex5 = complex4.subtract(complex2);
      complex5.multiply(412.6579250638069);
      complex1.reciprocal();
      complex3.add((-56.9716905));
      Complex.valueOf(6589.66484455022, 6589.66484455022);
      try { 
        complex2.divide((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-850.226608354264), (-1994.182364412));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.acos();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.sqrt1z();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(8.431058126874373, complex2.getReal(), 0.01);
      assertEquals((-1.9606061177759773), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.multiply(0.001597914849379638);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(0.013381971784734365, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0031539847739360544, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = new Complex((-1994.182364412), (-2593.512282));
      assertEquals((-2593.512282), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-1994.182364412), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      
      Complex complex5 = complex4.atan();
      assertEquals((-2593.512282), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-1994.182364412), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-2.4231481455148324E-4), complex5.getImaginary(), 0.01);
      assertEquals((-1.5706100080474332), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertNotNull(complex5);
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      
      List<Complex> list0 = complex3.nthRoot(4190);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(0.013381971784734365, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0031539847739360544, complex3.getReal(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(4190, list0.size());
      assertNotNull(list0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertFalse(list0.contains(complex2));
      
      double double0 = complex1.getArgument();
      assertEquals(1.3393314385500164, double0, 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      
      Complex complex6 = complex0.pow((-3391013.8162678033));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex2.divide(complex6);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(8.431058126874373, complex2.getReal(), 0.01);
      assertEquals((-1.9606061177759773), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex2.sinh();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(8.431058126874373, complex2.getReal(), 0.01);
      assertEquals((-1.9606061177759773), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2121.607423659399), complex8.getImaginary(), 0.01);
      assertEquals((-871.6253785919007), complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      
      Complex complex9 = complex1.pow(complex6);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      
      Complex complex10 = complex1.exp();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals((-3.5807290447005156), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(6.244243485292216, complex10.getImaginary(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      
      Complex complex11 = new Complex((-2593.512282));
      assertFalse(complex11.isInfinite());
      assertEquals((-2593.512282), complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      
      Complex complex12 = complex11.sqrt();
      assertFalse(complex11.isInfinite());
      assertEquals((-2593.512282), complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(50.92653809164727, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      
      Complex complex13 = complex5.cos();
      assertEquals((-2593.512282), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-1994.182364412), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-2.4231481455148324E-4), complex5.getImaginary(), 0.01);
      assertEquals((-1.5706100080474332), complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-2.4231481271685484E-4), complex13.getImaginary(), 0.01);
      assertEquals(1.8631875185538366E-4, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertNotNull(complex13);
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex12));
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      
      Complex complex14 = complex11.exp();
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals((-2593.512282), complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      
      Complex complex15 = (Complex)complex8.readResolve();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals((-2121.607423659399), complex15.getImaginary(), 0.01);
      assertEquals((-871.6253785919007), complex15.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(8.431058126874373, complex2.getReal(), 0.01);
      assertEquals((-1.9606061177759773), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2121.607423659399), complex8.getImaginary(), 0.01);
      assertEquals((-871.6253785919007), complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      
      Complex complex16 = complex1.conjugate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals((-8.37464636487337), complex16.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex16);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      
      Complex complex17 = complex14.cosh();
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(1.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals((-2593.512282), complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex17);
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex6);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex15);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.I.tanh();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.negate();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      complex1.hashCode();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      
      Complex complex3 = complex2.sinh();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.INF.sin();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex2.ONE.reciprocal();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex0.multiply(420.0861777);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex6.divide(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      
      Complex complex8 = complex3.atan();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex0));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = complex8.ZERO.sqrt1z();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      
      Complex complex10 = complex3.divide(Double.POSITIVE_INFINITY);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertNotNull(complex10);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex3));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      
      double double0 = complex8.getImaginary();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex0));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      
      Complex complex11 = Complex.NaN;
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      
      List<Complex> list0 = complex11.nthRoot(496);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotNull(list0);
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertFalse(list0.contains(complex2));
      assertTrue(list0.contains(complex4));
      
      Complex complex12 = complex1.divide(2.8401159516008676E283);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(5.483606131563218E-284, complex12.getImaginary(), 0.01);
      assertNotNull(complex12);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      
      Complex complex13 = complex9.pow(420.0861777);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(1.0, complex13.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex3);
      
      Complex complex14 = Complex.valueOf(Double.POSITIVE_INFINITY, 1952.4);
      assertEquals(1952.4, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex14.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      
      Complex complex15 = Complex.INF;
      assertEquals(Double.POSITIVE_INFINITY, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertTrue(complex15.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex15.getImaginary(), 0.01);
      assertNotNull(complex15);
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      
      Complex complex16 = complex15.conjugate();
      assertEquals(Double.POSITIVE_INFINITY, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertTrue(complex15.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex15.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex16.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex16.getImaginary(), 0.01);
      assertTrue(complex16.isInfinite());
      assertNotNull(complex16);
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex10);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex4);
      
      Complex complex17 = complex10.subtract((-9.879317845E-315));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertEquals(9.879317845E-315, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex14));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex0);
      
      Complex complex18 = complex12.multiply(496);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertEquals(2.7198686412553558E-281, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(0.0, complex18.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(5.483606131563218E-284, complex12.getImaginary(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex4);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      
      Complex complex19 = complex7.cos();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex19.isNaN());
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex14));
      assertTrue(complex19.equals((Object)complex9));
      assertTrue(complex19.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex12));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex18));
      assertTrue(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex14));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex13));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex16));
      assertTrue(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex19);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex8);
      
      Complex complex20 = complex0.add(complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertEquals(1.0, complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertNotNull(complex20);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex19));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex6));
      assertTrue(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex2));
      assertTrue(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex15));
      assertTrue(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex14));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex20);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex1);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex14);
      
      Complex complex21 = complex11.divide(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertNotNull(complex21);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex14));
      assertTrue(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex20);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex10);
      assertSame(complex21, complex11);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex15);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex17);
      assertSame(complex11, complex21);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex3);
      
      Complex complex22 = Complex.valueOf(1952.4, (-9.879317845E-315));
      assertEquals((-9.879317845E-315), complex22.getImaginary(), 0.01);
      assertEquals(1952.4, complex22.getReal(), 0.01);
      assertFalse(complex22.isNaN());
      assertFalse(complex22.isInfinite());
      assertNotNull(complex22);
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex6));
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex0);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, complex19);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex12);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex6);
      
      Complex complex23 = complex22.asin();
      assertEquals((-9.879317845E-315), complex22.getImaginary(), 0.01);
      assertEquals(1952.4, complex22.getReal(), 0.01);
      assertFalse(complex22.isNaN());
      assertFalse(complex22.isInfinite());
      assertFalse(complex23.isInfinite());
      assertEquals(1.5707963267948966, complex23.getReal(), 0.01);
      assertEquals((-8.26996177898825), complex23.getImaginary(), 0.01);
      assertFalse(complex23.isNaN());
      assertNotNull(complex23);
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex22));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex15));
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex0);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, complex19);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex12);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex23);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex6);
      assertNotSame(complex23, complex8);
      assertNotSame(complex23, complex11);
      assertNotSame(complex23, complex0);
      assertNotSame(complex23, complex21);
      assertNotSame(complex23, complex9);
      assertNotSame(complex23, complex16);
      assertNotSame(complex23, complex14);
      assertNotSame(complex23, complex10);
      assertNotSame(complex23, complex12);
      assertNotSame(complex23, complex18);
      assertNotSame(complex23, complex5);
      assertNotSame(complex23, complex22);
      assertNotSame(complex23, complex17);
      assertNotSame(complex23, complex3);
      assertNotSame(complex23, complex4);
      assertNotSame(complex23, complex20);
      assertNotSame(complex23, complex7);
      assertNotSame(complex23, complex13);
      assertNotSame(complex23, complex19);
      assertNotSame(complex23, complex2);
      assertNotSame(complex23, complex6);
      assertNotSame(complex23, complex1);
      assertNotSame(complex23, complex15);
      
      Complex complex24 = complex1.cos();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertEquals(2.4785912770698397, complex24.getReal(), 0.01);
      assertEquals(-0.0, complex24.getImaginary(), 0.01);
      assertFalse(complex24.isNaN());
      assertFalse(complex24.isInfinite());
      assertNotNull(complex24);
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex22));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex1));
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex24);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex20);
      assertNotSame(complex1, complex23);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex24);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex19);
      assertNotSame(complex24, complex11);
      assertNotSame(complex24, complex0);
      assertNotSame(complex24, complex9);
      assertNotSame(complex24, complex4);
      assertNotSame(complex24, complex19);
      assertNotSame(complex24, complex14);
      assertNotSame(complex24, complex16);
      assertNotSame(complex24, complex10);
      assertNotSame(complex24, complex18);
      assertNotSame(complex24, complex8);
      assertNotSame(complex24, complex17);
      assertNotSame(complex24, complex12);
      assertNotSame(complex24, complex5);
      assertNotSame(complex24, complex23);
      assertNotSame(complex24, complex13);
      assertNotSame(complex24, complex7);
      assertNotSame(complex24, complex3);
      assertNotSame(complex24, complex21);
      assertNotSame(complex24, complex20);
      assertNotSame(complex24, complex15);
      assertNotSame(complex24, complex2);
      assertNotSame(complex24, complex6);
      assertNotSame(complex24, complex22);
      assertNotSame(complex24, complex1);
      
      Complex complex25 = Complex.valueOf(822.0649703152451);
      assertFalse(complex25.isInfinite());
      assertEquals(0.0, complex25.getImaginary(), 0.01);
      assertEquals(822.0649703152451, complex25.getReal(), 0.01);
      assertFalse(complex25.isNaN());
      assertNotNull(complex25);
      assertFalse(complex25.equals((Object)complex18));
      assertFalse(complex25.equals((Object)complex10));
      assertFalse(complex25.equals((Object)complex16));
      assertFalse(complex25.equals((Object)complex21));
      assertFalse(complex25.equals((Object)complex13));
      assertFalse(complex25.equals((Object)complex9));
      assertFalse(complex25.equals((Object)complex17));
      assertFalse(complex25.equals((Object)complex8));
      assertFalse(complex25.equals((Object)complex1));
      assertFalse(complex25.equals((Object)complex19));
      assertFalse(complex25.equals((Object)complex20));
      assertFalse(complex25.equals((Object)complex4));
      assertFalse(complex25.equals((Object)complex14));
      assertFalse(complex25.equals((Object)complex5));
      assertFalse(complex25.equals((Object)complex2));
      assertFalse(complex25.equals((Object)complex15));
      assertFalse(complex25.equals((Object)complex7));
      assertFalse(complex25.equals((Object)complex11));
      assertFalse(complex25.equals((Object)complex3));
      assertFalse(complex25.equals((Object)complex0));
      assertFalse(complex25.equals((Object)complex12));
      assertFalse(complex25.equals((Object)complex24));
      assertFalse(complex25.equals((Object)complex23));
      assertFalse(complex25.equals((Object)complex22));
      assertFalse(complex25.equals((Object)complex6));
      assertNotSame(complex25, complex18);
      assertNotSame(complex25, complex10);
      assertNotSame(complex25, complex16);
      assertNotSame(complex25, complex21);
      assertNotSame(complex25, complex13);
      assertNotSame(complex25, complex9);
      assertNotSame(complex25, complex17);
      assertNotSame(complex25, complex8);
      assertNotSame(complex25, complex1);
      assertNotSame(complex25, complex19);
      assertNotSame(complex25, complex20);
      assertNotSame(complex25, complex4);
      assertNotSame(complex25, complex14);
      assertNotSame(complex25, complex5);
      assertNotSame(complex25, complex2);
      assertNotSame(complex25, complex15);
      assertNotSame(complex25, complex7);
      assertNotSame(complex25, complex11);
      assertNotSame(complex25, complex3);
      assertNotSame(complex25, complex0);
      assertNotSame(complex25, complex12);
      assertNotSame(complex25, complex24);
      assertNotSame(complex25, complex23);
      assertNotSame(complex25, complex22);
      assertNotSame(complex25, complex6);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Complex complex0 = new Complex(3861.7, (-1.0));
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertNotNull(complex0);
      
      double double0 = complex0.ZERO.abs();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.ZERO.sqrt1z();
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.ZERO.pow(complex0);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.ZERO.pow((-479.941510521));
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      complex0.hashCode();
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      
      double double1 = complex0.abs();
      assertEquals(3861.7001294766533, double1, 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      
      Complex complex4 = complex0.tan();
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9144212985467732), complex4.getImaginary(), 0.01);
      assertEquals(0.246817820715541, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex4.INF.add(complex2);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9144212985467732), complex4.getImaginary(), 0.01);
      assertEquals(0.246817820715541, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex0.sqrt1z();
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(3861.699870523351, complex6.getImaginary(), 0.01);
      assertEquals(1.000000033528408, complex6.getReal(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      
      double double2 = complex6.NaN.abs();
      assertEquals(Double.NaN, double2, 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(3861.699870523351, complex6.getImaginary(), 0.01);
      assertEquals(1.000000033528408, complex6.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex4.tanh();
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9144212985467732), complex4.getImaginary(), 0.01);
      assertEquals(0.246817820715541, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.5913074884501718, complex7.getReal(), 0.01);
      assertEquals((-1.1124675142853495), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex7.I.add(0.0);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9144212985467732), complex4.getImaginary(), 0.01);
      assertEquals(0.246817820715541, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.5913074884501718, complex7.getReal(), 0.01);
      assertEquals((-1.1124675142853495), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(1.0, complex8.getImaginary(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      
      Complex complex9 = complex7.NaN.multiply(Double.NaN);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9144212985467732), complex4.getImaginary(), 0.01);
      assertEquals(0.246817820715541, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.5913074884501718, complex7.getReal(), 0.01);
      assertEquals((-1.1124675142853495), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      
      Complex complex10 = complex7.subtract(3861.7);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9144212985467732), complex4.getImaginary(), 0.01);
      assertEquals(0.246817820715541, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.5913074884501718, complex7.getReal(), 0.01);
      assertEquals((-1.1124675142853495), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals((-1.1124675142853495), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals((-3861.1086925115496), complex10.getReal(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      
      Complex complex11 = Complex.valueOf(0.9995154183891564, 3861.7001294766533);
      assertEquals(0.9995154183891564, complex11.getReal(), 0.01);
      assertEquals(3861.7001294766533, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      
      Complex complex12 = complex10.tanh();
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals((-1.0), complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(3861.7, complex0.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-0.9144212985467732), complex4.getImaginary(), 0.01);
      assertEquals(0.246817820715541, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.5913074884501718, complex7.getReal(), 0.01);
      assertEquals((-1.1124675142853495), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals((-1.1124675142853495), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals((-3861.1086925115496), complex10.getReal(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex12);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      complex1.hashCode();
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.sinh();
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals((-7.345780455722536E178), complex2.getImaginary(), 0.01);
      assertEquals((-3.653272913710853E178), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex0.sin();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.reciprocal();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex1.multiply(0.9995154183891564);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.4579586217521, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(412.4579586217521, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex1.divide(complex4);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = new Complex(5.088219872370737E183, 0.9995154183891564);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(5.088219872370737E183, complex7.getReal(), 0.01);
      assertEquals(0.9995154183891564, complex7.getImaginary(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      
      Complex complex8 = complex7.atan();
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(5.088219872370737E183, complex7.getReal(), 0.01);
      assertEquals(0.9995154183891564, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex4.sqrt1z();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex9);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      
      Complex complex10 = complex8.divide(2.1991829872131348);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(5.088219872370737E183, complex7.getReal(), 0.01);
      assertEquals(0.9995154183891564, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.7142635860353999, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      
      double double0 = complex2.getImaginary();
      assertEquals((-7.345780455722536E178), double0, 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals((-7.345780455722536E178), complex2.getImaginary(), 0.01);
      assertEquals((-3.653272913710853E178), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      
      Complex complex11 = complex10.sqrt1z();
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(5.088219872370737E183, complex7.getReal(), 0.01);
      assertEquals(0.9995154183891564, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.7142635860353999, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.6998767960604573, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      
      Complex complex12 = Complex.ONE;
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertNotNull(complex12);
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      
      Complex complex13 = complex0.pow(complex12);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertTrue(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex1);
      
      Complex complex14 = complex10.sinh();
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.7765646882065668, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(5.088219872370737E183, complex7.getReal(), 0.01);
      assertEquals(0.9995154183891564, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.7142635860353999, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      
      Complex complex15 = complex4.tanh();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertTrue(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertTrue(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex9);
      assertSame(complex4, complex15);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      
      Complex complex16 = complex11.add((-356.0576461085283));
      assertFalse(complex16.isNaN());
      assertEquals((-355.35776931246784), complex16.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(5.088219872370737E183, complex7.getReal(), 0.01);
      assertEquals(0.9995154183891564, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.7142635860353999, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.6998767960604573, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex15));
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex7);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex15);
      
      Complex complex17 = complex12.multiply(Double.POSITIVE_INFINITY);
      assertEquals(Double.POSITIVE_INFINITY, complex17.getImaginary(), 0.01);
      assertTrue(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex17.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertNotNull(complex17);
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex9));
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex9);
      
      double double1 = complex4.getArgument();
      assertEquals(Double.NaN, double1, 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex15));
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex14));
      assertTrue(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex16));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex9);
      assertSame(complex4, complex15);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex16);
      
      Complex complex18 = complex0.sqrt1z();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex18.getImaginary(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex11));
      assertTrue(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex5));
      assertTrue(complex18.equals((Object)complex4));
      assertTrue(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex2));
      assertTrue(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex16));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex16);
      
      double double2 = complex18.getReal();
      assertEquals(Double.NaN, double2, 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex18.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex11));
      assertTrue(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex5));
      assertTrue(complex18.equals((Object)complex4));
      assertTrue(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex2));
      assertTrue(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex16));
      assertEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex16);
      
      Complex complex19 = complex14.createComplex(966.220986522539, Double.NaN);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.7765646882065668, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(966.220986522539, complex19.getReal(), 0.01);
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(5.088219872370737E183, complex7.getReal(), 0.01);
      assertEquals(0.9995154183891564, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.7142635860353999, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex19);
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex16));
      assertTrue(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex14));
      assertTrue(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex17));
      assertTrue(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertTrue(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex16);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex9);
      
      Complex complex20 = complex2.tan();
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals((-7.345780455722536E178), complex2.getImaginary(), 0.01);
      assertEquals((-3.653272913710853E178), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.0), complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getReal(), 0.01);
      assertNotNull(complex20);
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex11));
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex11);
      
      double double3 = complex0.abs();
      assertEquals(Double.POSITIVE_INFINITY, double3, 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex15));
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = Complex.NaN;
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.createComplex(3253879.0169782396, 0.0);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.createComplex(0.0, 1.361509084701538);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.361509084701538, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex0.multiply(1393);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      ComplexField complexField0 = complex0.getField();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      
      Complex complex5 = complex3.log();
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.361509084701538, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.3085937056775671, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = Complex.valueOf((double) 132, (-3261.04748));
      assertEquals(132.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals((-3261.04748), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex4.acos();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex1.sqrt1z();
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertNotNull(complex8);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      
      Complex complex9 = complex7.multiply((double) 1393);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex8);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex1);
      
      Complex complex10 = complex2.atan();
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals((-1.1102230246251565E-16), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(1.5707960194693953, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      
      Complex complex11 = complex4.I.divide(complex10);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals((-1.1102230246251565E-16), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(1.5707960194693953, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals((-4.4995661991553856E-17), complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.63661989692194, complex11.getImaginary(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex10);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      
      List<Complex> list0 = complex1.nthRoot(454);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertNotNull(list0);
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex9);
      assertFalse(list0.contains(complex6));
      assertTrue(list0.contains(complex7));
      
      double double0 = complex5.getArgument();
      assertEquals(1.3768099471901494, double0, 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.361509084701538, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.3085937056775671, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex9);
      
      Complex complex12 = Complex.valueOf(1910.1110059725638);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(1910.1110059725638, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      
      Complex complex13 = complex3.sqrt();
      assertEquals(0.8250785067802754, complex13.getImaginary(), 0.01);
      assertEquals(0.8250785067802755, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.361509084701538, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      
      Complex complex14 = (Complex)complex13.readResolve();
      assertEquals(0.8250785067802754, complex13.getImaginary(), 0.01);
      assertEquals(0.8250785067802755, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.8250785067802755, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(0.8250785067802754, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.361509084701538, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complex14);
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      
      Complex complex15 = Complex.valueOf(0.0);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex7));
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex7);
      
      Complex complex16 = Complex.ZERO;
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertNotNull(complex16);
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex12));
      assertTrue(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex5));
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex5);
      
      boolean boolean0 = complex15.equals(complex16);
      assertTrue(boolean0);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex12));
      assertTrue(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex5));
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex7);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex5);
      
      Complex complex17 = complex4.divide(1.3768099471901494);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex17.getImaginary(), 0.01);
      assertTrue(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex17.getReal(), 0.01);
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertTrue(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex11));
      assertTrue(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      
      Complex complex18 = complex15.divide(0.0);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertNotNull(complex18);
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex7);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex7);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex17);
      assertSame(complex18, complex9);
      
      Complex complex19 = complex18.tan();
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertNotNull(complex19);
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex18));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex16));
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex19);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex7);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex19);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex7);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex17);
      assertSame(complex18, complex9);
      assertNotSame(complex19, complex10);
      assertSame(complex19, complex18);
      assertSame(complex19, complex8);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex12);
      assertSame(complex19, complex9);
      assertSame(complex19, complex1);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex16);
      assertSame(complex19, complex7);
      
      Complex complex20 = complex13.tan();
      assertEquals(0.8250785067802754, complex13.getImaginary(), 0.01);
      assertEquals(0.8250785067802755, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(3253879.0169782396, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.361509084701538, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.3803864480688469, complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(0.956978934130507, complex20.getImaginary(), 0.01);
      assertNotNull(complex20);
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex19));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex5));
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex20);
      assertNotSame(complex13, complex19);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex19);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex18);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex18);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex5);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.ZERO.createComplex(626.81477715, 626.81477715);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.createComplex(1941.037360677694, 0.0);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(1941.037360677694, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.INF.multiply(132);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(1941.037360677694, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      ComplexField complexField0 = complex1.INF.getField();
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      
      Complex complex4 = complex0.log();
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = Complex.valueOf(626.81477715, 626.81477715);
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex5.NaN.acos();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex6.I.sqrt1z();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex5.multiply(626.81477715);
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(392896.76485360425, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(392896.76485360425, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      
      Complex complex9 = complex5.atan();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(7.976834722587131E-4, complex9.getImaginary(), 0.01);
      assertEquals(1.5699986426458836, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      
      List<Complex> list0 = complex4.nthRoot(3632);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotNull(list0);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex6);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertFalse(list0.contains(complex5));
      assertTrue(list0.contains(complex6));
      
      double double0 = complex0.getArgument();
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      
      Complex complex10 = Complex.valueOf(626.81477715);
      assertEquals(626.81477715, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      
      Complex complex11 = complex8.sqrt();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(392896.76485360425, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(392896.76485360425, complex8.getReal(), 0.01);
      assertEquals(285.2570495315371, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(688.6714377415707, complex11.getReal(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex8));
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex8);
      
      Complex complex12 = (Complex)complex4.readResolve();
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex6);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      
      boolean boolean0 = complex1.equals(complex12);
      assertFalse(boolean0);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertTrue(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex6);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      
      Complex complex13 = complex9.divide(785.5902897);
      assertEquals(0.001998495479425328, complex13.getReal(), 0.01);
      assertEquals(1.0153937525925013E-6, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(7.976834722587131E-4, complex9.getImaginary(), 0.01);
      assertEquals(1.5699986426458836, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      
      Complex complex14 = complex10.divide(0.0);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(626.81477715, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex0);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertSame(complex14, complex6);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex5);
      
      Complex complex15 = complex1.tan();
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(1.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertNotNull(complex15);
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      
      Complex complex16 = complex7.exp();
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(4.1132503787829275, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex13));
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex10);
      assertSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex10);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex13);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.I.reciprocal();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.acos();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex0);
      
      Complex complex3 = complex2.I.add(complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex2);
      assertSame(complex3, complex0);
      
      Complex complex4 = complex0.ONE.cosh();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex0.ONE.sqrt1z();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex1.createComplex(0.0, 2487.848);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(2487.848, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex2.multiply((-1299));
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex7);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex0);
      assertSame(complex7, complex3);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      
      ComplexField complexField0 = complex7.getField();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex7);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex0);
      assertSame(complex7, complex3);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      
      Complex complex8 = Complex.valueOf(2487.848, (-1951.3343330398818));
      assertEquals((-1951.3343330398818), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(2487.848, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertNotNull(complex8);
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      
      Complex complex9 = complex4.acos();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      
      Complex complex10 = complex4.sqrt1z();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex10.multiply(1272.9251292240838);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1495.9431312833333, complex11.getImaginary(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      
      Complex complex12 = complex0.atan();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex0);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex7);
      assertNotSame(complex12, complex9);
      assertSame(complex12, complex2);
      
      Complex complex13 = new Complex((-1951.3343330398818), 0.2501201629638672);
      assertEquals(0.2501201629638672, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals((-1951.3343330398818), complex13.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      
      List<Complex> list0 = complex13.nthRoot(132);
      assertEquals(0.2501201629638672, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals((-1951.3343330398818), complex13.getReal(), 0.01);
      assertEquals(132, list0.size());
      assertFalse(list0.isEmpty());
      assertNotNull(list0);
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertFalse(list0.contains(complex5));
      
      double double0 = complex3.getArgument();
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertSame(complex3, complex7);
      
      Complex complex14 = Complex.valueOf(Double.NaN);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertSame(complex14, complex7);
      assertSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex11);
      assertSame(complex14, complex2);
      assertSame(complex14, complex0);
      
      Complex complex15 = complex9.sqrt();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(0.7071067811865475, complex15.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex15.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      
      boolean boolean0 = complex15.equals("NEGATIVE_NUMBER_OF_SUCCESSES");
      assertFalse(boolean0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(0.7071067811865475, complex15.getImaginary(), 0.01);
      assertEquals(0.7071067811865476, complex15.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      
      Complex complex16 = complex2.divide((-204.4395));
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex10));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex16);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex14);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertSame(complex16, complex7);
      assertSame(complex16, complex2);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex3);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex10);
      assertSame(complex16, complex12);
      
      Complex complex17 = complex16.divide((-940.63904));
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex16);
      assertSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex7);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertSame(complex2, complex17);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex16);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex14);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex16, complex6);
      assertSame(complex16, complex17);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex9);
      assertSame(complex16, complex7);
      assertSame(complex16, complex2);
      assertSame(complex16, complex0);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertSame(complex16, complex3);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex10);
      assertSame(complex16, complex12);
      assertSame(complex17, complex14);
      assertNotSame(complex17, complex4);
      assertSame(complex17, complex0);
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex15);
      assertSame(complex17, complex16);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex2);
      assertSame(complex17, complex7);
      assertNotSame(complex17, complex9);
      
      Complex complex18 = Complex.INF;
      assertFalse(complex18.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex18.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex18.getImaginary(), 0.01);
      assertTrue(complex18.isInfinite());
      assertNotNull(complex18);
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex12));
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex12);
      
      Complex complex19 = complex18.tan();
      assertFalse(complex18.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex18.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex18.getImaginary(), 0.01);
      assertTrue(complex18.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex13));
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex12);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex8);
      assertSame(complex19, complex16);
      assertSame(complex19, complex2);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex1);
      assertSame(complex19, complex17);
      assertNotSame(complex19, complex13);
      assertSame(complex19, complex3);
      assertNotSame(complex19, complex9);
      assertSame(complex19, complex7);
      assertSame(complex19, complex12);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex18);
      assertSame(complex19, complex14);
      assertSame(complex19, complex0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.ZERO.createComplex(626.81477715, 626.81477715);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.createComplex(1941.037360677694, 0.0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1941.037360677694, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.INF.multiply(132);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1941.037360677694, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      ComplexField complexField0 = complex1.INF.getField();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      
      Complex complex4 = complex0.log();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = Complex.valueOf(626.81477715, 626.81477715);
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex5.NaN.acos();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex6.INF.tan();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex7);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex0);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex6.I.sqrt1z();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex7);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      
      Complex complex9 = complex5.multiply(626.81477715);
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(392896.76485360425, complex9.getImaginary(), 0.01);
      assertEquals(392896.76485360425, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      
      Complex complex10 = complex5.atan();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(7.976834722587131E-4, complex10.getImaginary(), 0.01);
      assertEquals(1.5699986426458836, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      
      List<Complex> list0 = complex4.nthRoot(3632);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotNull(list0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex7);
      assertTrue(list0.contains(complex6));
      assertFalse(list0.contains(complex5));
      
      Complex complex11 = Complex.valueOf(626.81477715);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(626.81477715, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      
      Complex complex12 = complex9.sqrt();
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(392896.76485360425, complex9.getImaginary(), 0.01);
      assertEquals(392896.76485360425, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(285.2570495315371, complex12.getImaginary(), 0.01);
      assertEquals(688.6714377415707, complex12.getReal(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      
      Complex complex13 = (Complex)complex1.readResolve();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(626.81477715, complex13.getImaginary(), 0.01);
      assertEquals(626.81477715, complex13.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertTrue(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex5);
      
      boolean boolean0 = complex1.equals(complex13);
      assertTrue(boolean0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(626.81477715, complex13.getImaginary(), 0.01);
      assertEquals(626.81477715, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertTrue(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex5);
      
      Complex complex14 = complex10.divide(785.5902897);
      assertEquals(0.001998495479425328, complex14.getReal(), 0.01);
      assertEquals(1.0153937525925013E-6, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(7.976834722587131E-4, complex10.getImaginary(), 0.01);
      assertEquals(1.5699986426458836, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex13));
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex13);
      
      Complex complex15 = complex14.NaN.sin();
      assertEquals(0.001998495479425328, complex14.getReal(), 0.01);
      assertEquals(1.0153937525925013E-6, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(7.976834722587131E-4, complex10.getImaginary(), 0.01);
      assertEquals(1.5699986426458836, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertNotNull(complex15);
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex13));
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex4);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex1);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex8);
      assertSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex4);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex13);
      assertSame(complex15, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex13);
      
      Complex complex16 = complex11.divide(0.0);
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(626.81477715, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertNotNull(complex16);
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex5));
      assertNotSame(complex16, complex3);
      assertSame(complex16, complex6);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertSame(complex16, complex0);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex1);
      assertSame(complex16, complex7);
      assertSame(complex16, complex4);
      assertNotSame(complex16, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex16);
      
      Complex complex17 = complex1.tan();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex5));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex15);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex5);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-850.226608354264), (-1994.182364412));
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.acos();
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.sqrt1z();
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertEquals(8.431058126874373, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-1.9606061177759773), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex1.multiply(0.001597914849379638);
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertEquals(0.0031539847739360544, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.013381971784734365, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = new Complex((-1994.182364412), (-2593.512282));
      assertFalse(complex4.isInfinite());
      assertEquals((-2593.512282), complex4.getImaginary(), 0.01);
      assertEquals((-1994.182364412), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      
      Complex complex5 = complex4.atan();
      assertFalse(complex4.isInfinite());
      assertEquals((-2593.512282), complex4.getImaginary(), 0.01);
      assertEquals((-1994.182364412), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.5706100080474332), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-2.4231481455148324E-4), complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      
      List<Complex> list0 = complex3.nthRoot(4190);
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertEquals(0.0031539847739360544, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.013381971784734365, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(list0.isEmpty());
      assertEquals(4190, list0.size());
      assertNotNull(list0);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertFalse(list0.contains(complex0));
      
      double double0 = complex1.getArgument();
      assertEquals(1.3393314385500164, double0, 0.01);
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      
      Complex complex6 = Complex.valueOf(1066.056440940437);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1066.056440940437, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex5.sqrt();
      assertFalse(complex4.isInfinite());
      assertEquals((-2593.512282), complex4.getImaginary(), 0.01);
      assertEquals((-1994.182364412), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.5706100080474332), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-2.4231481455148324E-4), complex5.getImaginary(), 0.01);
      assertEquals(9.667535810968915E-5, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-1.2532398084139995), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = (Complex)complex6.readResolve();
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1066.056440940437, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(1066.056440940437, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = complex1.equals(object0);
      assertFalse(boolean0);
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      
      Complex complex9 = complex7.divide((double) 4190);
      assertFalse(complex4.isInfinite());
      assertEquals((-2593.512282), complex4.getImaginary(), 0.01);
      assertEquals((-1994.182364412), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals((-1.5706100080474332), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals((-2.4231481455148324E-4), complex5.getImaginary(), 0.01);
      assertEquals(9.667535810968915E-5, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-1.2532398084139995), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals((-2.991025795737469E-4), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(2.3072877830474738E-8, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      
      Complex complex10 = complex1.divide((double) 4190);
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertEquals(0.0019987222827860074, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(4.7107703921667735E-4, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex10.tan();
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertEquals(0.0019987222827860074, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(4.7107703921667735E-4, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0019987200647725123, complex11.getImaginary(), 0.01);
      assertEquals(4.7107519216595296E-4, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      
      Complex complex12 = complex3.sin();
      assertEquals(0.013382304627931201, complex12.getImaginary(), 0.01);
      assertEquals(0.0031542619519097726, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1994.182364412), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(8.37464636487337, complex1.getImaginary(), 0.01);
      assertEquals(1.973812794317878, complex1.getReal(), 0.01);
      assertEquals(0.0031539847739360544, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.013381971784734365, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex10);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-850.226608354264));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.divide((-850.226608354264));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.tan();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.557407724654902, complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.sin();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-0.9107104194953289), complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex0.subtract(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.557407724654902, complex2.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals((-851.784016078919), complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-850.226608354264), (-850.226608354264));
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-850.226608354264), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.add((-2149.7835));
      assertFalse(complex0.isNaN());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals((-850.226608354264), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-3000.010108354264), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals((-850.226608354264), complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.ONE.subtract((-1.0));
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertNotNull(complex2);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.pow(complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex1.acos();
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals((-7.062339751987153), complex4.getImaginary(), 0.01);
      assertEquals(0.7853988974541918, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex2.log();
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6931471805599453, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = Complex.I;
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      
      Complex complex7 = complex4.subtract(complex6);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals((-7.062339751987153), complex4.getImaginary(), 0.01);
      assertEquals(0.7853988974541918, complex4.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertEquals(0.7853988974541918, complex7.getReal(), 0.01);
      assertEquals((-8.062339751987153), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertNotNull(complex7);
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      
      Complex complex8 = complex4.multiply((-626.81477715));
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals((-7.062339751987153), complex4.getImaginary(), 0.01);
      assertEquals(0.7853988974541918, complex4.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals((-492.29963488160496), complex8.getReal(), 0.01);
      assertEquals(4426.778917799414, complex8.getImaginary(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      
      Complex complex9 = new Complex((-3518.116723699));
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals((-3518.116723699), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      
      Complex complex10 = complex9.reciprocal();
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals((-3518.116723699), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex10.isNaN());
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertEquals((-2.8424298524938797E-4), complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      
      Complex complex11 = complex5.add(0.001597914849379638);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6931471805599453, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.6947450954093249, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      
      Complex complex12 = Complex.valueOf((-3486.744657421), (-3518.116723699));
      assertFalse(complex12.isInfinite());
      assertEquals((-3486.744657421), complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-3518.116723699), complex12.getImaginary(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      
      Complex complex13 = complex12.divide(complex11);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.6931471805599453, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.6947450954093249, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals((-3486.744657421), complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals((-3518.116723699), complex12.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals((-5018.739506705988), complex13.getReal(), 0.01);
      assertEquals((-5063.895732327871), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertNotNull(complex13);
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.INF.pow((-973.2452));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      complex1.ZERO.hashCode();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.divide(0.0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.atan();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex2.NaN.multiply(1);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex3);
      assertSame(complex4, complex2);
      
      Complex complex5 = complex0.INF.divide(complex3);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex5);
      assertSame(complex3, complex4);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex5);
      assertSame(complex5, complex2);
      assertSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex0.ONE.divide(0.0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex2);
      assertSame(complex6, complex4);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex5);
      
      Complex complex7 = complex0.ONE.divide((-973.2452));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals((-0.0010274902974091217), complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      
      complex2.hashCode();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex5);
      
      Complex complex8 = complex0.tanh();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex8.tanh();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      
      Complex complex10 = complex9.ONE.multiply((-1936));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertEquals((-1936.0), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      
      Complex complex11 = complex2.NaN.sin();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex5);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex4);
      assertSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex6);
      
      Complex complex12 = Complex.valueOf(696.5, 0.0);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(696.5, complex12.getReal(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      
      ComplexField complexField0 = complex12.ONE.getField();
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(696.5, complex12.getReal(), 0.01);
      assertNotNull(complexField0);
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      
      Complex complex13 = Complex.ZERO;
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      
      Complex complex14 = complex12.INF.subtract(complex13);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertTrue(complex14.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex14.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(696.5, complex12.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex6);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      
      Complex complex15 = complex3.pow((-1751.95273938));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex12));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertSame(complex15, complex4);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex12);
      assertSame(complex15, complex5);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex8);
      assertSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertSame(complex15, complex11);
      assertSame(complex15, complex6);
      assertSame(complex15, complex2);
      assertNotSame(complex15, complex13);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex6);
      assertSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex15);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertSame(complex3, complex15);
      assertSame(complex3, complex4);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex5);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex12);
      
      Complex complex16 = complex12.cosh();
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(1.5313577118019428E302, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(696.5, complex12.getReal(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex16);
      
      Complex complex17 = complex8.reciprocal();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertSame(complex17, complex4);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertSame(complex17, complex5);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex10);
      assertSame(complex17, complex3);
      assertSame(complex17, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      
      Complex complex18 = complex17.negate();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertSame(complex17, complex4);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertSame(complex17, complex5);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex10);
      assertSame(complex17, complex3);
      assertSame(complex17, complex6);
      assertSame(complex17, complex18);
      assertSame(complex18, complex15);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex16);
      assertSame(complex18, complex5);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex17);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex0);
      assertSame(complex18, complex2);
      assertSame(complex18, complex4);
      assertSame(complex18, complex11);
      assertSame(complex18, complex6);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      
      Complex complex19 = complex18.I.multiply((-1936));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(-0.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex19.isNaN());
      assertEquals((-1936.0), complex19.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertSame(complex17, complex4);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertSame(complex17, complex5);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex10);
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex19);
      assertSame(complex17, complex6);
      assertSame(complex17, complex18);
      assertSame(complex18, complex15);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex16);
      assertSame(complex18, complex5);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex7);
      assertSame(complex18, complex17);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex0);
      assertSame(complex18, complex2);
      assertSame(complex18, complex4);
      assertSame(complex18, complex11);
      assertSame(complex18, complex6);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex19);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      
      Complex complex20 = complex16.sin();
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(1.5313577118019428E302, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals((-0.943391609001616), complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(-0.0, complex20.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(696.5, complex12.getReal(), 0.01);
      assertNotNull(complex20);
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex16));
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex20);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex19);
      assertNotSame(complex16, complex10);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex13);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex20);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex16);
      
      Complex complex21 = complex12.atan();
      assertFalse(complex21.isInfinite());
      assertEquals(0.0, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isNaN());
      assertEquals(1.5693605776019681, complex21.getReal(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(696.5, complex12.getReal(), 0.01);
      assertNotNull(complex21);
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex20));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex16));
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex20);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex21);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex16);
      
      boolean boolean0 = complex3.isNaN();
      assertTrue(boolean0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex19));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex12));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertSame(complex2, complex17);
      assertSame(complex2, complex18);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex19);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex21);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex16);
      assertSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex15);
      assertSame(complex3, complex18);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertSame(complex3, complex17);
      assertSame(complex3, complex15);
      assertSame(complex3, complex4);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex21);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex20);
      assertSame(complex3, complex5);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex12);
      
      Complex complex22 = complex8.acos();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex22.getImaginary(), 0.01);
      assertFalse(complex22.isInfinite());
      assertFalse(complex22.isNaN());
      assertEquals(1.5707963267948966, complex22.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertNotNull(complex22);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex20));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex0);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex6);
      assertNotSame(complex22, complex20);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex14);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex19);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex12);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex15);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex9);
      assertNotSame(complex22, complex2);
      assertNotSame(complex8, complex21);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex22);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex20);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      
      String string0 = complex8.toString();
      assertEquals("(0.0, 0.0)", string0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertNotNull(string0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex22));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex20));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex8, complex21);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex22);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex20);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      
      boolean boolean1 = complex17.isNaN();
      assertTrue(boolean1);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex0));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex22));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex22));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex20));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(boolean1 == boolean0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertSame(complex17, complex4);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex20);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex9);
      assertSame(complex17, complex5);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex22);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex10);
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex19);
      assertSame(complex17, complex6);
      assertNotSame(complex17, complex21);
      assertSame(complex17, complex18);
      assertNotSame(complex8, complex21);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex22);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex20);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = Complex.valueOf((-2.4767709454727603E-235), 0.0);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-2.4767709454727603E-235), complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      List<Complex> list0 = complex1.INF.nthRoot(1);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-2.4767709454727603E-235), complex1.getReal(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotNull(list0);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertFalse(list0.contains(complex0));
      
      Complex complex2 = complex0.ZERO.sqrt();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.acos();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.pow(0.0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      String string0 = complex3.ONE.toString();
      assertEquals("(1.0, 0.0)", string0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertNotNull(string0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      
      Complex complex5 = complex3.NaN.acos();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex5.NaN.sinh();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      
      ComplexField complexField0 = complex4.NaN.getField();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex7 = complex3.subtract(0.0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex4.subtract(6.283185307179586);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals((-5.283185307179586), complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      
      Complex complex9 = complex8.I.subtract(6.283185307179586);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals((-5.283185307179586), complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-6.283185307179586), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      
      Complex complex10 = complex2.divide(complex7);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      
      double double0 = complex10.NaN.abs();
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      
      boolean boolean0 = complex2.isNaN();
      assertFalse(boolean0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      
      Complex complex11 = complex1.tanh();
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals((-2.4767709454727603E-235), complex11.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-2.4767709454727603E-235), complex1.getReal(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      
      double double1 = complex5.getReal();
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertEquals(double1, double0, 0.01);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      
      Complex complex12 = complex9.sin();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(3.779457520505508E-16, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals((-5.283185307179586), complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-6.283185307179586), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex7);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      complex0.ZERO.hashCode();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.I.sqrt1z();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.ONE.conjugate();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = new Complex((-645.6351915069));
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      
      Complex complex4 = complex0.add(complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex3.ONE.tan();
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(1.557407724654902, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex0.ONE.reciprocal();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex4.NaN.cosh();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex5.ONE.createComplex((-645.6351915069), (-2057.08057587));
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(1.557407724654902, complex5.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-645.6351915069), complex8.getReal(), 0.01);
      assertEquals((-2057.08057587), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertNotNull(complex8);
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex5.ONE.multiply(complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(1.557407724654902, complex5.getReal(), 0.01);
      assertTrue(complex9.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      
      Complex complex10 = complex9.INF.add(3239.0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(1.557407724654902, complex5.getReal(), 0.01);
      assertTrue(complex9.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      
      Complex complex11 = complex4.sqrt1z();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      
      complex3.hashCode();
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      
      boolean boolean0 = complex7.isInfinite();
      assertFalse(boolean0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      
      Complex complex12 = complex5.ONE.atan();
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(1.557407724654902, complex5.getReal(), 0.01);
      assertEquals(0.7853981633974483, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      
      Complex complex13 = complex9.multiply(2.0);
      assertTrue(complex13.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex13.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(1.557407724654902, complex5.getReal(), 0.01);
      assertTrue(complex9.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertTrue(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex13, complex11);
      assertSame(complex13, complex9);
      assertSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertSame(complex9, complex0);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex3);
      
      Complex complex14 = complex13.I.log();
      assertTrue(complex13.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex13.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(1.557407724654902, complex5.getReal(), 0.01);
      assertTrue(complex9.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complex14);
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertTrue(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex13, complex11);
      assertSame(complex13, complex9);
      assertSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      assertSame(complex9, complex0);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex3);
      
      Complex complex15 = complex7.sqrt();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex8));
      assertTrue(complex15.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex13);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      
      Complex complex16 = complex15.ONE.divide((-2057.08057587));
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals((-4.861258288713706E-4), complex16.getReal(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex8));
      assertTrue(complex15.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex13);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      
      int int0 = 1385;
      List<Complex> list0 = complex3.nthRoot(1385);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(list0.isEmpty());
      assertEquals(1385, list0.size());
      assertNotNull(list0);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertFalse(list0.contains(complex6));
      
      Complex complex17 = complex7.negate();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex3);
      assertSame(complex17, complex7);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex14);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex17);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex13);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      
      Complex complex18 = (Complex)complex17.readResolve();
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex7));
      assertTrue(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertTrue(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex14));
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex3);
      assertSame(complex17, complex7);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex14);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex17);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex17);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex13);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex18);
      
      Complex complex19 = Complex.ONE;
      assertFalse(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex14));
      assertTrue(complex19.equals((Object)complex2));
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex14);
      
      Complex complex20 = complex4.divide(complex19);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-645.6351915069), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertTrue(complex20.isNaN());
      assertNotNull(complex20);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex14));
      assertTrue(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex14));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex6));
      assertTrue(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex1));
      assertTrue(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex14));
      assertTrue(complex20.equals((Object)complex18));
      assertTrue(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex0));
      assertTrue(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex3));
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex18);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex14);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex3);
      
      try { 
        complex5.nthRoot((-854));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -854
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.I.tanh();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.negate();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      complex1.hashCode();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      
      Complex complex3 = complex2.sinh();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.INF.sin();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex2.ONE.reciprocal();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex0.multiply(420.0861777);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex6.divide(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(1.557407724654902, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertNotNull(complex7);
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex3.atan();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertNotNull(complex8);
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = complex8.ZERO.sqrt1z();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      
      Complex complex10 = complex3.divide(Double.POSITIVE_INFINITY);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex10);
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      
      double double0 = complex8.getImaginary();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      
      Complex complex11 = complex6.sqrt1z();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertNotNull(complex11);
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      
      Complex complex12 = complex0.ONE.pow(complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertNotNull(complex12);
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex8);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      
      Complex complex13 = complex11.ZERO.sinh();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertNotNull(complex13);
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex12));
      assertTrue(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex1));
      assertTrue(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex13.equals((Object)complex3));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertTrue(complex13.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex12);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex3);
      
      Complex complex14 = complex10.tanh();
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex14);
      assertTrue(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertTrue(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex13));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      
      Complex complex15 = complex8.add((-782.565678523726));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals((-782.565678523726), complex15.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      
      Complex complex16 = complex9.multiply((-3264.1841));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals((-3264.1841), complex16.getReal(), 0.01);
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex9.isNaN());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex14));
      assertTrue(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex10));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex2);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      
      double double1 = complex0.getArgument();
      assertEquals(0.0, double1, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      
      Complex complex17 = complex15.sqrt1z();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals((-782.565678523726), complex15.getReal(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertEquals(782.565039599457, complex17.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      
      double double2 = complex5.getReal();
      assertEquals(1.0, double2, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex16));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex5.equals((Object)complex12));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex14);
      
      Complex complex18 = complex2.createComplex(967.35588, (-57.38083));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex18.isNaN());
      assertEquals((-57.38083), complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(967.35588, complex18.getReal(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex10));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex10);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Complex complex0 = Complex.valueOf(2115.2179, (-1.0));
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      double double0 = complex0.INF.abs();
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.sqrt1z();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.ZERO.negate();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      ComplexField complexField0 = complex1.INF.getField();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      
      Complex complex3 = complex1.pow(complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex0.multiply(1);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(2115.2179, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.0), complex4.getImaginary(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex0.ZERO.multiply(complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex0.asin();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-8.350060348614834), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(1.5703235622455558, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex6.divide(complex4);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(2115.2179, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.0), complex4.getImaginary(), 0.01);
      assertEquals((-8.350060348614834), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(1.5703235622455558, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals((-0.00394726051117783), complex7.getImaginary(), 0.01);
      assertEquals(7.442594083364809E-4, complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex3.I.asin();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.8813735870195428, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex8.pow(complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.8813735870195428, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      
      complex9.ONE.hashCode();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.8813735870195428, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      
      Complex complex10 = complex2.multiply(1);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      
      Complex complex11 = complex0.NaN.cosh();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      
      ComplexField complexField1 = complex3.getField();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complexField1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertSame(complexField1, complexField0);
      
      ComplexField complexField2 = complex3.ZERO.getField();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complexField2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertSame(complexField2, complexField1);
      assertSame(complexField2, complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      
      Complex complex12 = complex0.NaN.reciprocal();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      
      Complex complex13 = Complex.valueOf(6.567708120053687E-8);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(6.567708120053687E-8, complex13.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      
      List<Complex> list0 = complex10.ONE.nthRoot(2103);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(list0.isEmpty());
      assertEquals(2103, list0.size());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(list0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      
      Complex complex14 = complex1.INF.conjugate();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex14.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex14.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      
      Complex complex15 = complex10.divide(complex3);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex14));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      
      double double1 = complex15.INF.abs();
      assertEquals(Double.POSITIVE_INFINITY, double1, 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertEquals(double1, double0, 0.01);
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex14));
      assertTrue(complex10.equals((Object)complex15));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      
      double double2 = complex1.getImaginary();
      assertEquals(2115.2176636177737, double2, 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      
      Complex complex16 = complex10.tanh();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(-0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex14));
      assertTrue(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertTrue(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertTrue(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex14));
      assertTrue(complex10.equals((Object)complex15));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex16);
      
      Complex complex17 = complex2.subtract((double) 1);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1.000000111753145, complex1.getReal(), 0.01);
      assertEquals(2115.2176636177737, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals((-1.0), complex17.getReal(), 0.01);
      assertEquals(-0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex13));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex13);
      
      Complex complex18 = complex4.reciprocal();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(2115.2179, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.0), complex4.getImaginary(), 0.01);
      assertEquals(2.23506252506645E-7, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(4.727644260639754E-4, complex18.getReal(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex17));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex17);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex2);
      
      Complex complex19 = complex18.acos();
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(2115.2179, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals((-1.0), complex4.getImaginary(), 0.01);
      assertEquals(2.23506252506645E-7, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(4.727644260639754E-4, complex18.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex19.isNaN());
      assertEquals((-2.2350627759930698E-7), complex19.getImaginary(), 0.01);
      assertEquals(1.5703235623512217, complex19.getReal(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex17));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex17));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex15);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex17);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex2);
      
      Complex complex20 = complex13.atan();
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(6.567708120053687E-8, complex13.getReal(), 0.01);
      assertFalse(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(6.567708120053677E-8, complex20.getReal(), 0.01);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertNotNull(complex20);
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex19));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex11));
      
      double double3 = complex11.getArgument();
      assertEquals(Double.NaN, double3, 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(2115.2179, complex0.getReal(), 0.01);
      assertEquals((-1.0), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex15));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex19));
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.cosh();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.reciprocal();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      List<Complex> list0 = complex1.ONE.nthRoot(1676);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1676, list0.size());
      assertNotNull(list0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      
      Complex complex3 = complex1.log();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex1.I.atan();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex1.sqrt1z();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex1.sinh();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex5.sin();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex7.ONE.asin();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex6.INF.createComplex(1676, 0.0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1676.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      
      ComplexField complexField0 = complex9.ZERO.getField();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1676.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complexField0);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      
      Complex complex10 = complex5.I.tan();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.7615941559557649, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex10);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex1.asin();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.5707963267948966, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex8));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      
      List<Complex> list1 = complex10.nthRoot(1676);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.7615941559557649, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(list1.isEmpty());
      assertEquals(1676, list1.size());
      assertNotNull(list1);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(list1.equals((Object)list0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(list1, list0);
      
      Complex complex12 = complex11.ZERO.divide(822.0649703152451);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.5707963267948966, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex8));
      assertTrue(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      
      Complex complex13 = complex10.pow(1952.4);
      assertEquals(7.020707919431171E-232, complex13.getImaginary(), 0.01);
      assertEquals(9.66317544921563E-232, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.7615941559557649, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex13);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      
      Complex complex14 = Complex.valueOf(0.0, (double) 1676);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(1676.0, complex14.getImaginary(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex6);
      
      Complex complex15 = complex6.conjugate();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(1.1752011936438014, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(1.1752011936438014, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertNotNull(complex15);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      
      Complex complex16 = complex10.subtract((double) 1676);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.7615941559557649, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals((-1676.0), complex16.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.7615941559557649, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex16);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex15));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex13);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex5);
      
      Complex complex17 = complex16.I.multiply(1676);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.7615941559557649, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals((-1676.0), complex16.getReal(), 0.01);
      assertEquals(1676.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.7615941559557649, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex17);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertTrue(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex7));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex15));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex13);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex5);
      
      Complex complex18 = complex0.cos();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertEquals(1.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertNotNull(complex18);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex8));
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex8);
      
      Complex complex19 = complex2.add(complex14);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(1676.0, complex14.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex6));
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex16);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex19, complex10);
      assertSame(complex19, complex2);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex7);
      assertSame(complex19, complex4);
      assertNotSame(complex19, complex6);
      
      Complex complex20 = complex2.divide(complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertTrue(complex20.isNaN());
      assertNotNull(complex20);
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex5));
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex16);
      assertSame(complex2, complex19);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex20);
      assertNotSame(complex2, complex17);
      assertSame(complex20, complex4);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex15);
      assertSame(complex20, complex2);
      assertNotSame(complex20, complex14);
      assertSame(complex20, complex19);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex5);
      
      Complex complex21 = complex19.asin();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(1676.0, complex14.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertNotNull(complex21);
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex20));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex19));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex8));
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex16);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex20);
      assertNotSame(complex14, complex21);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex19);
      assertNotSame(complex14, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      
      Complex complex22 = complex16.cos();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.7615941559557649, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals((-1676.0), complex16.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals((-0.05174212516997174), complex22.getReal(), 0.01);
      assertFalse(complex22.isInfinite());
      assertFalse(complex22.isNaN());
      assertEquals((-0.8367239312302611), complex22.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.7615941559557649, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex22);
      assertFalse(complex0.equals((Object)complex18));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex20));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex21));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex18));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex15));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex19));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex19));
      assertFalse(complex10.equals((Object)complex20));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex21));
      assertFalse(complex10.equals((Object)complex18));
      
      Complex complex23 = Complex.valueOf((-1255.6229357318944));
      assertFalse(complex23.isInfinite());
      assertFalse(complex23.isNaN());
      assertEquals(0.0, complex23.getImaginary(), 0.01);
      assertEquals((-1255.6229357318944), complex23.getReal(), 0.01);
      assertNotNull(complex23);
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex22));
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.log();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.createComplex(0.0, 1124.7961822);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(1124.7961822, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      double double0 = complex1.ONE.abs();
      assertEquals(1.0, double0, 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      
      Complex complex3 = complex2.INF.createComplex(2166.780621, 0.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(1124.7961822, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(2166.780621, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex0.ZERO.add(1124.7961822);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1124.7961822, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex4.ONE.acos();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1124.7961822, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex5.ZERO.log();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1124.7961822, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex4.NaN.multiply((-644.723006936));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1124.7961822, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      
      double double1 = complex7.ONE.getArgument();
      assertEquals(0.0, double1, 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1124.7961822, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex0.ZERO.asin();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex1.I.divide(0.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      
      Complex complex10 = complex0.multiply((-3116));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-3116.0), complex10.getImaginary(), 0.01);
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      
      Complex complex11 = complex1.createComplex((-3116), (-2971.0));
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-3116.0), complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals((-2971.0), complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      
      Complex complex12 = complex11.cosh();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-3116.0), complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals((-2971.0), complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex12.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      
      Complex complex13 = Complex.valueOf((double) (-3116));
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      Complex complex14 = complex13.acos();
      assertEquals((-8.737452561802488), complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(3.141592653589793, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      Complex complex15 = complex3.I.conjugate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals((-1.0), complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(1124.7961822, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(2166.780621, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      
      double double2 = complex14.NaN.getArgument();
      assertEquals(Double.NaN, double2, 0.01);
      assertEquals((-8.737452561802488), complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(3.141592653589793, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      Complex complex16 = complex13.sqrt1z();
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(3115.999839537865, complex16.getImaginary(), 0.01);
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex12);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      ComplexField complexField0 = complex14.INF.getField();
      assertEquals((-8.737452561802488), complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(3.141592653589793, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertNotNull(complexField0);
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      Complex complex17 = complex3.atan();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(1124.7961822, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(2166.780621, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(1.570334812639144, complex17.getReal(), 0.01);
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
      
      double double3 = complex14.abs();
      assertEquals(9.285078441824723, double3, 0.01);
      assertEquals((-8.737452561802488), complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(3.141592653589793, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      String string0 = complex16.I.toString();
      assertEquals("(0.0, 1.0)", string0);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(3115.999839537865, complex16.getImaginary(), 0.01);
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertNotNull(string0);
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex12);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      Complex complex18 = complex16.createComplex(0.0, 716.6356686883571);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(3115.999839537865, complex16.getImaginary(), 0.01);
      assertEquals(716.6356686883571, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(0.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex16);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      Complex complex19 = complex18.ZERO.cosh();
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(3115.999839537865, complex16.getImaginary(), 0.01);
      assertEquals(716.6356686883571, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(0.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertFalse(complex19.isNaN());
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertEquals((-3116.0), complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex19);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex19);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex13);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex19);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex7);
      
      Complex complex20 = Complex.valueOf(0.0);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      assertEquals(0.0, complex20.getReal(), 0.01);
      assertNotNull(complex20);
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex18));
      assertTrue(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex8));
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex8);
      
      complex17.hashCode();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(1124.7961822, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(2166.780621, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex17.isNaN());
      assertEquals(1.570334812639144, complex17.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex11));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex18);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex20);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex11);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.ONE.sqrt();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.NaN.acos();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.NaN.log();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex2);
      
      Complex complex4 = Complex.I;
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex2.subtract(complex4);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex0.multiply((-56.9716905));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex6.reciprocal();
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertSame(complex7, complex3);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex0.add((-56.9716905));
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals((-56.9716905), complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = Complex.valueOf((-56.9716905), (-56.9716905));
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-56.9716905), complex9.getReal(), 0.01);
      assertEquals((-56.9716905), complex9.getImaginary(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      
      Complex complex10 = complex9.divide(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-56.9716905), complex9.getReal(), 0.01);
      assertEquals((-56.9716905), complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex3);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex5);
      assertSame(complex10, complex2);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = Complex.valueOf(412.6579250638069, 412.6579250638069);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      
      Complex complex2 = complex1.ONE.subtract((-1.0));
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertNotNull(complex2);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      
      Complex complex3 = complex0.pow(complex1);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      
      Complex complex4 = complex3.NaN.exp();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex3));
      
      Complex complex5 = complex3.I.cos();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      
      Complex complex6 = complex2.ZERO.acos();
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      
      Complex complex7 = new Complex(4215.2032554, 412.6579250638069);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(412.6579250638069, complex7.getImaginary(), 0.01);
      assertEquals(4215.2032554, complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      
      Complex complex8 = complex6.NaN.subtract(complex7);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(412.6579250638069, complex7.getImaginary(), 0.01);
      assertEquals(4215.2032554, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex3));
      
      Complex complex9 = complex2.exp();
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      
      Complex complex10 = complex9.NaN.multiply(1);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertTrue(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      
      double double0 = complex7.INF.abs();
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(412.6579250638069, complex7.getImaginary(), 0.01);
      assertEquals(4215.2032554, complex7.getReal(), 0.01);
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      
      Complex complex11 = complex3.NaN.negate();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      
      Complex complex12 = complex5.pow(Double.POSITIVE_INFINITY);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex8));
      assertTrue(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex11));
      
      Complex complex13 = complex5.divide(complex0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      
      Complex complex14 = complex3.NaN.sinh();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertNotNull(complex14);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex3));
      
      Complex complex15 = complex0.pow(complex9);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
      assertNotNull(complex15);
      assertFalse(complex15.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex4));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex8));
      assertTrue(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      
      Complex complex16 = complex15.I.exp();
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.8414709848078965, complex16.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex15.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex4));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex8));
      assertTrue(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      
      Complex complex17 = complex13.sqrt();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      
      Complex complex18 = complex17.ZERO.cos();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(1.0, complex18.getReal(), 0.01);
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex17));
      
      Complex complex19 = complex17.NaN.exp();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex18));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex16));
      assertTrue(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex18));
      assertTrue(complex19.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex17));
      
      Complex complex20 = (Complex)complex19.NaN.readResolve();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertTrue(complex20.isNaN());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertNotNull(complex20);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex18));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex16));
      assertTrue(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex18));
      assertTrue(complex19.equals((Object)complex3));
      assertTrue(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex7));
      assertTrue(complex20.equals((Object)complex10));
      assertTrue(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex18));
      assertTrue(complex20.equals((Object)complex11));
      assertTrue(complex20.equals((Object)complex8));
      assertTrue(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex0));
      assertTrue(complex20.equals((Object)complex12));
      assertTrue(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex19));
      assertTrue(complex13.equals((Object)complex17));
      
      Complex complex21 = complex11.conjugate();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertNotNull(complex21);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex18));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex17));
      assertTrue(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex16));
      assertTrue(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex18));
      assertTrue(complex21.equals((Object)complex12));
      assertTrue(complex21.equals((Object)complex20));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex17));
      assertTrue(complex11.equals((Object)complex15));
      assertTrue(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex13));
      
      Complex complex22 = complex9.add((-1.0));
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex22.isInfinite());
      assertEquals(6.38905609893065, complex22.getReal(), 0.01);
      assertEquals(0.0, complex22.getImaginary(), 0.01);
      assertFalse(complex22.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
      assertNotNull(complex22);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      
      Complex complex23 = complex9.tanh();
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex23.getImaginary(), 0.01);
      assertEquals(0.999999236204229, complex23.getReal(), 0.01);
      assertFalse(complex23.isNaN());
      assertFalse(complex23.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
      assertNotNull(complex23);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex22));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      
      Complex complex24 = complex18.log();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(1.0, complex18.getReal(), 0.01);
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(0.0, complex24.getReal(), 0.01);
      assertFalse(complex24.isNaN());
      assertEquals(-0.0, complex24.getImaginary(), 0.01);
      assertFalse(complex24.isInfinite());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertNotNull(complex24);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex21));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex23));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex22));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex22));
      assertFalse(complex18.equals((Object)complex20));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex21));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex23));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex18));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertTrue(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex22));
      assertFalse(complex3.equals((Object)complex23));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex23));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex11));
      assertTrue(complex24.equals((Object)complex17));
      assertTrue(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex22));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex21));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex20));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex19));
      assertFalse(complex13.equals((Object)complex23));
      assertTrue(complex13.equals((Object)complex17));
      
      double double1 = complex2.getImaginary();
      assertEquals(0.0, double1, 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex23));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex14));
      assertNotEquals(double1, double0, 0.01);
      
      Complex complex25 = complex7.add(Double.POSITIVE_INFINITY);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(412.6579250638069, complex7.getImaginary(), 0.01);
      assertEquals(4215.2032554, complex7.getReal(), 0.01);
      assertTrue(complex25.isInfinite());
      assertEquals(412.6579250638069, complex25.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex25.getReal(), 0.01);
      assertFalse(complex25.isNaN());
      assertNotNull(complex25);
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex24));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex23));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex22));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex25.equals((Object)complex21));
      assertFalse(complex25.equals((Object)complex18));
      assertFalse(complex25.equals((Object)complex1));
      assertFalse(complex25.equals((Object)complex7));
      assertFalse(complex25.equals((Object)complex14));
      assertFalse(complex25.equals((Object)complex17));
      assertFalse(complex25.equals((Object)complex9));
      assertFalse(complex25.equals((Object)complex4));
      assertFalse(complex25.equals((Object)complex20));
      assertFalse(complex25.equals((Object)complex12));
      assertFalse(complex25.equals((Object)complex19));
      assertFalse(complex25.equals((Object)complex8));
      assertFalse(complex25.equals((Object)complex0));
      assertFalse(complex25.equals((Object)complex3));
      assertFalse(complex25.equals((Object)complex16));
      assertFalse(complex25.equals((Object)complex15));
      assertFalse(complex25.equals((Object)complex6));
      assertFalse(complex25.equals((Object)complex2));
      assertFalse(complex25.equals((Object)complex5));
      assertFalse(complex25.equals((Object)complex13));
      assertFalse(complex25.equals((Object)complex22));
      assertFalse(complex25.equals((Object)complex10));
      assertFalse(complex25.equals((Object)complex24));
      assertFalse(complex25.equals((Object)complex23));
      assertFalse(complex25.equals((Object)complex11));
      
      Complex complex26 = complex14.pow(complex9);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
      assertFalse(complex26.isInfinite());
      assertEquals(Double.NaN, complex26.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex26.getReal(), 0.01);
      assertTrue(complex26.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertNotNull(complex26);
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex25));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex25));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex25));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex23));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex19));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex25));
      assertFalse(complex3.equals((Object)complex24));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex18));
      assertTrue(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex22));
      assertFalse(complex3.equals((Object)complex23));
      assertTrue(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex24));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex25));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex23));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex22));
      assertTrue(complex26.equals((Object)complex12));
      assertFalse(complex26.equals((Object)complex1));
      assertFalse(complex26.equals((Object)complex0));
      assertFalse(complex26.equals((Object)complex18));
      assertFalse(complex26.equals((Object)complex13));
      assertFalse(complex26.equals((Object)complex2));
      assertFalse(complex26.equals((Object)complex16));
      assertTrue(complex26.equals((Object)complex20));
      assertTrue(complex26.equals((Object)complex15));
      assertFalse(complex26.equals((Object)complex9));
      assertFalse(complex26.equals((Object)complex17));
      assertFalse(complex26.equals((Object)complex5));
      assertFalse(complex26.equals((Object)complex25));
      assertFalse(complex26.equals((Object)complex23));
      assertFalse(complex26.equals((Object)complex7));
      assertFalse(complex26.equals((Object)complex22));
      assertFalse(complex26.equals((Object)complex24));
      assertTrue(complex26.equals((Object)complex3));
      assertFalse(complex26.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex18));
      assertTrue(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex22));
      assertFalse(complex14.equals((Object)complex17));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex24));
      assertFalse(complex14.equals((Object)complex25));
      assertFalse(complex14.equals((Object)complex23));
      assertTrue(complex14.equals((Object)complex20));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex3));
      
      Complex complex27 = complex8.negate();
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex6.isInfinite());
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(412.6579250638069, complex7.getImaginary(), 0.01);
      assertEquals(4215.2032554, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex27.getReal(), 0.01);
      assertTrue(complex27.isNaN());
      assertFalse(complex27.isInfinite());
      assertEquals(Double.NaN, complex27.getImaginary(), 0.01);
      assertNotNull(complex27);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex25));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex26));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex25));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex23));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex26));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex21));
      assertFalse(complex6.equals((Object)complex26));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex25));
      assertFalse(complex6.equals((Object)complex22));
      assertFalse(complex6.equals((Object)complex24));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex23));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex20));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex24));
      assertFalse(complex7.equals((Object)complex25));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex23));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex22));
      assertFalse(complex7.equals((Object)complex26));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex17));
      assertTrue(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex24));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex25));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex22));
      assertFalse(complex8.equals((Object)complex23));
      assertTrue(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex27.equals((Object)complex6));
      assertTrue(complex27.equals((Object)complex15));
      assertFalse(complex27.equals((Object)complex9));
      assertFalse(complex27.equals((Object)complex7));
      assertFalse(complex27.equals((Object)complex22));
      assertFalse(complex27.equals((Object)complex18));
      assertFalse(complex27.equals((Object)complex2));
      assertFalse(complex27.equals((Object)complex1));
      assertFalse(complex27.equals((Object)complex5));
      assertTrue(complex27.equals((Object)complex3));
      assertFalse(complex27.equals((Object)complex0));
      assertFalse(complex27.equals((Object)complex24));
      assertFalse(complex27.equals((Object)complex13));
      assertFalse(complex27.equals((Object)complex25));
      assertFalse(complex27.equals((Object)complex23));
      assertFalse(complex27.equals((Object)complex17));
      assertTrue(complex27.equals((Object)complex20));
      assertFalse(complex27.equals((Object)complex16));
      assertTrue(complex27.equals((Object)complex12));
      
      boolean boolean0 = complex7.isInfinite();
      assertFalse(boolean0);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(412.6579250638069, complex7.getImaginary(), 0.01);
      assertEquals(4215.2032554, complex7.getReal(), 0.01);
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex24));
      assertFalse(complex7.equals((Object)complex25));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex23));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex22));
      assertFalse(complex7.equals((Object)complex26));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      
      Complex complex28 = complex22.exp();
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex22.isInfinite());
      assertEquals(6.38905609893065, complex22.getReal(), 0.01);
      assertEquals(0.0, complex22.getImaginary(), 0.01);
      assertFalse(complex22.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
      assertEquals(0.0, complex28.getImaginary(), 0.01);
      assertEquals(595.2944153807538, complex28.getReal(), 0.01);
      assertFalse(complex28.isInfinite());
      assertFalse(complex28.isNaN());
      assertNotNull(complex28);
      
      boolean boolean1 = complex9.isInfinite();
      assertFalse(boolean1);
      assertFalse(complex1.isInfinite());
      assertEquals(412.6579250638069, complex1.getImaginary(), 0.01);
      assertEquals(412.6579250638069, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(7.38905609893065, complex9.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = Complex.NaN;
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.ONE.negate();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals((-1.0), complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = Complex.valueOf(0.0, 0.0);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex0.I.subtract(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex1);
      
      Complex complex5 = complex1.NaN.atan();
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertSame(complex5, complex1);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex4.ZERO.subtract(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex5);
      assertSame(complex4, complex1);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      
      Complex complex7 = complex4.ONE.multiply((-4381.611442283379));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals((-4381.611442283379), complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex5);
      assertSame(complex4, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex6.ONE.acos();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex6.sin();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex9);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex9);
      assertSame(complex4, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex9);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex6);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      
      Complex complex10 = Complex.valueOf((-1933.2569930793), 5.111952261540649E-283);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-1933.2569930793), complex10.getReal(), 0.01);
      assertEquals(5.111952261540649E-283, complex10.getImaginary(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      
      Complex complex11 = complex10.ONE.pow(0.0);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-1933.2569930793), complex10.getReal(), 0.01);
      assertEquals(5.111952261540649E-283, complex10.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      
      Complex complex12 = complex0.exp();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      
      Complex complex13 = complex12.I.sin();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(1.1752011936438014, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      
      Complex complex14 = complex4.sqrt1z();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex13);
      assertSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex14);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex9);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex13);
      assertSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex14);
      assertSame(complex4, complex1);
      assertNotSame(complex14, complex2);
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertSame(complex14, complex6);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex9);
      assertSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex0);
      
      try { 
        complex12.nthRoot((-1321));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -1,321
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1275.029989);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.ONE.multiply(584);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(584.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.INF.add(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(584.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.ONE.atan();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(584.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertTrue(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7853981633974483, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      List<Complex> list0 = complex0.nthRoot(3554);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(list0.isEmpty());
      assertEquals(3554, list0.size());
      assertNotNull(list0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertFalse(list0.contains(complex2));
      
      Complex complex4 = complex0.acos();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(7.843872005061945, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      ComplexField complexField0 = complex4.ONE.getField();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(7.843872005061945, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      double double0 = complex4.getReal();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(7.843872005061945, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex1.sqrt();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(584.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(24.166091947189145, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex5.subtract(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(584.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(7.843872005061945, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(24.166091947189145, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(24.166091947189145, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals((-7.843872005061945), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex1.sinh();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(584.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(2.122987493922312E253, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      
      Complex complex8 = complex0.tanh();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      
      Complex complex9 = complex4.multiply(complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(584.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(7.843872005061945, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(24.166091947189145, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(24.166091947189145, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals((-7.843872005061945), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(189.55573209630984, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(61.52632803179449, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      
      Complex complex10 = complex5.add(0.0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1275.029989, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(584.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(24.166091947189145, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(24.166091947189145, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex10);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex2);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.I.reciprocal();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.acos();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex0);
      
      Complex complex3 = complex2.I.add(complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex0);
      assertSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex0);
      assertSame(complex3, complex2);
      
      Complex complex4 = complex0.ONE.cosh();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex0.ONE.sqrt1z();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      
      Complex complex6 = complex5.createComplex(4.426120229279107E153, 0.0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(4.426120229279107E153, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = Complex.valueOf(1075.66533, 1.0);
      assertEquals(1.0, complex7.getImaginary(), 0.01);
      assertEquals(1075.66533, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertNotNull(complex7);
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex1.INF.cosh();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      
      Complex complex9 = complex8.NaN.subtract(complex4);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex0);
      
      double double0 = complex0.ONE.abs();
      assertEquals(1.0, double0, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      
      Complex complex10 = complex5.NaN.cosh();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertNotNull(complex10);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      
      Complex complex11 = complex0.pow(0.0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertNotNull(complex11);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex10);
      
      Complex complex12 = complex11.divide(1698.07358282473);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertNotNull(complex12);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex11);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertSame(complex11, complex12);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex10);
      assertNotSame(complex12, complex7);
      assertSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex3);
      assertSame(complex12, complex0);
      assertNotSame(complex12, complex8);
      
      Complex complex13 = (Complex)complex12.INF.readResolve();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex13.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertTrue(complex13.isInfinite());
      assertNotNull(complex13);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex12);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex3);
      assertSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex13);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      
      double double1 = complex12.getReal();
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex13));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertSame(complex11, complex12);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex3);
      assertSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex13);
      
      boolean boolean0 = complex0.isNaN();
      assertTrue(boolean0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      
      Complex complex14 = complex1.tan();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex14.isInfinite());
      assertEquals((-0.7615941559557649), complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertNotNull(complex14);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      
      List<Complex> list0 = complex4.nthRoot(7);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(list0.isEmpty());
      assertEquals(7, list0.size());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(list0);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertFalse(list0.contains(complex2));
      
      Complex complex15 = complex1.divide(0.0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertNotNull(complex15);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex13));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex15);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex11);
      assertSame(complex15, complex0);
      assertSame(complex15, complex9);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex1);
      assertSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertSame(complex15, complex2);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      
      List<Complex> list1 = complex15.nthRoot(7);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(1, list1.size());
      assertFalse(list1.isEmpty());
      assertNotNull(list1);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(list1.equals((Object)list0));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex15);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex11);
      assertSame(complex15, complex0);
      assertSame(complex15, complex9);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex1);
      assertSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertSame(complex15, complex2);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(list1, list0);
      assertTrue(list1.contains(complex2));
      assertFalse(list1.contains(complex4));
      
      Complex complex16 = complex4.subtract(1698.07358282473);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals((-1696.5305021899148), complex16.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertNotNull(complex16);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex12));
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex15);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex12);
      
      Complex complex17 = Complex.NaN;
      assertTrue(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertNotNull(complex17);
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertSame(complex17, complex3);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex10);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex11);
      assertSame(complex17, complex0);
      assertSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      
      Complex complex18 = complex9.multiply(complex17);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertNotNull(complex18);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex5));
      assertTrue(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex16));
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex18);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex15);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertSame(complex17, complex3);
      assertSame(complex17, complex18);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex10);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex11);
      assertSame(complex17, complex0);
      assertSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      assertNotSame(complex18, complex8);
      assertSame(complex18, complex12);
      assertSame(complex18, complex2);
      assertSame(complex18, complex10);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex0);
      assertSame(complex18, complex17);
      assertSame(complex18, complex9);
      assertSame(complex18, complex11);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex15);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex14);
      assertSame(complex9, complex11);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex13);
      assertSame(complex9, complex15);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex16);
      assertSame(complex9, complex12);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex18);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex0);
      
      Complex complex19 = complex6.sinh();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(4.426120229279107E153, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex19.getReal(), 0.01);
      assertNotNull(complex19);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex1));
      assertTrue(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex16));
      assertTrue(complex19.equals((Object)complex8));
      assertTrue(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex18));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex11));
      assertTrue(complex19.equals((Object)complex15));
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex18);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex15);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex7);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex3);
      
      Complex complex20 = complex19.NaN.divide((double) 7);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(4.426120229279107E153, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertTrue(complex20.isNaN());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertNotNull(complex20);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex5));
      assertTrue(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex1));
      assertTrue(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex16));
      assertTrue(complex19.equals((Object)complex8));
      assertTrue(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex13));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex4));
      assertTrue(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex18));
      assertTrue(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex11));
      assertTrue(complex19.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex5));
      assertTrue(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex19));
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex18);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex15);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex7);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex3);
      assertSame(complex20, complex10);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex0);
      assertSame(complex20, complex11);
      assertSame(complex20, complex15);
      assertSame(complex20, complex18);
      assertSame(complex20, complex2);
      assertNotSame(complex20, complex4);
      assertSame(complex20, complex3);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex14);
      assertSame(complex20, complex9);
      assertSame(complex20, complex17);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex12);
      
      boolean boolean1 = complex17.isNaN();
      assertTrue(boolean1);
      assertTrue(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(boolean1 == boolean0);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertSame(complex17, complex3);
      assertSame(complex17, complex18);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex10);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex20);
      assertSame(complex17, complex11);
      assertSame(complex17, complex0);
      assertSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      
      double double2 = complex18.getReal();
      assertEquals(Double.NaN, double2, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertTrue(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex14));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex13));
      assertTrue(complex18.equals((Object)complex19));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex5));
      assertTrue(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex19));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex20));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex13));
      assertTrue(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex16));
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex18);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex15);
      assertSame(complex0, complex11);
      assertSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertSame(complex17, complex3);
      assertSame(complex17, complex18);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex10);
      assertNotSame(complex17, complex13);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex20);
      assertSame(complex17, complex11);
      assertSame(complex17, complex0);
      assertSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      assertSame(complex18, complex20);
      assertNotSame(complex18, complex8);
      assertSame(complex18, complex12);
      assertSame(complex18, complex2);
      assertSame(complex18, complex10);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex0);
      assertSame(complex18, complex17);
      assertSame(complex18, complex9);
      assertSame(complex18, complex11);
      assertNotSame(complex18, complex13);
      assertSame(complex18, complex15);
      assertSame(complex18, complex3);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex19);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex7);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex20);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex3);
      assertNotSame(complex9, complex14);
      assertSame(complex9, complex11);
      assertSame(complex9, complex17);
      assertNotSame(complex9, complex13);
      assertSame(complex9, complex15);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex16);
      assertSame(complex9, complex20);
      assertSame(complex9, complex12);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex18);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Complex complex0 = new Complex((-816.00841));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.sqrt1z();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(816.007797260987, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.INF.acos();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(816.007797260987, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      ComplexField complexField0 = complex1.getField();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(816.007797260987, complex1.getImaginary(), 0.01);
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      
      Complex complex3 = complex0.negate();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertEquals(816.00841, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex1.subtract((-1021.01853788968));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(816.007797260987, complex1.getImaginary(), 0.01);
      assertEquals(1021.01853788968, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(816.007797260987, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex0.negate();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(816.00841, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = Complex.valueOf(445.510772923421);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(445.510772923421, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex6.divide(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(445.510772923421, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals((-0.5459634575621849), complex7.getReal(), 0.01);
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      
      Complex complex8 = complex1.multiply(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(816.007797260987, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      
      Complex complex9 = complex5.subtract(2505.10501);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-816.00841), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertEquals(816.00841, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-1689.0966000000003), complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = Complex.valueOf(2756.623548295711, (-610.6478472178));
      assertEquals((-610.6478472178), complex1.getImaginary(), 0.01);
      assertEquals(2756.623548295711, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      boolean boolean0 = complex0.isInfinite();
      assertFalse(boolean0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      
      Complex complex2 = new Complex((-2.6725298288329835E-8), 0.0);
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      
      Complex complex3 = complex0.add(complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-2.6725298288329835E-8), complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex2.tan();
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals((-2.672529828832984E-8), complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex4.ONE.pow(0.0);
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals((-2.672529828832984E-8), complex4.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertNotNull(complex5);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = Complex.valueOf(2.0, 2.0);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(2.0, complex6.getReal(), 0.01);
      assertEquals(2.0, complex6.getImaginary(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex2.atan();
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals((-2.672529828832983E-8), complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex7.sqrt1z();
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals((-2.672529828832983E-8), complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.9999999999999997, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      
      Complex complex9 = complex8.I.divide(complex7);
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals((-2.672529828832983E-8), complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.9999999999999997, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals((-3.741773016754957E7), complex9.getImaginary(), 0.01);
      assertEquals(-0.0, complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      
      Complex complex10 = complex8.multiply(0);
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals((-2.672529828832983E-8), complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.9999999999999997, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      
      Complex complex11 = complex10.ZERO.log();
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals((-2.672529828832983E-8), complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.9999999999999997, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertTrue(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex11.getReal(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      
      String string0 = complex5.toString();
      assertEquals("(1.0, 0.0)", string0);
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals((-2.672529828832984E-8), complex4.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertNotNull(string0);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex9);
      
      Complex complex12 = complex6.sinh();
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(2.0, complex6.getReal(), 0.01);
      assertEquals(2.0, complex6.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals((-1.5093064853236156), complex12.getReal(), 0.01);
      assertEquals(3.4209548611170133, complex12.getImaginary(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      
      Complex complex13 = complex8.tanh();
      assertEquals((-2.6725298288329835E-8), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals((-2.672529828832983E-8), complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.9999999999999997, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(0.7615941559557646, complex13.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertNotNull(complex13);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex1));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex4);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex10);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex1);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.conjugate();
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.pow((-2824.934533206255));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertNotNull(complex2);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.I.pow((-2824.934533206255));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-0.9947171394755285), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.10265384763184426, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex2.conjugate();
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      
      boolean boolean0 = complex1.isNaN();
      assertFalse(boolean0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      
      Complex complex5 = complex2.add(complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      
      double double0 = complex5.abs();
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      
      String string0 = complex5.toString();
      assertEquals("(NaN, NaN)", string0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertNotNull(string0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = Complex.valueOf((-2824.934533206255), (-2824.934533206255));
      assertFalse(complex6.isInfinite());
      assertEquals((-2824.934533206255), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals((-2824.934533206255), complex6.getImaginary(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      
      Complex complex7 = complex4.sinh();
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex5);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      
      double double1 = complex7.abs();
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex5);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      
      Complex complex8 = complex7.divide(Double.NaN);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex7);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex5);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertSame(complex7, complex4);
      assertSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex5);
      assertSame(complex8, complex2);
      assertSame(complex8, complex7);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      
      double double2 = complex6.getImaginary();
      assertEquals((-2824.934533206255), double2, 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals((-2824.934533206255), complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals((-2824.934533206255), complex6.getImaginary(), 0.01);
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      
      Complex complex9 = complex0.sqrt();
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      
      Complex complex10 = complex1.pow((-2824.934533206255));
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      
      complex10.NaN.hashCode();
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      
      double double3 = complex10.ONE.getArgument();
      assertEquals(0.0, double3, 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      
      double double4 = complex10.NaN.abs();
      assertEquals(Double.NaN, double4, 0.01);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertEquals(double4, double0, 0.01);
      assertEquals(double4, double1, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertTrue(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex1));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      
      Complex complex11 = complex4.sin();
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertTrue(complex11.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertNotNull(complex11);
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertSame(complex2, complex7);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex5);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex5);
      assertSame(complex11, complex4);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertSame(complex4, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex5);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex2);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Complex complex0 = Complex.valueOf(3710.1755);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(3710.1755, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.pow(176.9937);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(3710.1755, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.tanh();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(3710.1755, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex0.asin();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(3710.1755, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals((-8.911981621463335), complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex2.tan();
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(3710.1755, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      
      double double0 = complex3.getArgument();
      assertEquals((-1.396331579600379), double0, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(3710.1755, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals((-8.911981621463335), complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex5 = complex2.add(complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(3710.1755, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals((-8.911981621463335), complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex2, complex4);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      
      Complex complex6 = complex5.multiply(complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(3710.1755, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals((-8.911981621463335), complex3.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertSame(complex2, complex6);
      assertSame(complex2, complex4);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex2);
      assertSame(complex4, complex6);
      assertSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex6);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex2);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex1);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Complex complex0 = new Complex(0.0, 0.0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = Complex.valueOf(0.0, 1573.51424);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1573.51424, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.ZERO.multiply(complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(1573.51424, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.multiply(0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertNotNull(complex3);
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.reciprocal();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      
      Complex complex2 = complex0.I.exp();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.ZERO.divide(complex0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.INF.pow(complex2);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex3));
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      String string0 = complex4.ONE.toString();
      assertEquals("(1.0, 0.0)", string0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(string0);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex3));
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      double double0 = complex0.ONE.getArgument();
      assertEquals(0.0, double0, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      
      Complex complex5 = Complex.valueOf(0.0, 0.0);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      
      complex2.NaN.hashCode();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      
      Complex complex6 = Complex.valueOf((-267.0), 2.381600167287677E-297);
      assertEquals(2.381600167287677E-297, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals((-267.0), complex6.getReal(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex2.log();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getImaginary(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex6.ZERO.exp();
      assertEquals(2.381600167287677E-297, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals((-267.0), complex6.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      
      complex0.ONE.hashCode();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      
      Complex complex9 = complex2.ZERO.conjugate();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      
      Complex complex10 = complex0.ONE.log();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      
      Complex complex11 = (Complex)complex1.readResolve();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex3));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      
      double double1 = complex2.getArgument();
      assertEquals(1.0, double1, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      
      Complex complex12 = complex4.INF.atan();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex10));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex12);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex1);
      assertSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      
      ComplexField complexField0 = complex0.getField();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex12);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      
      double double2 = complex7.getImaginary();
      assertEquals(1.0, double2, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex12));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex12);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex12);
      
      double double3 = complex9.getImaginary();
      assertEquals(-0.0, double3, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertEquals(double3, double0, 0.01);
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex11));
      assertTrue(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex12);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex12);
      
      Complex complex13 = complex0.exp();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex4));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex1);
      assertSame(complex13, complex3);
      assertNotSame(complex13, complex8);
      assertSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertSame(complex13, complex12);
      
      complex4.hashCode();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex7));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex13);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      
      Complex complex14 = complex3.cos();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex5));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex14);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex12);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex13);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex9);
      assertSame(complex14, complex1);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex6);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex3);
      assertSame(complex14, complex0);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      
      Complex complex15 = complex10.multiply(0.0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex5));
      assertTrue(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex13));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex14);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex10);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex13);
      
      Complex complex16 = complex2.subtract(complex6);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(267.5403023058681, complex16.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex16.getImaginary(), 0.01);
      assertEquals(2.381600167287677E-297, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals((-267.0), complex6.getReal(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex14);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex13);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex1);
      
      Complex complex17 = complex13.acos();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex17.isNaN());
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex15));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex2));
      assertTrue(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex15));
      assertTrue(complex17.equals((Object)complex4));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex14);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex17);
      assertSame(complex13, complex1);
      assertNotSame(complex13, complex16);
      assertSame(complex13, complex3);
      assertSame(complex13, complex14);
      assertNotSame(complex13, complex8);
      assertSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex15);
      assertSame(complex13, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex8);
      assertSame(complex17, complex0);
      assertSame(complex17, complex14);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex15);
      assertSame(complex17, complex3);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex13);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex10);
      assertSame(complex17, complex1);
      
      Complex complex18 = Complex.valueOf(0.0, (-20.0));
      assertEquals(0.0, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals((-20.0), complex18.getImaginary(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex16));
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex16);
      
      boolean boolean0 = complex5.isNaN();
      assertFalse(boolean0);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex16));
      assertTrue(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex17));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      
      Complex complex19 = complex7.pow(0.0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(1.0, complex7.getImaginary(), 0.01);
      assertEquals(1.0, complex19.getReal(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex19.isNaN());
      assertEquals(0.0, complex19.getImaginary(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex14));
      assertTrue(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex9));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex14);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex6);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex9);
      
      Complex complex20 = complex0.multiply(0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertTrue(complex20.isNaN());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertNotNull(complex20);
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex16));
      assertTrue(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex6));
      assertTrue(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex5));
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex14);
      assertSame(complex0, complex20);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertSame(complex0, complex17);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex12);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertSame(complex20, complex3);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex10);
      assertSame(complex20, complex17);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex19);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex9);
      assertSame(complex20, complex13);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex15);
      assertSame(complex20, complex14);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex16);
      assertSame(complex20, complex1);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex4);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.add(1655.6839272);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1656.6839272, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.add(1655.6839272);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.ZERO.conjugate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex0.ONE.tanh();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.7615941559557649, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex3.ONE.cosh();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      
      boolean boolean0 = complex1.equals(complex0);
      assertFalse(boolean0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1656.6839272, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      
      Complex complex6 = complex2.atan();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.1102230246251564E-16, complex6.getImaginary(), 0.01);
      assertEquals(1.5701927114267922, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex5.I.multiply(1.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(1.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex0.I.negate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex8.ZERO.tanh();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      
      Complex complex10 = complex1.add(complex3);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1656.6839272, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(1656.6839272, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      
      Complex complex11 = complex5.tan();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(36.071404402473284, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      
      Complex complex12 = complex11.createComplex(1655.6839272, 1655.6839272);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(36.071404402473284, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1655.6839272, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(1655.6839272, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex11));
      assertTrue(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      
      complex12.INF.hashCode();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(36.071404402473284, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(1655.6839272, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(1655.6839272, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      
      Complex complex13 = complex2.log();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(7.412573249201287, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      
      Complex complex14 = complex9.conjugate();
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex10));
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      
      double double0 = complex14.getArgument();
      assertEquals(-0.0, double0, 0.01);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(-0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex4));
      assertTrue(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex10));
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      
      String string0 = complex6.toString();
      assertEquals("(1.5701927114267922, 1.1102230246251564E-16)", string0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.1102230246251564E-16, complex6.getImaginary(), 0.01);
      assertEquals(1.5701927114267922, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertNotNull(string0);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      
      boolean boolean1 = complex10.equals((Object) null);
      assertFalse(boolean1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1656.6839272, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(1656.6839272, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(boolean1 == boolean0);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex6));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex13));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      
      Complex complex15 = complex11.pow(complex2);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex15.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(36.071404402473284, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex7);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      
      Complex complex16 = complex4.add(2127.3118086);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.7615941559557649, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(2128.0734027559556, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex8));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex16);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex8);
      
      Complex complex17 = complex9.negate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(-0.0, complex17.getReal(), 0.01);
      assertEquals(-0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertEquals((-1.0), complex8.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex10));
      assertTrue(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex10));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex10);
      
      Complex complex18 = complex10.negate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1656.6839272, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals(-0.0, complex18.getImaginary(), 0.01);
      assertEquals((-1656.6839272), complex18.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(1656.6839272, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex17));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex13));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex9));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex11);
      
      Complex complex19 = complex1.divide(complex15);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1656.6839272, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex15.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(36.071404402473284, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex18));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex11));
      assertTrue(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      
      double double1 = complex5.getImaginary();
      assertEquals(0.0, double1, 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1656.6839272, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5430806348152437, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex18));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex9));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex7));
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = Complex.valueOf(0.0, 1.0);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.ONE.atan();
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex0.INF.multiply(complex2);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.NaN.multiply(0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex1.sqrt1z();
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex5.INF.negate();
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      
      complex5.INF.hashCode();
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.4142135623730951, complex5.getReal(), 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      
      Complex complex7 = complex0.acos();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex0.sqrt1z();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = (Complex)complex8.ZERO.readResolve();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      
      Complex complex10 = complex7.ZERO.multiply((-2912));
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      
      complex10.I.hashCode();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(-0.0, complex10.getImaginary(), 0.01);
      assertEquals(-0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      
      Complex complex11 = complex8.I.createComplex(0.0, 0.0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      
      Complex complex12 = complex7.sqrt1z();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex7);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      
      Complex complex13 = complex7.subtract(1.0);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex12);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex13);
      assertNotSame(complex7, complex8);
      assertNotSame(complex13, complex10);
      assertSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex8);
      assertSame(complex13, complex7);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      
      double double0 = complex3.getArgument();
      assertEquals(0.7853981633974483, double0, 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      
      Complex complex14 = complex1.tanh();
      assertEquals(1.557407724654902, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      
      Complex complex15 = complex8.add(complex4);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex4);
      assertSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex12);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex12);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex13);
      assertSame(complex4, complex15);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex13);
      
      Complex complex16 = complex15.ONE.sqrt1z();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex14));
      assertTrue(complex16.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex15));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex7));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex4);
      assertSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex12);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex8);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex14);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex12);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex13);
      assertSame(complex4, complex15);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex16);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex13);
      
      Complex complex17 = complex4.acos();
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.7853981633974483, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertTrue(complex17.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertTrue(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex11));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertSame(complex3, complex0);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex4);
      assertNotSame(complex17, complex9);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex6);
      assertSame(complex17, complex4);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex7);
      assertSame(complex17, complex13);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex11);
      assertSame(complex17, complex15);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex12);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex17);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex13);
      assertSame(complex4, complex15);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex16);
      assertSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      
      Complex complex18 = Complex.valueOf(616.4227, 0.0);
      assertFalse(complex18.isInfinite());
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(616.4227, complex18.getReal(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex0));
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Complex complex0 = new Complex((-1565.66));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.subtract(0.0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1565.66), complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      List<Complex> list0 = complex1.I.nthRoot(1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1565.66), complex1.getReal(), 0.01);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotNull(list0);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(list0.contains(complex1));
      
      List<Complex> list1 = complex1.INF.nthRoot(96);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1565.66), complex1.getReal(), 0.01);
      assertFalse(list1.isEmpty());
      assertEquals(1, list1.size());
      assertNotNull(list1);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(list1.equals((Object)list0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(list1, list0);
      assertFalse(list1.contains(complex1));
      
      Complex complex2 = complex0.sqrt();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.acos();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-4.371338189053843), complex3.getImaginary(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex3.ONE.createComplex(0.0, 0.0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-4.371338189053843), complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = complex2.multiply((-1565.66));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals((-61950.69520134134), complex5.getImaginary(), 0.01);
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = Complex.valueOf((-1565.66));
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-1565.66), complex6.getReal(), 0.01);
      assertNotNull(complex6);
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      
      ComplexField complexField0 = complex6.I.getField();
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-1565.66), complex6.getReal(), 0.01);
      assertNotNull(complexField0);
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      
      Complex complex7 = complex4.sin();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-4.371338189053843), complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex7.add((-1565.66));
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-4.371338189053843), complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals((-1565.66), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      
      Complex complex9 = complex6.divide(complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-1565.66), complex6.getReal(), 0.01);
      assertEquals(39.56842175270578, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      
      Complex complex10 = complex9.I.pow((double) 96);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals((-1565.66), complex6.getReal(), 0.01);
      assertEquals(39.56842175270578, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex10.isNaN());
      assertEquals(1.0, complex10.getReal(), 0.01);
      assertEquals((-5.878304635907295E-15), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      
      Complex complex11 = complex5.subtract(complex4);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-4.371338189053843), complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-61950.69520134134), complex5.getImaginary(), 0.01);
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(-0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals((-61950.69520134134), complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      
      Complex complex12 = complex1.cosh();
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1565.66), complex1.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      
      Complex complex13 = complex8.add((double) 1);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals((-1564.66), complex13.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1565.66), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(39.56842175270578, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-4.371338189053843), complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals((-1565.66), complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex12));
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex12);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex11);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Complex complex0 = new Complex(2357.344, (-211.054));
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex0);
      
      Complex complex1 = Complex.valueOf((-211.054));
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.multiply(complex1);
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.ZERO.sqrt();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex2.NaN.sqrt1z();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex3.ONE.multiply((-211.054));
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-211.054), complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      
      Complex complex6 = complex5.NaN.acos();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-211.054), complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      
      double double0 = complex1.getReal();
      assertEquals((-211.054), double0, 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex5));
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      
      Complex complex7 = complex1.ZERO.asin();
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertNotNull(complex7);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      
      Complex complex8 = complex7.NaN.sinh();
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex4);
      
      ComplexField complexField0 = complex8.I.getField();
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertNotNull(complexField0);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex4);
      
      Complex complex9 = complex0.negate();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(211.054, complex9.getImaginary(), 0.01);
      assertEquals((-2357.344), complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      
      double double1 = complex0.INF.getArgument();
      assertEquals(0.7853981633974483, double1, 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      
      Complex complex10 = complex0.createComplex((-211.054), (-211.054));
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals((-211.054), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals((-211.054), complex10.getImaginary(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      
      Complex complex11 = (Complex)complex3.readResolve();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex7));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      
      Complex complex12 = complex9.ONE.conjugate();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(211.054, complex9.getImaginary(), 0.01);
      assertEquals((-2357.344), complex9.getReal(), 0.01);
      assertEquals(1.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      
      Complex complex13 = complex0.conjugate();
      assertEquals(211.054, complex13.getImaginary(), 0.01);
      assertEquals(2357.344, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      
      Complex complex14 = complex3.sqrt();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      
      Complex complex15 = complex4.I.divide((-1117.44934));
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-8.948951547101009E-4), complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(-0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex14));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex13);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex14);
      
      complex2.hashCode();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      
      Complex complex16 = complex10.multiply(complex9);
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex16.isInfinite());
      assertEquals(542070.671492, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(452983.08966000006, complex16.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(211.054, complex9.getImaginary(), 0.01);
      assertEquals((-2357.344), complex9.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals((-211.054), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals((-211.054), complex10.getImaginary(), 0.01);
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex13);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex1);
      
      Complex complex17 = complex16.sinh();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex16.isInfinite());
      assertEquals(542070.671492, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(452983.08966000006, complex16.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex17.getImaginary(), 0.01);
      assertTrue(complex17.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(211.054, complex9.getImaginary(), 0.01);
      assertEquals((-2357.344), complex9.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals((-211.054), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals((-211.054), complex10.getImaginary(), 0.01);
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex13);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex13);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex1);
      
      Complex complex18 = complex14.log();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex18.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex18.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertTrue(complex18.isInfinite());
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex10));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex15);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex10);
      
      complex3.ZERO.hashCode();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      
      Complex complex19 = complex4.sinh();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex19.isNaN());
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex16));
      
      Complex complex20 = Complex.valueOf(3212.7);
      assertEquals(0.0, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(3212.7, complex20.getReal(), 0.01);
      assertNotNull(complex20);
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex9));
      
      Complex complex21 = complex14.asin();
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex21.getReal(), 0.01);
      assertEquals(-0.0, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isNaN());
      assertFalse(complex21.isInfinite());
      assertNotNull(complex21);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex19));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex20));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex6));
      assertTrue(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex4));
      assertTrue(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex13));
      assertTrue(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex19));
      
      Complex complex22 = complex1.cosh();
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(-0.0, complex22.getImaginary(), 0.01);
      assertFalse(complex22.isNaN());
      assertEquals(2.2832716690409244E91, complex22.getReal(), 0.01);
      assertFalse(complex22.isInfinite());
      assertNotNull(complex22);
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex4));
      
      Complex complex23 = complex5.divide(complex9);
      assertFalse(complex0.isNaN());
      assertEquals((-211.054), complex0.getImaginary(), 0.01);
      assertEquals(2357.344, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals((-211.054), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-497526.880576), complex2.getReal(), 0.01);
      assertEquals(44543.790916, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals((-211.054), complex5.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(211.054, complex9.getImaginary(), 0.01);
      assertEquals((-2357.344), complex9.getReal(), 0.01);
      assertFalse(complex23.isInfinite());
      assertEquals(0.007951955764752683, complex23.getImaginary(), 0.01);
      assertEquals(0.08881847873200767, complex23.getReal(), 0.01);
      assertFalse(complex23.isNaN());
      assertNotNull(complex23);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex22));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex22));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex20));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex16));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex22));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex17));
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.ZERO.createComplex(626.81477715, 626.81477715);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.createComplex(1941.037360677694, 0.0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1941.037360677694, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.INF.multiply(132);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1941.037360677694, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      ComplexField complexField0 = complex1.INF.getField();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      
      Complex complex4 = complex0.log();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex0);
      
      Complex complex5 = Complex.valueOf(626.81477715, 626.81477715);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex5.NaN.acos();
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex6.I.sqrt1z();
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(1.4142135623730951, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex5.multiply(626.81477715);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(392896.76485360425, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(392896.76485360425, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      
      Complex complex9 = complex5.atan();
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(1.5699986426458836, complex9.getReal(), 0.01);
      assertEquals(7.976834722587131E-4, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      
      List<Complex> list0 = complex4.nthRoot(3632);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertNotNull(list0);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex9);
      assertSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertFalse(list0.contains(complex2));
      assertTrue(list0.contains(complex0));
      
      double double0 = complex0.getArgument();
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      
      Complex complex10 = Complex.valueOf(626.81477715);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(626.81477715, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex10);
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      
      Complex complex11 = complex8.sqrt();
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(392896.76485360425, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(392896.76485360425, complex8.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertEquals(285.2570495315371, complex11.getImaginary(), 0.01);
      assertEquals(688.6714377415707, complex11.getReal(), 0.01);
      assertNotNull(complex11);
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      
      Complex complex12 = (Complex)complex1.readResolve();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(626.81477715, complex12.getImaginary(), 0.01);
      assertEquals(626.81477715, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      
      boolean boolean0 = complex1.equals(complex12);
      assertTrue(boolean0);
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(626.81477715, complex12.getImaginary(), 0.01);
      assertEquals(626.81477715, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      
      Complex complex13 = complex9.divide(785.5902897);
      assertEquals(0.001998495479425328, complex13.getReal(), 0.01);
      assertEquals(1.0153937525925013E-6, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertFalse(complex13.isNaN());
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(626.81477715, complex5.getReal(), 0.01);
      assertEquals(626.81477715, complex5.getImaginary(), 0.01);
      assertEquals(1.5699986426458836, complex9.getReal(), 0.01);
      assertEquals(7.976834722587131E-4, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      
      Complex complex14 = complex10.divide(0.0);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(626.81477715, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertSame(complex14, complex4);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertSame(complex14, complex0);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      
      Complex complex15 = complex1.tan();
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex0.isNaN());
      assertEquals(626.81477715, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(626.81477715, complex1.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(1.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = Complex.ZERO;
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.add(0.0);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex1.sqrt();
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.INF.cosh();
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.INF.multiply(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex3.INF.acos();
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex4));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex2);
      
      Complex complex7 = complex1.atan();
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex6.INF.cos();
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex4));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      
      Complex complex9 = complex0.add(complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      
      Complex complex10 = complex0.acos();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals((-0.8813735870195429), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      
      Complex complex11 = complex0.cosh();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getImaginary(), 0.01);
      assertEquals(0.5403023058681398, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      
      try { 
        complex11.nthRoot((-1137));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -1,137
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Complex complex0 = new Complex((-2410.845429), (-2410.845429));
      assertFalse(complex0.isInfinite());
      assertEquals((-2410.845429), complex0.getReal(), 0.01);
      assertEquals((-2410.845429), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.sin();
      assertFalse(complex0.isInfinite());
      assertEquals((-2410.845429), complex0.getReal(), 0.01);
      assertEquals((-2410.845429), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.atan();
      assertFalse(complex0.isInfinite());
      assertEquals((-2410.845429), complex0.getReal(), 0.01);
      assertEquals((-2410.845429), complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1.570588930663928), complex2.getReal(), 0.01);
      assertEquals((-2.073961190741286E-4), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      try { 
        complex2.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      double double0 = 256.5146732;
      Complex complex0 = new Complex(256.5146732);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(256.5146732, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = new Complex((-409.3968));
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-409.3968), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      
      Complex complex2 = complex1.ONE.conjugate();
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-409.3968), complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertNotNull(complex2);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      double double1 = 2908.79224435;
      try { 
        complex0.ZERO.nthRoot((-3442));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -3,442
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      complex0.hashCode();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.sqrt();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertNotNull(complex1);
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.ONE.sqrt();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex0.createComplex(0.0, 0.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertNotNull(complex3);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      complex0.ZERO.hashCode();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      
      Complex complex4 = complex0.log();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertNotNull(complex4);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = (Complex)complex3.readResolve();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex0.asin();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      try { 
        complex0.nthRoot((-2436));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -2,436
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Complex complex0 = new Complex(0.0, 2.3984878190403553E-145);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.INF.cosh();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.cos();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex1.ONE.log();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex0.INF.createComplex(981.2, 0.0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(981.2, complex4.getReal(), 0.01);
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex0.NaN.createComplex(0.0, 0.0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      
      complex5.ONE.hashCode();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      
      Complex complex6 = complex0.subtract(2.3984878190403553E-145);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals((-2.3984878190403553E-145), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(2.3984878190403553E-145, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      
      Complex complex7 = Complex.valueOf(1.0);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.0, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex4.tan();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(981.2, complex4.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(1.6394761586907602, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      
      double double0 = complex0.getArgument();
      assertEquals(1.5707963267948966, double0, 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      
      boolean boolean0 = complex6.equals(complex4);
      assertFalse(boolean0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(981.2, complex4.getReal(), 0.01);
      assertEquals((-2.3984878190403553E-145), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(2.3984878190403553E-145, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      
      Complex complex9 = Complex.valueOf(4.410412409109416E-9);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(4.410412409109416E-9, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertNotNull(complex9);
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      
      Complex complex10 = complex9.I.conjugate();
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(4.410412409109416E-9, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-1.0), complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertNotNull(complex10);
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      
      Complex complex11 = complex10.I.log();
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(4.410412409109416E-9, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-1.0), complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      
      Complex complex12 = complex4.exp();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(981.2, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex12.getReal(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex2));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      
      Complex complex13 = complex1.log();
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertNotNull(complex13);
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex4));
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex1);
      assertSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      
      Complex complex14 = complex0.exp();
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2.3984878190403553E-145, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(1.0, complex14.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex1));
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      
      Complex complex15 = complex10.exp();
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(0.5403023058681398, complex15.getReal(), 0.01);
      assertEquals((-0.8414709848078965), complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(4.410412409109416E-9, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-1.0), complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex12);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      
      Complex complex16 = complex11.sinh();
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertEquals(1.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(4.410412409109416E-9, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-1.0), complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex16);
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex4));
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex16);
      
      Complex complex17 = complex6.divide(complex3);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getReal(), 0.01);
      assertEquals(Double.NaN, complex17.getImaginary(), 0.01);
      assertTrue(complex17.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals((-2.3984878190403553E-145), complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(2.3984878190403553E-145, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertNotNull(complex17);
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertTrue(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex3));
      assertTrue(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex1);
      assertSame(complex17, complex2);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex14);
      assertSame(complex17, complex13);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex15);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex9);
      
      double double1 = complex0.getReal();
      assertEquals(0.0, double1, 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(2.3984878190403553E-145, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      
      String string0 = complex9.toString();
      assertEquals("(4.410412409109416E-9, 0.0)", string0);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(4.410412409109416E-9, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertNotNull(string0);
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex17));
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex17);
      
      Complex complex18 = complex11.tanh();
      assertEquals(Double.POSITIVE_INFINITY, complex18.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(4.410412409109416E-9, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-1.0), complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(1.5707963267948966, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex18);
      assertFalse(complex18.equals((Object)complex6));
      assertTrue(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex8));
      assertTrue(complex18.equals((Object)complex12));
      assertTrue(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex9));
      assertTrue(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex17));
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex17);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex17);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-850.226608354264));
      assertFalse(complex0.isInfinite());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.asin();
      assertFalse(complex0.isInfinite());
      assertEquals((-850.226608354264), complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(7.4386497465985775, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1.5707963267948966), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2863.0434413056));
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertNotNull(complex0);
      
      Complex complex1 = complex0.cosh();
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = Complex.valueOf((-2863.0434413056));
      assertEquals((-2863.0434413056), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.INF.exp();
      assertEquals((-2863.0434413056), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = complex3.pow(0.3554046154022217);
      assertEquals((-2863.0434413056), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      
      complex0.ONE.hashCode();
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      
      Complex complex5 = complex0.sqrt();
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(53.50741482547629, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      
      double double0 = complex5.ONE.getArgument();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(53.50741482547629, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      
      Complex complex6 = complex5.cosh();
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(53.50741482547629, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals((-0.9949701930097912), complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex6.I.subtract(complex5);
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(53.50741482547629, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals((-0.9949701930097912), complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals((-52.50741482547629), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      
      Complex complex8 = complex0.multiply(2);
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertEquals((-5726.0868826112), complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      
      Complex complex9 = complex1.createComplex((-1713.352212997939), 0.0);
      assertEquals((-2863.0434413056), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals((-1713.352212997939), complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Complex complex0 = Complex.valueOf(20.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.NaN.cosh();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.reciprocal();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      
      Complex complex3 = complex0.INF.negate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex3.NaN.negate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex2);
      
      Complex complex5 = complex1.tan();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex4);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex1);
      assertSame(complex5, complex4);
      
      Complex complex6 = complex4.multiply(20.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertSame(complex4, complex5);
      assertSame(complex4, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertSame(complex6, complex5);
      assertSame(complex6, complex1);
      
      ComplexField complexField0 = complex3.I.getField();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      
      Complex complex7 = complex3.tanh();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertSame(complex7, complex5);
      assertSame(complex7, complex6);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex4);
      assertSame(complex7, complex2);
      
      Complex complex8 = complex1.I.atan();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertSame(complex1, complex4);
      assertSame(complex8, complex1);
      assertSame(complex8, complex4);
      assertSame(complex8, complex5);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex2);
      assertSame(complex8, complex7);
      
      Complex complex9 = complex3.ZERO.add(complex1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertSame(complex1, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex1);
      assertSame(complex9, complex4);
      assertSame(complex9, complex6);
      assertSame(complex9, complex5);
      assertSame(complex9, complex2);
      
      Complex complex10 = complex8.NaN.divide(0.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertSame(complex1, complex4);
      assertSame(complex1, complex10);
      assertSame(complex8, complex1);
      assertSame(complex8, complex4);
      assertSame(complex8, complex5);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex2);
      assertSame(complex8, complex10);
      assertSame(complex8, complex7);
      assertSame(complex8, complex9);
      assertSame(complex10, complex2);
      assertSame(complex10, complex5);
      assertSame(complex10, complex7);
      assertSame(complex10, complex4);
      assertSame(complex10, complex8);
      assertSame(complex10, complex9);
      assertSame(complex10, complex1);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      
      double double0 = complex0.getImaginary();
      assertEquals(0.0, double0, 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      
      complex0.ONE.hashCode();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      
      Complex complex11 = complex0.I.multiply(6.283185307179586);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertEquals(6.283185307179586, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      
      Complex complex12 = complex2.I.sin();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.1752011936438014, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertSame(complex2, complex8);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex1);
      assertSame(complex2, complex10);
      assertSame(complex2, complex5);
      assertSame(complex2, complex6);
      assertSame(complex2, complex9);
      assertSame(complex2, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      
      boolean boolean0 = complex0.isInfinite();
      assertFalse(boolean0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      
      ComplexField complexField1 = complex1.getField();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertNotNull(complexField1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertSame(complexField1, complexField0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      
      Complex complex13 = complex1.conjugate();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertNotSame(complex13, complex12);
      assertSame(complex13, complex10);
      assertSame(complex13, complex1);
      assertSame(complex13, complex4);
      assertNotSame(complex13, complex3);
      assertSame(complex13, complex9);
      assertSame(complex13, complex8);
      assertSame(complex13, complex6);
      assertSame(complex13, complex7);
      assertNotSame(complex13, complex11);
      assertSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex2);
      
      Complex complex14 = complex3.multiply(20.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex14.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertNotNull(complex14);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      
      Complex complex15 = complex1.pow(0.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertSame(complex1, complex15);
      assertSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertSame(complex15, complex2);
      assertSame(complex15, complex5);
      assertSame(complex15, complex1);
      assertNotSame(complex15, complex3);
      assertSame(complex15, complex8);
      assertSame(complex15, complex10);
      assertNotSame(complex15, complex12);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex6);
      assertSame(complex15, complex13);
      
      Complex complex16 = complex1.cosh();
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertTrue(complex16.isNaN());
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex3));
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertSame(complex1, complex16);
      assertSame(complex1, complex15);
      assertNotSame(complex16, complex12);
      assertSame(complex16, complex7);
      assertNotSame(complex16, complex11);
      assertSame(complex16, complex1);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex3);
      assertSame(complex16, complex8);
      assertSame(complex16, complex10);
      assertSame(complex16, complex9);
      assertSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertSame(complex16, complex2);
      assertSame(complex16, complex4);
      assertNotSame(complex16, complex14);
      assertSame(complex16, complex6);
      assertSame(complex16, complex13);
      
      boolean boolean1 = complex6.equals(complex2);
      assertTrue(boolean1);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(boolean1 == boolean0);
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex12));
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertSame(complex1, complex16);
      assertSame(complex1, complex15);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex1);
      assertSame(complex2, complex16);
      assertSame(complex2, complex10);
      assertSame(complex2, complex5);
      assertSame(complex2, complex6);
      assertSame(complex2, complex9);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex15);
      assertSame(complex2, complex13);
      assertSame(complex2, complex4);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex6);
      assertSame(complex4, complex13);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex11);
      assertSame(complex4, complex16);
      assertSame(complex4, complex10);
      assertSame(complex4, complex1);
      assertSame(complex4, complex5);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex12);
      assertSame(complex4, complex15);
      assertSame(complex4, complex7);
      assertSame(complex4, complex8);
      assertSame(complex4, complex9);
      assertSame(complex6, complex8);
      assertSame(complex6, complex15);
      assertNotSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertSame(complex6, complex2);
      assertSame(complex6, complex9);
      assertSame(complex6, complex10);
      assertSame(complex6, complex1);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex16);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertSame(complex6, complex7);
      assertSame(complex6, complex5);
      assertSame(complex6, complex13);
      
      Complex complex17 = new Complex(0.0, 1.7482123374938965);
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(1.7482123374938965, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertNotNull(complex17);
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      
      Complex complex18 = complex5.divide(complex17);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(1.7482123374938965, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertNotNull(complex18);
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex11));
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertSame(complex1, complex16);
      assertSame(complex1, complex15);
      assertSame(complex5, complex8);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex6);
      assertSame(complex5, complex13);
      assertSame(complex5, complex4);
      assertSame(complex5, complex10);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex11);
      assertSame(complex5, complex18);
      assertSame(complex5, complex1);
      assertSame(complex5, complex9);
      assertSame(complex5, complex15);
      assertSame(complex5, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex14);
      assertSame(complex18, complex4);
      assertSame(complex18, complex15);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex12);
      assertSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex17);
      assertSame(complex18, complex1);
      assertSame(complex18, complex16);
      assertNotSame(complex18, complex14);
      assertSame(complex18, complex7);
      assertSame(complex18, complex9);
      assertNotSame(complex18, complex0);
      assertSame(complex18, complex2);
      assertSame(complex18, complex5);
      assertNotSame(complex18, complex11);
      assertSame(complex18, complex13);
      assertSame(complex18, complex6);
      
      Complex complex19 = complex12.divide(20.0);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertFalse(complex19.isNaN());
      assertEquals(0.0, complex19.getReal(), 0.01);
      assertEquals(0.05876005968219007, complex19.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.1752011936438014, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertNotNull(complex19);
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex7));
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertSame(complex1, complex16);
      assertSame(complex1, complex15);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex18);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex1);
      assertSame(complex2, complex16);
      assertSame(complex2, complex10);
      assertSame(complex2, complex5);
      assertSame(complex2, complex6);
      assertSame(complex2, complex9);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex15);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex19);
      assertSame(complex2, complex4);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      
      double double1 = complex1.getImaginary();
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(20.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex12));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex5);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex4);
      assertSame(complex1, complex6);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex10);
      assertSame(complex1, complex16);
      assertSame(complex1, complex15);
      
      Complex complex20 = Complex.valueOf(Double.NaN);
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertTrue(complex20.isNaN());
      assertNotNull(complex20);
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex3));
      assertSame(complex20, complex2);
      assertNotSame(complex20, complex0);
      assertSame(complex20, complex8);
      assertSame(complex20, complex9);
      assertSame(complex20, complex5);
      assertNotSame(complex20, complex17);
      assertSame(complex20, complex15);
      assertNotSame(complex20, complex19);
      assertSame(complex20, complex1);
      assertSame(complex20, complex16);
      assertNotSame(complex20, complex3);
      assertSame(complex20, complex10);
      assertSame(complex20, complex18);
      assertSame(complex20, complex7);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex11);
      assertSame(complex20, complex4);
      assertSame(complex20, complex6);
      assertSame(complex20, complex13);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 0.0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.add((-2149.7835));
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-2149.7835), complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Complex complex0 = new Complex(6.283185307179586, 0.0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.INF.cos();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      ComplexField complexField0 = complex0.getField();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertNotNull(complexField0);
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      
      double double0 = complex0.abs();
      assertEquals(6.283185307179586, double0, 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      
      Complex complex2 = complex0.INF.subtract(complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.ZERO.log();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = Complex.valueOf(0.0);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(complex4);
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      
      double double1 = complex1.getArgument();
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      
      Complex complex5 = (Complex)complex2.ONE.readResolve();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(1.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      
      Complex complex6 = complex0.multiply(215.4735653);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1353.860339578561, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      
      boolean boolean0 = complex0.isNaN();
      assertFalse(boolean0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      
      Complex complex7 = (Complex)complex0.readResolve();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(6.283185307179586, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      
      Complex complex8 = complex3.pow(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      
      String string0 = complex4.toString();
      assertEquals("(0.0, 0.0)", string0);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(string0);
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      
      Complex complex9 = complex6.sqrt();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1353.860339578561, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(36.79484120876948, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      
      String string1 = complex4.toString();
      assertEquals("(0.0, 0.0)", string1);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertNotNull(string1);
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(string1.equals((Object)string0));
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      
      Complex complex10 = complex9.pow(complex6);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1353.860339578561, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(36.79484120876948, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      
      Complex complex11 = Complex.valueOf(6.283185307179586, 6.283185307179586);
      assertEquals(6.283185307179586, complex11.getReal(), 0.01);
      assertEquals(6.283185307179586, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
      assertNotNull(complex11);
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      
      Complex complex12 = complex9.ONE.sqrt1z();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1353.860339578561, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(36.79484120876948, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      
      Complex complex13 = complex9.sqrt();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(6.065875139563086, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1353.860339578561, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(36.79484120876948, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      
      Complex complex14 = complex13.INF.pow(6.283185307179586);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(6.065875139563086, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1353.860339578561, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(36.79484120876948, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      
      Complex complex15 = complex0.exp();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(535.4916555247646, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      
      String string2 = complex1.toString();
      assertEquals("(NaN, NaN)", string2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertNotNull(string2);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      
      Complex complex16 = complex3.acos();
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertTrue(complex16.isNaN());
      assertNotNull(complex16);
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex12));
      assertTrue(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertTrue(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex3));
      assertTrue(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex14));
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex8);
      assertSame(complex2, complex16);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex3);
      assertSame(complex16, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex13);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = complex14.equals(object0);
      assertFalse(boolean1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(6.283185307179586, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(6.065875139563086, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(1353.860339578561, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(36.79484120876948, complex9.getReal(), 0.01);
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex7));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex9));
      assertTrue(complex14.equals((Object)complex2));
      assertTrue(boolean1 == boolean0);
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex15);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex15);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertNotNull(complex0);
      
      Complex complex1 = complex0.asin();
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertNotNull(complex1);
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex1.negate();
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertNotNull(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      
      Complex complex3 = complex1.subtract(1.0);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertNotNull(complex3);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertSame(complex3, complex2);
      
      Complex complex4 = complex0.asin();
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertNotNull(complex4);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex2);
      assertSame(complex4, complex1);
      
      Complex complex5 = complex2.NaN.sinh();
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertNotNull(complex5);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex1);
      assertSame(complex5, complex3);
      
      Complex complex6 = Complex.valueOf(2886.555536522023);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(2886.555536522023, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertNotNull(complex6);
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex1.sqrt();
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertNotNull(complex7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertSame(complex7, complex3);
      
      double double0 = complex2.INF.abs();
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      
      Complex complex8 = complex5.pow(complex0);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertNotNull(complex8);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex1);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertSame(complex5, complex3);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex2);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      
      Complex complex9 = (Complex)complex8.readResolve();
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertNotNull(complex9);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex4));
      assertTrue(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertSame(complex2, complex1);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex1);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex9);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex2);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      
      Complex complex10 = complex8.ONE.add(1257.644986222);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(1258.644986222, complex10.getReal(), 0.01);
      assertNotNull(complex10);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertSame(complex2, complex1);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex5, complex10);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex1);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex9);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex2);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      
      Complex complex11 = complex8.I.multiply(complex5);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertNotNull(complex11);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex9));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex11);
      assertSame(complex2, complex11);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertSame(complex2, complex1);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex5, complex10);
      assertSame(complex5, complex11);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex1);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex9);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex2);
      assertSame(complex8, complex11);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertSame(complex11, complex4);
      assertSame(complex11, complex7);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex5);
      assertSame(complex11, complex2);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex1);
      
      Complex complex12 = (Complex)complex11.readResolve();
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertNotNull(complex12);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertTrue(complex11.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex7));
      assertTrue(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertTrue(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex5);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex2, complex11);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex7);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertSame(complex2, complex1);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex1);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex8, complex9);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertSame(complex8, complex2);
      assertSame(complex8, complex11);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertSame(complex11, complex4);
      assertSame(complex11, complex7);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex5);
      assertSame(complex11, complex2);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex1);
      
      Complex complex13 = complex1.sqrt1z();
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertNotNull(complex13);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex13, complex1);
      assertSame(complex13, complex7);
      assertSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertSame(complex13, complex4);
      assertSame(complex13, complex3);
      assertSame(complex13, complex8);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex2);
      
      double double1 = complex8.abs();
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex12));
      assertTrue(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex9));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex2, complex7);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex11);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertSame(complex5, complex13);
      assertSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertSame(complex5, complex1);
      assertSame(complex5, complex3);
      assertNotSame(complex8, complex9);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex13);
      assertSame(complex8, complex2);
      assertSame(complex8, complex11);
      assertSame(complex8, complex7);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      
      Complex complex14 = complex13.I.acos();
      assertFalse(complex14.isInfinite());
      assertEquals((-0.8813735870195429), complex14.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertNotNull(complex14);
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex13, complex1);
      assertSame(complex13, complex7);
      assertSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertSame(complex13, complex4);
      assertSame(complex13, complex3);
      assertSame(complex13, complex8);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex2);
      
      double double2 = complex13.getReal();
      assertEquals(Double.NaN, double2, 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex0));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex13, complex1);
      assertSame(complex13, complex7);
      assertSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertSame(complex13, complex4);
      assertSame(complex13, complex3);
      assertSame(complex13, complex8);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex2);
      
      boolean boolean0 = complex0.isNaN();
      assertFalse(boolean0);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = complex13.equals(object0);
      assertFalse(boolean1);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(boolean1 == boolean0);
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex0));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex13, complex1);
      assertSame(complex13, complex7);
      assertSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertSame(complex13, complex4);
      assertSame(complex13, complex3);
      assertSame(complex13, complex8);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex2);
      
      double double3 = complex8.getArgument();
      assertEquals(Double.NaN, double3, 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertEquals(double3, double2, 0.01);
      assertEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex14));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex7);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex11);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex14);
      assertSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertSame(complex5, complex1);
      assertSame(complex5, complex3);
      assertNotSame(complex8, complex9);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex14);
      assertSame(complex8, complex13);
      assertSame(complex8, complex2);
      assertSame(complex8, complex11);
      assertSame(complex8, complex7);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      
      Complex complex15 = complex8.subtract(3003.7404);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertNotNull(complex15);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex14));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex15);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex7);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex11);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex14);
      assertSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertSame(complex5, complex15);
      assertSame(complex5, complex1);
      assertSame(complex5, complex3);
      assertSame(complex15, complex4);
      assertSame(complex15, complex11);
      assertSame(complex15, complex3);
      assertNotSame(complex15, complex12);
      assertSame(complex15, complex8);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex14);
      assertSame(complex15, complex7);
      assertSame(complex15, complex13);
      assertSame(complex15, complex5);
      assertNotSame(complex15, complex0);
      assertSame(complex15, complex2);
      assertSame(complex15, complex1);
      assertNotSame(complex8, complex9);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex14);
      assertSame(complex8, complex13);
      assertSame(complex8, complex2);
      assertSame(complex8, complex11);
      assertSame(complex8, complex7);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertSame(complex8, complex15);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      
      double double4 = complex14.abs();
      assertEquals(1.8011719796199461, double4, 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals((-0.8813735870195429), complex14.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertNotEquals(double4, double3, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex6));
      assertTrue(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex0));
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex15);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertSame(complex13, complex1);
      assertSame(complex13, complex7);
      assertSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertSame(complex13, complex4);
      assertSame(complex13, complex15);
      assertSame(complex13, complex3);
      assertSame(complex13, complex8);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex2);
      
      boolean boolean2 = complex5.isInfinite();
      assertFalse(boolean2);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertTrue(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex15);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex7);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex11);
      assertSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex3);
      assertSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertSame(complex5, complex13);
      assertNotSame(complex5, complex14);
      assertSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertSame(complex5, complex4);
      assertSame(complex5, complex2);
      assertSame(complex5, complex15);
      assertSame(complex5, complex1);
      assertSame(complex5, complex3);
      
      double double5 = complex7.getArgument();
      assertEquals(Double.NaN, double5, 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex10));
      assertTrue(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex14));
      assertNotEquals(double5, double0, 0.01);
      assertEquals(double5, double3, 0.01);
      assertEquals(double5, double1, 0.01);
      assertEquals(double5, double2, 0.01);
      assertNotEquals(double5, double4, 0.01);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex7);
      assertSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex8);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex12);
      assertSame(complex1, complex15);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex5);
      assertSame(complex7, complex3);
      assertSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex8);
      assertSame(complex7, complex15);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex14);
      assertSame(complex7, complex13);
      assertSame(complex7, complex2);
      assertSame(complex7, complex11);
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.multiply(37);
      Complex complex2 = complex0.INF.sinh();
      Complex complex3 = complex2.I.subtract(complex1);
      complex3.INF.atan();
      complex1.ONE.getArgument();
      complex0.isInfinite();
      Object object0 = complex0.readResolve();
      complex0.getField();
      Complex complex4 = Complex.valueOf(0.0);
      complex4.ONE.conjugate();
      Complex complex5 = complex1.acos();
      assertEquals((-4.304247658249556), complex5.getImaginary(), 0.01);
      
      Complex complex6 = Complex.valueOf(0.0);
      complex6.getField();
      complex1.getField();
      complex6.hashCode();
      List<Complex> list0 = complex0.ZERO.nthRoot(37);
      assertTrue(list0.contains(complex4));
      assertEquals(37, list0.size());
      
      Complex complex7 = complex1.sin();
      Complex complex8 = complex7.ZERO.log();
      Complex complex9 = complex4.cos();
      complex7.equals(object0);
      Complex complex10 = complex9.ZERO.tanh();
      complex0.isNaN();
      complex6.getImaginary();
      complex4.isInfinite();
      Complex complex11 = complex4.conjugate();
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      
      complex9.getReal();
      complex9.add((double) 37);
      Complex complex12 = complex8.asin();
      complex12.getField();
      assertTrue(complex8.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      
      complex4.createComplex(0.0, (-982.94810159));
      Complex complex13 = complex10.multiply(0.0);
      assertTrue(complex13.equals((Object)complex10));
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      
      complex1.subtract(0.0);
      Complex complex14 = complex1.sqrt1z();
      assertEquals(37.013511046643494, complex14.getReal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1396.5766));
      complex0.getArgument();
      complex0.INF.sqrt();
      complex0.ZERO.getField();
      Complex complex1 = complex0.sinh();
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.INF.pow(0.0);
      assertTrue(complex2.equals((Object)complex1));
      
      Complex complex3 = complex0.sqrt1z();
      Complex complex4 = complex3.atan();
      double double0 = complex4.I.abs();
      assertEquals(1.0, double0, 0.01);
      
      Complex complex5 = complex4.ONE.negate();
      assertEquals((-1.0), complex5.getReal(), 0.01);
      
      Complex complex6 = complex4.sqrt();
      assertEquals(2.8565740002392846E-4, complex6.getReal(), 0.01);
  }
}
