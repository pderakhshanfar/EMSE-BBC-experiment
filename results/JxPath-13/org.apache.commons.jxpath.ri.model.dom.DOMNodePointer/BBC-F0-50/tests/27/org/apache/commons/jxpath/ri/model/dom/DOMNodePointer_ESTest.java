/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 18 04:44:59 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLAreaElementImpl;
import org.apache.html.dom.HTMLBodyElementImpl;
import org.apache.html.dom.HTMLDirectoryElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFrameElementImpl;
import org.apache.html.dom.HTMLFrameSetElementImpl;
import org.apache.html.dom.HTMLHRElementImpl;
import org.apache.html.dom.HTMLHeadElementImpl;
import org.apache.html.dom.HTMLInputElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLLinkElementImpl;
import org.apache.html.dom.HTMLObjectElementImpl;
import org.apache.html.dom.HTMLPreElementImpl;
import org.apache.html.dom.HTMLSelectElementImpl;
import org.apache.html.dom.HTMLTableCaptionElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.wml.dom.WMLCardElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLGoElementImpl;
import org.apache.wml.dom.WMLNoopElementImpl;
import org.apache.wml.dom.WMLPrevElementImpl;
import org.apache.wml.dom.WMLWmlElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.NotationImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, (Locale) null, "X^r@*PvD\"yQo[");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLElement0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("org.apache.wml.dom.WMLTdElementImpl", "M,&aY9eq");
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "M,&aY9eq");
      Locale locale0 = Locale.CHINA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLLegendElementImpl0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      int int0 = nodePointer0.compareChildNodePointers(dOMNodePointer0, nodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "9{2{&", "Cannot remove root DOM node", "fo,oCF%|p^W~");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "9{2{&");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, "&apos;");
      assertFalse(nullPointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "FK{;L)6");
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "FK{;L)6", "FK{;L)6");
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLBodyElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/processing-instruction('FK{;L)6')[1]/FK{;L)6[1]", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getLinks();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.FRANCE;
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 375, 3);
      dOMNodePointer0.setValue(byteArrayInputStream0);
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = new Locale(" TB*#a64");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      assertNull(qName0.getName());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      NodeIterator nodeIterator0 = dOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = new Locale("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "M,&aY9eq");
      boolean boolean0 = dOMNodePointer0.isLanguage("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, ":");
      String string0 = DOMNodePointer.getPrefix(hTMLInputElementImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("e-", "l.");
      String string0 = DOMNodePointer.getNamespaceURI((Node) element0);
      assertEquals("e-", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("_jm", "_jm", "],?7zy?E'O,KriQ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "_jm");
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("_jm", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("/<aQ+uw<1bG", "org.apache.html.dom.HTMLDirectoryElementImpl");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "[");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLNoopElementImpl wMLNoopElementImpl0 = new WMLNoopElementImpl(wMLDocumentImpl0, "[");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, wMLNoopElementImpl0, (Locale) null);
      Element element0 = wMLDocumentImpl0.createElementNS("", "[", "org.apache.xerces.dom.ElementDefinitionImpl@0000000002");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.forLanguageTag("=ljyZ(lQ{Z\"<R|\"D");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      QName qName0 = new QName("1Yb^&e^hV^yFb?i", "1Yb^&e^hV^yFb?i");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "J.", "J.", "J.");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPrevElementImpl wMLPrevElementImpl0 = new WMLPrevElementImpl(wMLDocumentImpl0, "J.");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPrevElementImpl0, locale0, "`,d^zL@irg+B");
      Object object0 = dOMNodePointer0.getBaseValue();
      assertSame(wMLPrevElementImpl0, object0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl0, "T&E1Q:RcR");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      QName qName0 = new QName("MFpaY9ey", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "MFpaY9ey");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("MFpaY9ey");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      Locale locale0 = jXPathContext0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator(nodeNameTest0, false, nodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = new Locale("", "HEAD");
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, ">");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBodyElementImpl0, locale0, "I_7Vf?{xs`M|@0e?");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "FjfY2mC8j\u0004PT");
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("Hp");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(91);
      // Undeclared exception!
      try { 
        dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "HEAD");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBodyElementImpl0, locale0);
      QName qName0 = new QName(":)BYYCJY$1", "HEAD");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: :)BYYCJY$1:HEAD
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      QName qName0 = new QName("2J. &");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "2J. &");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLBodyElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '2J. &'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(pSVIDocumentImpl0, "xt+F-i5-");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(locale0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "");
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "");
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLeaf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("\"0<Kf(");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, (Locale) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLanguage("\"0<Kf(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "1>[:8?S");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.setDeferredAttribute(1, "[E|y86 _xU;", "[E|y86 _xU;", "[E|y86 _xU;", false, false, (Object) "[E|y86 _xU;");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getValue();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // type: 20
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.setDeferredAttribute(1, "[E|y86 _xU;", "[E|y86 _xU;", "[E|y86 _xU;", true, true, (Object) "[E|y86 _xU;");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.DeferredDocumentImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HTMLFrameSetElementImpl hTMLFrameSetElementImpl0 = new HTMLFrameSetElementImpl((HTMLDocumentImpl) null, "\"substring\"");
      // Undeclared exception!
      try { 
        DOMNodePointer.getPrefix(hTMLFrameSetElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getPointerByID((JXPathContext) null, "3SE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) pSVIDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "_w.!fj (SENDREFERER)", "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) processingInstructionImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.ProcessingInstructionImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("color");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = new Locale("forua", "forua");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("forua");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "pFx3[rD");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.setDeferredAttribute(1, "[E|y86 _xU;", "[E|y86 _xU;", "[E|y86 _xU;", false, false, (Object) "[E|y86 _xU;");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "&quot;");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // type: 20
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "\f");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.TextImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "Z:`ox6S6AZ{Zt5y-");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        DOMNodePointer.getLocalName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1732));
      QName qName0 = new QName("LQ.KaVa");
      Locale locale0 = Locale.ROOT;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, nodeTypeTest0, locale0);
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl((HTMLDocumentImpl) null, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLHeadElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getLanguage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      hTMLDocumentImpl0.setReadOnly(true, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = new Locale(" TB*#a64");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "org.apache.commos.jxpath.ri.model.dom.DOMNodePointer");
      // Undeclared exception!
      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLPreElementImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLObjectElementImpl hTMLObjectElementImpl0 = new HTMLObjectElementImpl(hTMLDocumentImpl0, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLObjectElementImpl0, (Locale) null, "WNwpjvYQ<EZ+WH|L@?M");
      QName qName0 = new QName("')");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, (-1479), (Object) "WNwpjvYQ<EZ+WH|L@?M");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "fK{;l)M6");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "{iXb'E8Vn>w");
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, dOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: FK{;L)M6
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      QName qName0 = new QName("CANNOT REMOVE ROOT DOM NODE", "^sUqs#24-bTGx");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "id('");
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLAreaElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'CANNOT REMOVE ROOT DOM NODE:^sUqs#24-bTGx'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("org.apache.wml.dom.WMLTdElementImpl", "M,&aY9eq");
      Locale locale0 = Locale.CHINA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.QName cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "3K8C'gm2NXjuJLO");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBodyElementImpl0, locale0, "3K8C'gm2NXjuJLO");
      QName qName0 = new QName("<<unknown namespace>>", "3K8C'gm2NXjuJLO");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, ">L:*D2e+G");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, nodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: <<unknown namespace>>:3K8C'gm2NXjuJLO
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "forua");
      QName qName0 = new QName((String) null, "ZisQ<");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLinkElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'ZisQ<'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.forLanguageTag("=ljyZ(lQ{Z\"<R|\"D");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, dOMNodePointer0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, false, nodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.model.dom.DOMNodePointer cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      QName qName0 = new QName("f,VIi", "");
      // Undeclared exception!
      try { 
        dOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Gs R`Hy'b>(`,#WQHD7", "Gs R`Hy'b>(`,#WQHD7");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      variablePointer0.setIndex((-2527));
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.asPath();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Gs R`Hy'b>(`,#WQHD7:Gs R`Hy'b>(`,#WQHD7'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLBodyElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "[");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("", "[", "org.apache.xerces.dom.ElementDefinitionImpl@0000000002");
      String string0 = DOMNodePointer.getNamespaceURI((Node) element0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLPreElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getLocalName(hTMLHRElementImpl0);
      assertEquals("//WWW.W3.ORG/XML/1998/NAMESPACE", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "FK{;L)6", "");
      String string0 = DOMNodePointer.getLocalName(pSVIAttrNSImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "n7> /Z[l^");
      String string0 = DOMNodePointer.getLocalName(hTMLInputElementImpl0);
      assertEquals("N7> /Z[L^", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      String string0 = DOMNodePointer.getPrefix(deferredDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getPrefix(hTMLLinkElementImpl0);
      assertEquals("HTTP", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "");
      Locale locale0 = new Locale("kp1/H X#<u}", "3SE");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLGoElementImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      QName qName0 = new QName("^sUqs#24-bTGx", "^sUqs#24-bTGx");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("null()", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("MFpaY9ey");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      Locale locale0 = jXPathContext0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, (String) null);
      QName qName0 = new QName((String) null, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl((HTMLDocumentImpl) null, "'");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "'");
      QName qName0 = new QName("2", "M=ESv$hGf5~1t[");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, (-1983856549));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "xmlns");
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      String string0 = dOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(deferredDocumentImpl0, "@WST!nJ&dpPF");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1732));
      boolean boolean0 = DOMNodePointer.testNode((Node) entityReferenceImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(pSVIDocumentImpl0);
      QName qName0 = new QName("7kVU^/xIjQPSs");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "jxpath.properties");
      boolean boolean0 = DOMNodePointer.testNode((Node) documentFragmentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "M,&aY9eq");
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(hTMLPreElementImpl0, object0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.forLanguageTag("=ljyZ(lQ{Z\"<R|\"D");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = new QName("*r3A>v>Q,~37");
      NodeIterator nodeIterator0 = dOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Object object0 = dOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "@(#) $RCSfile: Comment.java,v $ $Revision: 1.32 $ $Date: 2004/02/11 21:12:43 $ $Name: jdom_1_0 $");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "http://www.w3.org/2000/xmlns/");
      int int0 = dOMNodePointer2.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "comment");
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "http-equiv");
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, (Locale) null, "X^r@*PvD\"yQo[");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLElement0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      int int0 = dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("forua");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer1 = (DOMNodePointer)dOMNodePointer0.getPointerByID(jXPathContext0, "");
      assertTrue(dOMNodePointer1.isActual());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "z2r{y^R\"7uj");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLSelectElementImpl0, (Locale) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, "z2r{y^R\"7uj");
      assertTrue(nullPointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      DocumentImpl documentImpl0 = new DocumentImpl((DocumentType) null);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "http://www.w3.org/2000/xmlns/", "k')qXF\"0W\"6");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "<<unknown namespace>>");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("k')qXF\"0W\"6", object0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, (String) null, (String) null);
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, (String) null);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("&qsNuot;");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0, "&qsNuot;");
      comment0.setData((String) null);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("&qsNuot;");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0, "&qsNuot;");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("&qsNuot;", object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("xml", "[Document: ", "hxMYL&");
      String string0 = DOMNodePointer.getPrefix(attr0);
      assertEquals("[Document", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "fK{;l)M6");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "{iXb'E8Vn>w");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer1.equals(dOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "fK{;l)M6");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "{iXb'E8Vn>w");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer1.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = dOMNodePointer0.equals(hTMLLinkElementImpl0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "fK{;l)M6");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "{iXb'E8Vn>w");
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "{T%b'=xWy6~U1ny<");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("id('{T%b&apos;=xWy6~U1ny<')", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "7[;Q<");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, dOMNodePointer0, (Locale) null);
      NodePointer nodePointer1 = NodePointer.newChildNodePointer(nodePointer0, (QName) null, hTMLElement0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(nodePointer1, hTMLElement0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/BODY[1]", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("/", "9o`hq:9FD!wy-rL$", "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("org.apache.commons.jxpat.ri.model.dom.DOMNodePoiner");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "1>[:8?S");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "{T%b'=xWy6~U1ny<");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, cDATASectionImpl0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, documentTypeImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Y6< ZY&/YH4ww");
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "sendreferer", "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, processingInstructionImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('Y6< ZY&/YH4ww')/processing-instruction('sendreferer')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "2J. &");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, entityImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = new Locale("kp1/H X#<u}", "3SE");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "/processing-instruction('");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0, "Z)M!DAv13Y~BOh");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, entityReferenceImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('Z)M!DAv13Y~BOh')", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("HTMLFrameSetElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, cDATASection0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "Wb*", "Wb*", "[");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, attrNSImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Y6< ZY&/YH4ww");
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "");
      Locale locale0 = new Locale("kp1/H X#<u}", "3SE");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLGoElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentTypeImpl0);
      dOMNodePointer1.remove();
      assertFalse(dOMNodePointer1.isCollection());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "Q");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFrameElementImpl0, locale0, "Q");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer1 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertNotSame(nodePointer1, nodePointer0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      QName qName0 = new QName("org.apache.wml.dom.WMLTdElementImpl", "M,&aY9eq");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "M,&aY9eq");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "CANNOT REMOVE ROOT DOM NODE");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLWmlElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: org.apache.wml.dom.WMLTdElementImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "#document");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) commentImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      QName qName0 = new QName("<<unknown namespace>>", "#document");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@<<unknown namespace>>:#document, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, (String) null);
      QName qName0 = dOMNodePointer0.getName();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDirectoryElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) hTMLDocumentImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /text()[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "fK{;l)6");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "{iXb'E8Vn>w");
      dOMNodePointer0.setValue(dOMNodePointer0);
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "");
      Locale locale0 = new Locale("kp1/H X#<u}", "3SE");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLGoElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(deferredDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "fK{;l)M6");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "{iXb'E8Vn>w");
      dOMNodePointer0.setValue(hTMLTableElementImpl0);
      assertTrue(dOMNodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "vlink");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "7[;Q<");
      dOMNodePointer0.setValue((Object) null);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(dOMNodePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("pRvh");
      Locale locale0 = new Locale("pRvh");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      dOMNodePointer0.setValue(dOMNodePointer0);
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, (String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "M,&aY9eq");
      boolean boolean0 = dOMNodePointer0.isLanguage("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getHead();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "z2r{y^R\"7uj");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLSelectElementImpl0, (Locale) null);
      dOMNodePointer0.getDefaultNamespaceURI();
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("_jm");
      String string0 = dOMNodePointer0.getNamespaceURI("_jm");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "1>[:8?S");
      String string0 = dOMNodePointer0.getNamespaceURI("kp1/H X#<u}");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = new QName("xmlns:");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      QName qName0 = new QName("1Yb^&e^hV^yFb?i", "1Yb^&e^hV^yFb?i");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
      String string0 = dOMNodePointer0.getNamespaceURI("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "dhXgi", "dhXgi", "dhXgi");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "xml:space");
      HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "xml:space");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLTableCaptionElementImpl0);
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLCardElementImpl0, locale0, "dhXgi");
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "FK{;L)6", "FK{;L)6");
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      assertEquals("FK{;L)6", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("\"and\"");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.forLanguageTag("=ljyZ(lQ{Z\"<R|\"D");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLHRElementImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, (String) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NotationImpl notationImpl0 = new NotationImpl(hTMLDocumentImpl0, "')");
      boolean boolean0 = DOMNodePointer.testNode((Node) notationImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "n7> /Z[l^");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLInputElementImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "&apos;", "&apos;");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      Comment comment0 = hTMLDocumentImpl0.createComment("TCWE");
      boolean boolean0 = DOMNodePointer.testNode((Node) comment0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("F!");
      boolean boolean0 = DOMNodePointer.testNode((Node) cDATASection0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, true);
      boolean boolean0 = DOMNodePointer.testNode((Node) deferredDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "&apos;", "&apos;");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("&apos;");
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      QName qName0 = new QName("2J. &");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "2J. &");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "2J. &");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBodyElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLObjectElementImpl hTMLObjectElementImpl0 = new HTMLObjectElementImpl(hTMLDocumentImpl0, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLObjectElementImpl0, (Locale) null, "WNwpjvYQ<EZ+WH|L@?M");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLObjectElementImpl0, (NodeTest) nodeNameTest0);
      assertEquals("", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, ":-*B<no");
      QName qName0 = new QName("v3", "v3");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "v3");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBodyElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "*");
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "w:6xLq7");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBodyElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("*", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "*");
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "w:6xLq7");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBodyElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName((String) null, "gf");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      Element element0 = hTMLDocumentImpl0.createElementNS("p$#LZ`\"V", "gf", "org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer");
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "FK{;L)6");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBodyElementImpl0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = new QName("<<unknown namespace>>", "W9@0h-xSt6f");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "1>[:8?S");
      dOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "Z:`ox6S6AZ{Zt5y-");
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("Z:`ox6S6AZ{Zt5y-");
      assertTrue(nodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, (Locale) null, "X^r@*PvD\"yQo[");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('X^r@*PvD&quot;yQo[')/BODY[1]", string0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "Q");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFrameElementImpl0, locale0, "Q");
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "http-equiv");
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
  }
}
