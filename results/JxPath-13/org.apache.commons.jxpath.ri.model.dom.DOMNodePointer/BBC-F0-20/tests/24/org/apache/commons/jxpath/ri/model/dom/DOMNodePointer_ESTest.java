/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 06:42:25 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.Vector;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLBRElementImpl;
import org.apache.html.dom.HTMLBaseFontElementImpl;
import org.apache.html.dom.HTMLBodyElementImpl;
import org.apache.html.dom.HTMLDirectoryElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFieldSetElementImpl;
import org.apache.html.dom.HTMLFrameElementImpl;
import org.apache.html.dom.HTMLHtmlElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.html.dom.HTMLLabelElementImpl;
import org.apache.html.dom.HTMLMapElementImpl;
import org.apache.html.dom.HTMLModElementImpl;
import org.apache.html.dom.HTMLQuoteElementImpl;
import org.apache.html.dom.HTMLTableCellElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTextAreaElementImpl;
import org.apache.html.dom.HTMLTitleElementImpl;
import org.apache.wml.dom.WMLCardElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLElementImpl;
import org.apache.wml.dom.WMLHeadElementImpl;
import org.apache.wml.dom.WMLImgElementImpl;
import org.apache.wml.dom.WMLMetaElementImpl;
import org.apache.wml.dom.WMLNoopElementImpl;
import org.apache.wml.dom.WMLOneventElementImpl;
import org.apache.wml.dom.WMLPostfieldElementImpl;
import org.apache.wml.dom.WMLRefreshElementImpl;
import org.apache.wml.dom.WMLTableElementImpl;
import org.apache.wml.dom.WMLUElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.NotationImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Entity;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      QName qName0 = dOMNodePointer0.getName();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, attr0, (Locale) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "");
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "xmlns");
      assertFalse(nullPointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ":pXX?[<Tx^f)e}s");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ":pXX?[<Tx^f)e}s");
      QName qName0 = dOMNodePointer0.getName();
      assertEquals(":PXX?[<TX^F)E}S", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "jJ:d2");
      Vector<Locale> vector0 = new Vector<Locale>();
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) "jJ:d2");
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("string-length");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLTextAreaElementImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) vector0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: $string-length/D2[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLModElementImpl hTMLModElementImpl0 = new HTMLModElementImpl(hTMLDocumentImpl0, "_tx^H#Iqko#K*e?%");
      Locale locale0 = new Locale("1");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLModElementImpl0, locale0);
      dOMNodePointer0.setValue("_tx^H#Iqko#K*e?%");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "Y?e8pB", "kjIM@^");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(documentImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLModElementImpl hTMLModElementImpl0 = new HTMLModElementImpl(hTMLDocumentImpl0, "_tx^H#Iqko#K*e?%");
      Locale locale0 = new Locale("1");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLModElementImpl0, locale0);
      dOMNodePointer0.setValue("_tx^H#Iqko#K*e?%");
      dOMNodePointer0.setValue(hTMLDocumentImpl0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl((DocumentType) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0, "3c@&p'SE");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-3387));
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, ".hpUT2EEW~3#gWB>U.");
      boolean boolean0 = dOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":$~lJ7M;YQL80?");
      String string0 = DOMNodePointer.getPrefix(hTMLQuoteElementImpl0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("K{|", "K{|", "S} 3&_MP1_j\"H).p,l");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, (Locale) null, "<A[CS?D");
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertEquals("K{|", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "xml");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOneventElementImpl wMLOneventElementImpl0 = new WMLOneventElementImpl(wMLDocumentImpl0, "HTMLBaseElementImpl");
      Locale locale0 = Locale.ITALIAN;
      wMLOneventElementImpl0.setXmlLang("/@");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLOneventElementImpl0, locale0, "Rq_f.m,N+SWzc");
      String string0 = dOMNodePointer0.getLanguage();
      assertEquals("/@", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      QName qName0 = new QName("cVnA");
      Locale locale0 = Locale.US;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, (Node) null);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Entity entity0 = hTMLDocumentImpl0.createEntity("org.apache.wml.dom.WMLRefreshElementImpl");
      Locale locale0 = Locale.forLanguageTag("org.apache.wml.dom.WMLRefreshElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entity0, locale0);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(entity0, object0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLElementImpl wMLElementImpl0 = new WMLElementImpl(wMLDocumentImpl0, "HTMLTableSectionElementImpl");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLElementImpl0, locale0, "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      Object object0 = dOMNodePointer1.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      String string0 = DOMNodePointer.findEnclosingAttribute(pSVIDocumentImpl0, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeTypeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "tVF");
      QName qName0 = new QName("tVF");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLLIElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: tVF
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("input", "riy4.=f~Iyah6w");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'input:riy4.=f~Iyah6w'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, (String) null);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(documentTypeImpl0, true);
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(coreDocumentImpl0, "K~In&A3)PO!?#K>hddm");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue("K~In&A3)PO!?#K>hddm");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      // Undeclared exception!
      try { 
        dOMNodePointer1.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLeaf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      NotationImpl notationImpl0 = new NotationImpl(deferredDocumentImpl0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, notationImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLanguage("<<unknown namespace>>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, (Locale) null, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      WMLTableElementImpl wMLTableElementImpl0 = new WMLTableElementImpl((WMLDocumentImpl) null, "/");
      // Undeclared exception!
      try { 
        DOMNodePointer.getPrefix(wMLTableElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "(VZG9-74O.>y1#eHN#L");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.272.b10-0.fc31.x86_64/jre/lib/jxpath.properties");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) evoSuiteFile0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getPointerByID(jXPathContext0, "http://www.w3.org/2000/xmlns/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(coreDocumentImpl0, "Hd_c/2xZwxI{x", "Factory could not create a child node for path: ", "7[)F)2");
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) pSVIAttrNSImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.PSVIAttrNSImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "jJ:d2");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTextAreaElementImpl0, (Locale) null, "");
      WMLUElementImpl wMLUElementImpl0 = new WMLUElementImpl((WMLDocumentImpl) null, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLUElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.getNamespaceURI("&apos;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "rowspan");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("HTMLLabelElementImpl");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0, "HTMLLabelElementImpl");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.TextImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl((HTMLDocumentImpl) null, "Y*1M>szrZ-}no+%)");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, (Locale) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        DOMNodePointer.getLocalName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl((HTMLDocumentImpl) null, "java.util.Locale@0000000005");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLabelElementImpl0, locale0, "child::");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getLanguage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl((CoreDocumentImpl) null, "69UW_pdQgINTl", "69UW_pdQgINTl", ">P*&ayk)a8wk#E~SuB");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0, "69UW_pdQgINTl");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLMapElementImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      QName qName0 = dOMNodePointer0.getName();
      Element element0 = hTMLDocumentImpl0.createElementNS("HTTP", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLIElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createChild(jXPathContext0, qName0, (-1134506331), (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, ":$~lJ7M;YQL80?");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLQuoteElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, (QName) null, (int) (short)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "inl", "org.apache.commons.jxpath.ri.compiler.Expression");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, pSVIElementNSImpl0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, dOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Es_w=J]9");
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.compiler.LocationPath");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, hTMLDirectoryElementImpl0, (Locale) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, (Locale) null, "Factory is not set on the JXPathContext - cannot create path: ");
      // Undeclared exception!
      try { 
        dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, nodePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("", "", "0R");
      Locale locale0 = new Locale("", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "')l%V^+T7~JL<hP1O");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ''
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "S} 3&_MP1_j\"H).p,l");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, "S} 3&_MP1_j\"H).p,l");
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, dOMNodePointer0, (Locale) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.model.dom.DOMNodePointer cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "S} 3&_MP1_j\"H).p,l");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, "S} 3&_MP1_j\"H).p,l");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator((NodeTest) null, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: http://www.w3.org/2000/xmlns/:<<unknown namespace>>
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "3c@&p'SE");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLMetaElementImpl0, locale0, "S} 3&_MP1_J\"H).P,L");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Entity entity0 = hTMLDocumentImpl0.createEntity("b");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2099861822));
      BasicVariables basicVariables0 = new BasicVariables();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entity0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((DocumentType) null, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "rowspan");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLHeadElementImpl wMLHeadElementImpl0 = new WMLHeadElementImpl(wMLDocumentImpl0, "rowspan");
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLHeadElementImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLDocumentImpl0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "\"number\"");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, jXPathContext0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, nodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextReferenceImpl cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "");
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, (String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = hTMLDocumentImpl0.getTitle();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      Object object0 = dOMNodePointer0.getValue();
      assertTrue(object0.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "jJ:d2");
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLTextAreaElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "?^Wx{l>=_'@Q8$AW", "[", "{0H");
      String string0 = DOMNodePointer.getNamespaceURI((Node) pSVIElementNSImpl0);
      assertNotNull(string0);
      assertEquals("?^Wx{l>=_'@Q8$AW", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLElement0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      String string0 = DOMNodePointer.getLocalName(hTMLTableCellElementImpl0);
      assertEquals("//WWW.W3.ORG/2000/XMLNS/", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "/text()[1]");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(pSVIDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "/text()[1]", "<<unknown namespace>>");
      String string0 = DOMNodePointer.getLocalName(attrNSImpl0);
      assertEquals("<<unknown namespace>>", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, "");
      String string0 = DOMNodePointer.getLocalName(hTMLTitleElementImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "D5jz);:k");
      String string0 = DOMNodePointer.getPrefix(hTMLDirectoryElementImpl0);
      assertNotNull(string0);
      assertEquals("D5JZ);", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("K{|", "K{|", "S} 3&_MP1_j\"H).p,l");
      String string0 = DOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.printPointerChain();
      assertFalse(dOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("http://www.w3.org/2000/xmlns/");
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      dOMNodePointer0.printPointerChain();
      assertFalse(dOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0);
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLTableElementImpl0);
      QName qName0 = new QName("&MB(?G", "&MB(?G");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "AZTN.6%/;");
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      String string0 = dOMNodePointer0.getNamespaceURI("7[)F)2");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFrameElementImpl0, locale0, "xmlns");
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertNotNull(string0);
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      String string0 = dOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "{iQ", ".hpUT2EEW~3#gWB>U.", "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "OdkBWXe");
      QName qName0 = new QName("{iQ", "OdkBWXe");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLCardElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLElementImpl wMLElementImpl0 = new WMLElementImpl(wMLDocumentImpl0, "HTMLTableSectionElementImpl");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLElementImpl0, locale0, "");
      Object object0 = dOMNodePointer0.getBaseValue();
      assertSame(wMLElementImpl0, object0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "*", "*", "*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLRefreshElementImpl wMLRefreshElementImpl0 = new WMLRefreshElementImpl(wMLDocumentImpl0, "*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLRefreshElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLDocumentImpl0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Ph(19%");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) documentTypeImpl0);
      int int0 = dOMNodePointer1.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Es_w=J]9");
      dOMNodePointer0.getNamespaceURI(",");
      QName qName0 = new QName("", "<<unknown namespace>>");
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLTableCellElementImpl0, locale0);
      int int0 = dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EEW~3gWB>U.");
      QName qName0 = dOMNodePointer0.getName();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, attr0, (Locale) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, nodePointer0);
      assertEquals(".HPUT2EEW~3GWB>U.", qName0.getName());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "&quot;");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "j%F");
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "XBR:aF/6lv$%LT", "wj[~F", "&quot;");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, pSVIAttrNSImpl0, (Locale) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "org.apache.html.dom.HTMLMapElementImpl");
      dOMNodePointer0.getNamespaceURI();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer1 = (DOMNodePointer)dOMNodePointer0.getPointerByID(jXPathContext0, "");
      assertTrue(dOMNodePointer1.isActual());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ".hpUT2EEW~3#gWB>U.");
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, ".hpUT2EEW~3#gWB>U.");
      assertFalse(nullPointer0.isDynamicPropertyDeclarationSupported());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, ".HPUT2EEW~3#GWB>U.", (String) null);
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASectionImpl0);
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("<<unknown namespace>>", object0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment((String) null);
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("VCl(X)T!O_l`/lc=");
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("VCl(X)T!O_l`/lc=", object0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFrameElementImpl0, locale0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("xml", "http://www.w3.org/2000/xmlns/", (String) null);
      String string0 = DOMNodePointer.getPrefix(attr0);
      assertEquals("http", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "RAmv?@:o4Jh 7)a");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "jJ:d2");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "RAmv?@:o4Jh 7)a");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "HTMLFormElementImpl");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBodyElementImpl0, locale0, "");
      boolean boolean0 = dOMNodePointer0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "RAmv?@:o4Jh 7)a");
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      hTMLDocumentImpl0.setBody(hTMLTableElementImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("///WWW.W3.ORG/2000/XMLNS/[1]", string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "S} 3&_MP1_j\"H).p,l");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, "S} 3&_MP1_j\"H).p,l");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("id('S} 3&_MP1_j&quot;H).p,l')", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl((DocumentType) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0, "3c@&p'SE");
      QName qName0 = dOMNodePointer0.getName();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, (-3371));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('3c@&p&apos;SE')
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      Element element0 = hTMLDocumentImpl0.createElementNS(".hpUT2EEW~3#gWB>U.", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.printPointerChain();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null);
      dOMNodePointer0.printPointerChain();
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      NotationImpl notationImpl0 = new NotationImpl(deferredDocumentImpl0, "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) notationImpl0);
      DOMNodePointer dOMNodePointer0 = (DOMNodePointer)jXPathContext0.getContextPointer();
      dOMNodePointer0.printPointerChain();
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("VCl(X)T!O_l`/lc=");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "{0H", "L8g");
      Locale locale0 = new Locale("{0H");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('{0H')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Entity entity0 = hTMLDocumentImpl0.createEntity("org.apache.wml.dom.WMLRefreshElementImpl");
      Locale locale0 = Locale.forLanguageTag("org.apache.wml.dom.WMLRefreshElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entity0, locale0);
      dOMNodePointer0.printPointerChain();
      assertFalse(dOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "FRAME");
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, entityReferenceImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('FRAME')", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "java.util.Locale@0000000005");
      Locale locale0 = new Locale("java.util.Locale@0000000005");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      dOMNodePointer0.printPointerChain();
      assertTrue(dOMNodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("xml", "http://www.w3.org/2000/xmlns/", (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, attr0);
      dOMNodePointer1.printPointerChain();
      assertFalse(dOMNodePointer1.isContainer());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EEW~3#gWB>U.");
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "q$E9an[2WQH,1})");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createTFoot();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, "q$E9an[2WQH,1})");
      dOMNodePointer0.remove();
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFrameElementImpl0, locale0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("XMLNS", qName0.getName());
      assertEquals("XMLNS", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0);
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, ".hpUT2EEW~3#gWB>U.");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLTableElementImpl0);
      QName qName0 = new QName("b:=ZgNgF,hdXW");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: b
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = new QName("<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@<<unknown namespace>>, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPANESE;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "org.apache.html.dom.HTMLMapElementImpl");
      dOMNodePointer0.setValue(vector0);
      assertEquals(0, vector0.size());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      dOMNodePointer0.setValue((Object) null);
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "org.apache.wml.dom.WMLRefreshElementImpl");
      dOMNodePointer0.setValue(hTMLBodyElementImpl0);
      assertTrue(dOMNodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(")z^,t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("HTMLLabelElementImpl");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0, "HTMLLabelElementImpl");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(dOMNodePointer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("http://www.w3.org/2000/xmlns/");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("b");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0, "lf)witewUU+@w0");
      dOMNodePointer0.setValue("b");
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("L8g", "L8g");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NotationImpl notationImpl0 = new NotationImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) notationImpl0);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "{0H", "L8g");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) processingInstructionImpl0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "L8g");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLTextAreaElementImpl0);
      dOMNodePointer0.setValue(nodePointer0);
      assertSame(variablePointer0, nodePointer0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "]");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOneventElementImpl wMLOneventElementImpl0 = new WMLOneventElementImpl(wMLDocumentImpl0, "]");
      Locale locale0 = Locale.ITALIAN;
      wMLOneventElementImpl0.setXmlLang("]");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLOneventElementImpl0, locale0, "]");
      boolean boolean0 = dOMNodePointer0.isLanguage("\"!=\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "8Mym?:Z=<{vnD");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPostfieldElementImpl wMLPostfieldElementImpl0 = new WMLPostfieldElementImpl(wMLDocumentImpl0, "xmlns:");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPostfieldElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLModElementImpl hTMLModElementImpl0 = new HTMLModElementImpl(hTMLDocumentImpl0, "_tx^H#Iqko#K*e?%");
      Locale locale0 = new Locale("1");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLModElementImpl0, locale0);
      dOMNodePointer0.setValue("_tx^H#Iqko#K*e?%");
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "xmlns");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFrameElementImpl0, locale0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EdW~3#gWB>U.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, ".hpUT2EdW~3#gWB>U.");
      dOMNodePointer0.getDefaultNamespaceURI();
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      String string0 = dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "8Mym?:Z=<{vnD");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPostfieldElementImpl wMLPostfieldElementImpl0 = new WMLPostfieldElementImpl(wMLDocumentImpl0, "xmlns:");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPostfieldElementImpl0, locale0);
      WMLImgElementImpl wMLImgElementImpl0 = new WMLImgElementImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLImgElementImpl0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBRElementImpl hTMLBRElementImpl0 = new HTMLBRElementImpl(hTMLDocumentImpl0, "http/ww.w3.org/XML/1998/namespace");
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "http/ww.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLabelElementImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLBRElementImpl0);
      QName qName0 = new QName("xml:lang");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "S} 3&_MP1_j\"H).p,l");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, "S} 3&_MP1_j\"H).p,l");
      String string0 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "uAbn+~8bHyZt", "uAbn+~8bHyZt");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, processingInstructionImpl0);
      QName qName0 = dOMNodePointer0.getName();
      assertEquals("uAbn+~8bHyZt", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("]");
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "WJP/WcT5_918~-l", "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("self");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) cDATASection0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Entity entity0 = hTMLDocumentImpl0.createEntity("b");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) entity0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2099861822));
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("VCl(X)T!O_l`/lc=");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) comment0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, ".hpUT2EdW~3#gWB>U.");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("7_q|}(U'@ksHr");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLLIElementImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "{iQ", ".hpUT2EEW~3#gWB>U.", "<~\"n\"&qTK7_F\"T");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "OdkBWXe");
      QName qName0 = new QName("{iQ", "OdkBWXe");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "OdkBWXe");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLCardElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "-ai'0");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(pSVIDocumentImpl0, "-ai'0", "-ai'0", "-ai'0");
      QName qName0 = new QName("-ai'0");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) pSVIElementNSImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "S} 3&_MP1_j\"H).p,l");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, (Locale) null, "S} 3&_MP1_j\"H).p,l");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("S} 3&_MP1_J\"H).P,L", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, ";se;hx|z+cV`%");
      HTMLBaseFontElementImpl hTMLBaseFontElementImpl0 = new HTMLBaseFontElementImpl(hTMLDocumentImpl0, "U8HeXPeZ&[w3-/");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLBaseFontElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "V&");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "tVF");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0, "tVF");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLLIElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("TVF", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "true");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLAppletElementImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "Y?e8pB", "kjIM@^");
      boolean boolean0 = DOMNodePointer.testNode((Node) documentTypeImpl0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "&quot;");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-480));
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator(nodeTypeTest0, false, dOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      NodeIterator nodeIterator0 = dOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "org.apache.wml.dom.WMLRefreshElementImpl");
      QName qName0 = new QName("U2zN?y)`6l5-!T D");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFieldSetElementImpl hTMLFieldSetElementImpl0 = new HTMLFieldSetElementImpl(hTMLDocumentImpl0, "Unknown namespace prefix: ");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFieldSetElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "HTMLFormElementImpl");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLBodyElementImpl0, locale0, "");
      dOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "RAmv?@:o4Jh 7)a");
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "8Mym?:Z=<{vnD");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPostfieldElementImpl wMLPostfieldElementImpl0 = new WMLPostfieldElementImpl(wMLDocumentImpl0, "xmlns:");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPostfieldElementImpl0, locale0);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("ZB,ZY-*|q4<;B;");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator(nodeNameTest0, true, nodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("http://www.w3.org/2000/xmlns/");
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
      NodeIterator nodeIterator0 = dOMNodePointer0.attributeIterator(qName0);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLNoopElementImpl wMLNoopElementImpl0 = new WMLNoopElementImpl(wMLDocumentImpl0, "YAYn7aQ6KVq");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLNoopElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, 68, (Object) nodeIterator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /text()[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "8Mym?:Z=<{vnD");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPostfieldElementImpl wMLPostfieldElementImpl0 = new WMLPostfieldElementImpl(wMLDocumentImpl0, "xmlns:");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPostfieldElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "]");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOneventElementImpl wMLOneventElementImpl0 = new WMLOneventElementImpl(wMLDocumentImpl0, "]");
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLOneventElementImpl0, locale0, "]");
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
  }
}
