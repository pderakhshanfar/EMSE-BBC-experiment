* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: com.fasterxml.jackson.core.json.UTF8StreamJsonParser
* Starting Client-0
* Connecting to master process on port 12247
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonCore-19/target/classes
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.core.json.UTF8StreamJsonParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 6277
* Using seed 2477159782
* Starting evolution
* Initial Number of Goals in DynaMOSA = 1140 / 6277
* Search finished after 311s and 29 generations, 32412 statements, best individual has fitness: 4656.0
* Minimizing test suite
[MASTER] 11:36:56.075 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 29%
* Total number of goals: 1814
* Number of covered goals: 531
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 1454
* Number of covered goals: 356
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 93
* Number of covered goals: 93
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 1226
* Number of covered goals: 342
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 213
* Number of covered goals: 45
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 91%
* Total number of goals: 58
* Number of covered goals: 53
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 58
* Number of covered goals: 29
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 1454
* Number of covered goals: 351
* Generated 208 tests with total length 3821
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 11:38:01.870 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6685666666666666% of time used, but only 23/208 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 11:39:04.944 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.fasterxml.jackson.core.JsonParseException: Illegal unquoted character ((CTRL-CHAR, code 0)): has to be escaped using backslash to be included in name
 at [Source: com.fasterxml.jackson.core.util.BufferRecycler@1; line: 1, column: 6]
[MASTER] 11:39:04.945 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BufferRecycler bufferRecycler0 = new BufferRecycler();
IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
JsonEncoding jsonEncoding0 = JsonEncoding.UTF8;
IOContext iOContext1 = iOContext0.withEncoding(jsonEncoding0);
byte[] byteArray0 = new byte[6];
byteArray0[0] = (byte) (-105);
byteArray0[1] = (byte)110;
byteArray0[2] = (byte) (-76);
byteArray0[3] = (byte) (-52);
byteArray0[4] = (byte)0;
byteArray0[5] = (byte)57;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3123, 2370);
ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-1143));
UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext1, 1861, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer1, byteArray0, 0, (byte) (-105), true);
uTF8StreamJsonParser0.parseMediumName(1861);

* Writing tests to file
* Writing JUnit test case 'UTF8StreamJsonParser_ESTest' to results/JacksonCore-19/com.fasterxml.jackson.core.json.UTF8StreamJsonParser/BBC-F0/tests/19
* Done!

* Computation finished
