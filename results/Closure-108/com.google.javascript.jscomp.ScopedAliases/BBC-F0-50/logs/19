* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.jscomp.ScopedAliases
* Starting Client-0
* Connecting to master process on port 8050
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-108/build/classes
  - subjects/buggy-versions/Closure-108/lib/args4j.jar
  - subjects/buggy-versions/Closure-108/lib/guava.jar
  - subjects/buggy-versions/Closure-108/lib/json.jar
  - subjects/buggy-versions/Closure-108/lib/jsr305.jar
  - subjects/buggy-versions/Closure-108/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-108/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-108/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.ScopedAliases
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 930
* Using seed 637196343
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 250 / 930
[MASTER] 17:18:54.589 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:23:48.276 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 17:25:47.668 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 605s and 839 generations, 367423 statements, best individual has fitness: 786.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 19%
* Total number of goals: 235
* Number of covered goals: 44
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 17%
* Total number of goals: 169
* Number of covered goals: 28
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 13%
* Total number of goals: 329
* Number of covered goals: 42
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 21%
* Total number of goals: 14
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 21%
* Total number of goals: 14
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 17%
* Total number of goals: 169
* Number of covered goals: 28
* Generated 7 tests with total length 48
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 17:29:03.540 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:29:06.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: stableIdGenerator=NOT_IMPLEMENTED and stableIdGenerator=STABLEIDGENERATOR
[MASTER] 17:29:06.295 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = Node.newString("JSCnOlG_SCOE<ALIAS_YCLE");
PreprocessorSymbolTable preprocessorSymbolTable0 = new PreprocessorSymbolTable(node0);
CompilerOptions.AliasTransformationHandler compilerOptions_AliasTransformationHandler0 = CompilerOptions.NULL_ALIAS_TRANSFORMATION_HANDLER;
ScopedAliases scopedAliases0 = new ScopedAliases(compiler0, preprocessorSymbolTable0, compilerOptions_AliasTransformationHandler0);
Node[] nodeArray0 = new Node[2];
nodeArray0[0] = node0;
Node node1 = Normalize.parseAndNormalizeTestCode(compiler0, "JSCnOlG_SCOE<ALIAS_YCLE");
nodeArray0[1] = node1;
Node node2 = new Node(37, nodeArray0);
scopedAliases0.process(node2, node1);
assertFalse(node1.isNew());


* Writing tests to file
* Writing JUnit test case 'ScopedAliases_ESTest' to results/Closure-108/com.google.javascript.jscomp.ScopedAliases/BBC-F0-50/tests/19
* Done!

* Computation finished
