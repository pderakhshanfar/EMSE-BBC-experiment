* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.joda.time.DateTimeZone
* Starting Client-0
* Connecting to master process on port 10433
* Analyzing classpath: 
  - subjects/buggy-versions/Time-9/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.DateTimeZone
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1704
* Using seed 284867425
* Starting evolution
* Initial Number of Goals in DynaMOSA = 561 / 1704
[MASTER] 14:15:04.927 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.PhantomReference<T> : Type points to itself
[MASTER] 14:15:04.927 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.SoftReference<T> : Type points to itself
[MASTER] 14:15:04.928 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.WeakReference<T> : Type points to itself
[MASTER] 14:15:12.109 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 464: org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;:654 - ReplaceArithmeticOperator - -> +
[MASTER] 14:15:12.110 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 463: org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;:654 - ReplaceArithmeticOperator * -> /
[MASTER] 14:15:12.111 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 461: org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;:654 - ReplaceArithmeticOperator * -> %
[MASTER] 14:15:12.111 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 466: org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;:654 - ReplaceArithmeticOperator - -> *
[MASTER] 14:15:27.584 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 14:15:49.022 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 14:18:31.616 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 302s and 527 generations, 138228 statements, best individual has fitness: 291.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 346
* Number of covered goals: 298
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 801
* Number of covered goals: 695
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 95
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 194
* Number of covered goals: 152
* Generated 100 tests with total length 213
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:21:03.645 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6672666666666667% of time used, but only 45/100 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 33%
* Compiling and checking tests
[MASTER] 14:22:02.132 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'DateTimeZone_ESTest' to results/Time-9/org.joda.time.DateTimeZone/default/tests/11
* Done!

* Computation finished
