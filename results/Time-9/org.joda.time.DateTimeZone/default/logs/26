* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.joda.time.DateTimeZone
* Starting Client-0
* Connecting to master process on port 9914
* Analyzing classpath: 
  - subjects/buggy-versions/Time-9/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.DateTimeZone
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1704
* Using seed 3475989221
* Starting evolution
* Initial Number of Goals in DynaMOSA = 561 / 1704
[MASTER] 16:28:37.194 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.PhantomReference<T> : Type points to itself
[MASTER] 16:28:37.195 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.SoftReference<T> : Type points to itself
[MASTER] 16:28:37.195 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.WeakReference<T> : Type points to itself
[MASTER] 16:28:57.272 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 16:29:33.839 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 16:29:51.496 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 602s and 3527 generations, 896478 statements, best individual has fitness: 168.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 346
* Number of covered goals: 312
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 194
* Number of covered goals: 168
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 801
* Number of covered goals: 778
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 95
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 194
* Number of covered goals: 168
* Generated 105 tests with total length 222
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
[MASTER] 16:39:27.058 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArithmeticException
[MASTER] 16:39:27.058 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeZone dateTimeZone0 = DateTimeZone.forID("Asia/Tokyo");
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
DateTimeZone dateTimeZone1 = buddhistChronology0.getZone();
dateTimeZone0.getMillisKeepLocal(dateTimeZone1, 9223372036854775807L);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
* Writing JUnit test case 'DateTimeZone_ESTest' to results/Time-9/org.joda.time.DateTimeZone/default/tests/26
* Done!

* Computation finished
