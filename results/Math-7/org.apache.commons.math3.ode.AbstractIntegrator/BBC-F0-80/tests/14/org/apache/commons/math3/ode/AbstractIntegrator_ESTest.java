/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 22:47:59 GMT 2021
 */

package org.apache.commons.math3.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator;
import org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math3.ode.nonstiff.GillIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math3.ode.nonstiff.MidpointIntegrator;
import org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator;
import org.apache.commons.math3.ode.sampling.StepInterpolator;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractIntegrator_ESTest extends AbstractIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = (-2777.59175940488);
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(3740.9886803978, 5155.17, 3740.9886803978, (-2777.59175940488));
      highamHall54Integrator0.getOrder();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      highamHall54Integrator0.setMaxEvaluations(24);
      double[] doubleArray0 = new double[0];
      try { 
        highamHall54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-2168.48218), doubleArray0, 5155.17, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (24) exceeded
         //
         verifyException("org.apache.commons.math3.util.Incrementor$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-199.189750749493), (-4029.0), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1126.17, (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator0.setOrderControl(1837, (-169.823683), 130);
      dormandPrince54Integrator0.getStepHandlers();
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-4029.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.19827613256897345, doubleArray0, (double) 0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      threeEighthesIntegrator0.addEventHandler(eventHandler0, (-563.52), (-1311.7884), 1837);
      threeEighthesIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1552);
      threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-4029.0), doubleArray0, 1126.17, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = (-160.80331028609092);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-160.80331028609092), (-4029.0), (-563.52));
      double double1 = 0.19827613256897345;
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1126.17, (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-563.52), 182.83640004, (-169.823683), (-160.80331028609092));
      graggBulirschStoerIntegrator2.setOrderControl((-79), 52.8172, 52.8172);
      dormandPrince54Integrator0.getStepHandlers();
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-1916.1106102371662));
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-79), (FixedStepHandler) null, stepNormalizerBounds0);
      threeEighthesIntegrator0.addStepHandler(stepNormalizer0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(0.19827613256897345);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      threeEighthesIntegrator0.addEventHandler(eventHandler0, 0.0, (double) 1837, 1837, (UnivariateSolver) mullerSolver2_0);
      // Undeclared exception!
      try { 
        threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-2824.446267999), doubleArray0, 1126.17, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.sampling.StepNormalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-199.189750749493), (-4029.0), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1126.17, (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      int int0 = 1837;
      graggBulirschStoerIntegrator0.setOrderControl(1837, (-169.823683), 130);
      dormandPrince54Integrator0.getStepHandlers();
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-4029.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double double0 = 0.0;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((-1303.0), (-841.1559467), 1126.17, (-4029.0)).when(eventHandler0).g(anyDouble() , any(double[].class));
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(182.83640004);
      threeEighthesIntegrator0.addEventHandler(eventHandler0, (-2824.446267999), 2601.67, 1837, (UnivariateSolver) mullerSolver2_0);
      // Undeclared exception!
      try { 
        threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, 0.6466736793518066, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [4,029, 0.647]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-6.648490725635754E-8));
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(3633.155726806959, 3633.155726806959, (-6.648490725635754E-8), (-6.648490725635754E-8));
      highamHall54Integrator0.getOrder();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      highamHall54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 1.2827720642089844, doubleArray0, (-2168.48218), doubleArray0);
      highamHall54Integrator0.getEvaluations();
      highamHall54Integrator0.getCurrentSignedStepsize();
      highamHall54Integrator0.getEvaluations();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-199.189750749493), (-4029.0), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1126.17, (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator0.setOrderControl(1837, (-169.823683), 130);
      dormandPrince54Integrator0.getStepHandlers();
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-4029.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((-1.0), 3327.11, (double)130, 3327.11).when(eventHandler0).g(anyDouble() , any(double[].class));
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(182.83640004);
      threeEighthesIntegrator0.addEventHandler(eventHandler0, (-2824.446267999), 2601.67, 1837, (UnivariateSolver) mullerSolver2_0);
      try { 
        threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, 0.6466736793518066, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [0, 4,029], values: [130, 3,327.11]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.MullerSolver2", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-160.80331028609092), (-4029.0), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1126.17, (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator1.clearEventHandlers();
      graggBulirschStoerIntegrator0.setOrderControl(1837, (-169.823683), 130);
      dormandPrince54Integrator0.getStepHandlers();
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-4029.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, 0.6466736793518066, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((-1916.1106102371662), 0.19827613256897345, (double)1837, (-1916.1106102371662), 52.8172).when(eventHandler0).g(anyDouble() , any(double[].class));
      threeEighthesIntegrator0.addEventHandler(eventHandler0, 1000.0, (-1004.294101767), 1631);
      threeEighthesIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator1.setInterpolationControl(false, (-147));
      try { 
        threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.6466736793518066, doubleArray0, Double.NaN, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1,631) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-199.189750749493), (-563.52), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1125.3167091114426, (-1889.5372818336257), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(1837, (-169.823683), 130);
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(130);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-1889.5372818336257), doubleArray0, 0.19827613256897345, doubleArray0);
      threeEighthesIntegrator0.computeDerivatives(0.19827613256897345, doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      BrentSolver brentSolver0 = new BrentSolver();
      graggBulirschStoerIntegrator1.addEventHandler(eventHandler0, 3327.11, (-169.823683), (-3773), (UnivariateSolver) brentSolver0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3740.9886803978, (-2777.59175940488), 3740.9886803978, 3740.9886803978);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-1003.8998147529522), 4.94E-321, 4226, (UnivariateSolver) illinoisSolver0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(1197.04769);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 40.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 4226);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-199.189750749493), (-4029.0), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1126.17, (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator0.setOrderControl(1837, (-169.823683), 130);
      dormandPrince54Integrator0.getStepHandlers();
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-4029.0));
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double double0 = threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, 0.6466736793518066, doubleArray0);
      assertEquals(0.6466736793518066, double0, 0.01);
      
      // Undeclared exception!
      threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.6466736793518066, doubleArray0, Double.NaN, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1000.0, 0.0, 0.0, 0.5629583597183228);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 0.0, (-1678.2965750313), (-405));
      graggBulirschStoerIntegrator0.clearStepHandlers();
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1491.34, 1000.0, 1491.34, 0.0);
      dormandPrince853Integrator0.getOrder();
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(8, (-1.0), (-0.0042527702905061394), (-1.0), 1491.34);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      adamsMoultonIntegrator0.addEventHandler(eventHandler1, (-1805.7452661286327), 1491.34, 8);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(8).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 40.0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-199.189750749493), (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator0.setOrderControl(1837, (-169.823683), 130);
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-4029.0));
      graggBulirschStoerIntegrator1.setOrderControl(130, 52.8172, 3327.11);
      ThreeEighthesIntegrator threeEighthesIntegrator1 = new ThreeEighthesIntegrator(4.547473508864641E-10);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      threeEighthesIntegrator1.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-563.52), doubleArray0, 182.83640004, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-199.189750749493), (-4029.0), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1126.17, (-1916.1106102371662), 52.8172, 3327.11);
      int int0 = graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-602.708086405), (-79.0), 6.265569375E11, (-199.189750749493));
      graggBulirschStoerIntegrator2.setOrderControl(705, (-1916.1106102371662), (-199.189750749493));
      dormandPrince54Integrator0.getStepHandlers();
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(3028.6870721150576);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-169.823683), doubleArray0, (-4029.0), doubleArray0);
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(3327.11, 6.265569375E11, 210.218351, 0.19827613256897345);
      HighamHall54Integrator highamHall54Integrator1 = new HighamHall54Integrator(0.6466736793518066, 753.8164393143, 1.1102230246251565E-13, 0.6466736793518066);
      int int1 = highamHall54Integrator1.getOrder();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-199.189750749493), (-4029.0), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-199.189750749493), (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(182.83640004, 0.19827613256897345, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator0.setOrderControl(1837, (-169.823683), 130);
      dormandPrince54Integrator0.getStepHandlers();
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(124.5561580274);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 124.5561580274;
      try { 
        threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 124.5561580274, doubleArray0, 52.8172, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = 1000.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1000.0, 0.0, 0.0, 0.5629583597183228);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      int int0 = (-405);
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 0.0, (-1678.2965750313), (-405));
      graggBulirschStoerIntegrator0.clearStepHandlers();
      double double1 = 1491.34;
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1491.34, 1000.0, 1491.34, 0.0);
      dormandPrince853Integrator0.getOrder();
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(8, (-1.0), (-0.0042527702905061394), (-1.0), 1491.34);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler1).g(anyDouble() , any(double[].class));
      adamsMoultonIntegrator0.addEventHandler(eventHandler1, (-1794.47172255), 1491.34, 8);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(8).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      adamsMoultonIntegrator0.integrate(expandableStatefulODE0, 0.0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-1.0), 2.2737367544323206E-10, (-624.9035010721688), 0.7712564472552892);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(eventHandler0).toString();
      highamHall54Integrator0.addEventHandler(eventHandler0, 4.94E-321, (-1.0), 1360);
      highamHall54Integrator0.getEventHandlers();
      highamHall54Integrator0.clearStepHandlers();
      Collection<EventHandler> collection0 = highamHall54Integrator0.getEventHandlers();
      assertTrue(collection0.contains(eventHandler0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3740.9886803978, (-2777.59175940488), 3740.9886803978, 3740.9886803978);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4267).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double0 = 40.0;
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 853.589016045);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-2031.5776), 2.38466765651207, 2.38466765651207, (-2542.96597244));
      highamHall54Integrator0.getEventHandlers();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-2031.5776);
      doubleArray0[1] = 2178.2666;
      doubleArray0[2] = (-2031.5776);
      doubleArray0[3] = (-2031.5776);
      HighamHall54Integrator highamHall54Integrator1 = new HighamHall54Integrator(2.5168480541429286E-241, (-2031.5776), doubleArray0, doubleArray0);
      highamHall54Integrator1.setStepSizeControl(2.5168480541429286E-241, (-2031.5776), (-27.076), (-2031.5776));
      // Undeclared exception!
      try { 
        highamHall54Integrator0.integrate((FirstOrderDifferentialEquations) null, (-27.076), doubleArray0, 2178.2666, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(127).when(secondOrderDifferentialEquations0).getDimension();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-131.7), (-131.7), 1333.415288674, 1057.934114418);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      MullerSolver mullerSolver0 = new MullerSolver(0.0);
      mullerSolver0.getMaxEvaluations();
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (double) 127, 1333.415288674, 681, (UnivariateSolver) mullerSolver0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.3574569976673652E-8);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 2587.4390844;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2587.4390844, 2587.4390844, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(130).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-4946.9469773354), doubleArray0, 2587.4390844, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 9 != 260
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-6.648490725635754E-8));
      midpointIntegrator0.setMaxEvaluations(477);
      double double0 = midpointIntegrator0.getCurrentSignedStepsize();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(4576.336123, (-2570.788630144977), 3024.17824076841, (-0.04471061572777259));
      dormandPrince54Integrator0.getEventHandlers();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2570.788630144977), (-43.48988418106996), (-4029.0), (-2656.08955836445));
      graggBulirschStoerIntegrator0.getEvaluations();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-592));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1263.8545291, (-2570.788630144977), 264.756678303, 130);
      graggBulirschStoerIntegrator1.setOrderControl((-592), (-592), 2.2737367544323206E-10);
      dormandPrince54Integrator0.getStepHandlers();
      dormandPrince54Integrator0.setMaxEvaluations((-592));
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizer stepNormalizer0 = new StepNormalizer(Double.NaN, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      double double0 = dormandPrince54Integrator0.getCurrentSignedStepsize();
      assertEquals(3429.9843837443555, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(Double.NaN);
      threeEighthesIntegrator0.getStepHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1221).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      GillIntegrator gillIntegrator0 = new GillIntegrator(Double.NaN);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = Double.NaN;
      double double0 = Double.NaN;
      doubleArray0[1] = Double.NaN;
      doubleArray0[2] = Double.NaN;
      double[] doubleArray1 = null;
      try { 
        gillIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter1, 1187.49650826, doubleArray0, 0.0, (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-6.648490725635754E-8));
      midpointIntegrator0.getEventHandlers();
      // Undeclared exception!
      try { 
        midpointIntegrator0.integrate((ExpandableStatefulODE) null, (-6.648490725635754E-8));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.3333333333333333;
      doubleArray0[1] = 0.3333333333333333;
      doubleArray0[2] = 0.3333333333333333;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.3333333333333333, 15.697238121770845, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1629);
      graggBulirschStoerIntegrator0.setMaxEvaluations(Integer.MAX_VALUE);
      graggBulirschStoerIntegrator0.setControlFactors((-2252.10062155), 255.06770541737, 0.3333333333333333, 15.697238121770845);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        expandableStatefulODE0.setPrimaryState(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3 != 0
         //
         verifyException("org.apache.commons.math3.ode.ExpandableStatefulODE", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1000.0, 0.0, 0.0, 62.5);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      double double0 = (-1678.2965750313);
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 0.0, (-1678.2965750313), (-405));
      graggBulirschStoerIntegrator0.clearStepHandlers();
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1491.34, 1000.0, 1491.34, 0.0);
      dormandPrince853Integrator0.getOrder();
      double double1 = (-0.0042527702905061394);
      double double2 = 0.0;
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(8, (-1.0), (-0.0042527702905061394), 0.0, 1491.34);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        adamsMoultonIntegrator0.integrate(expandableStatefulODE0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // matrix must have at least one column
         //
         verifyException("org.apache.commons.math3.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = (-1104.372);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 7.733432668472264;
      doubleArray0[1] = (-1104.372);
      doubleArray0[2] = (-1104.372);
      doubleArray0[3] = 7.733432668472264;
      doubleArray0[4] = 7.733432668472264;
      double double1 = 4228.408;
      doubleArray0[5] = 4228.408;
      doubleArray0[6] = (-1104.372);
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-1104.372), 7.733432668472264, doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1104.372));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 7
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = (-1953.5270021218323);
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-1953.5270021218323));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1953.5270021218323));
      try { 
        threeEighthesIntegrator0.integrate(expandableStatefulODE0, (-1953.5270021218323));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = 0.0;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 0.0, doubleArray0, doubleArray0);
      dormandPrince54Integrator0.clearEventHandlers();
      dormandPrince54Integrator0.clearStepHandlers();
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, 0.0, doubleArray0, doubleArray0);
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter((SecondOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-6.648490725635754E-8));
      double double0 = midpointIntegrator0.getCurrentStepStart();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(3277.439777746);
      midpointIntegrator0.clearEventHandlers();
      midpointIntegrator0.clearStepHandlers();
      midpointIntegrator0.getCurrentStepStart();
      midpointIntegrator0.getEventHandlers();
      midpointIntegrator0.getEventHandlers();
      midpointIntegrator0.clearStepHandlers();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 3277.439777746;
      doubleArray0[1] = 3277.439777746;
      doubleArray0[2] = Double.NaN;
      midpointIntegrator0.getStepHandlers();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1542.4032282, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(0, (-4023.81698), (-1542.401));
      graggBulirschStoerIntegrator0.getName();
      midpointIntegrator0.getMaxEvaluations();
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      graggBulirschStoerIntegrator0.getStepHandlers();
      midpointIntegrator0.setMaxEvaluations((-441));
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-3376.0), fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      NordsieckStepInterpolator nordsieckStepInterpolator0 = new NordsieckStepInterpolator();
      StepInterpolator stepInterpolator0 = nordsieckStepInterpolator0.copy();
      // Undeclared exception!
      try { 
        stepNormalizer0.handleStep(stepInterpolator0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GillIntegrator gillIntegrator0 = new GillIntegrator(2862.74);
      gillIntegrator0.getName();
      gillIntegrator0.getEvaluations();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2862.74, 0, 1963.8285765984026, 2862.74);
      graggBulirschStoerIntegrator0.setOrderControl(0, 1.1102230246251565E-13, 1.1368683772161603E-10);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, 0.0, 0.0, 0.0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      highamHall54Integrator0.clearStepHandlers();
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(141.59960599609, fixedStepHandler0);
      highamHall54Integrator0.addStepHandler(stepNormalizer0);
      doubleArray0[3] = 21.230051448181193;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      highamHall54Integrator0.setStepSizeControl(0.0, 0.0, 21.230051448181193, 0.0);
      highamHall54Integrator0.setStepSizeControl(0.0, 0.0, doubleArray0, doubleArray0);
      highamHall54Integrator0.getEventHandlers();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      highamHall54Integrator0.setStepSizeControl(21.230051448181193, (-1147.65), 0.0, 171.08995);
      FixedStepHandler fixedStepHandler1 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizer stepNormalizer1 = new StepNormalizer(0.0, fixedStepHandler1, stepNormalizerMode0);
      highamHall54Integrator0.addStepHandler(stepNormalizer1);
      highamHall54Integrator0.addEventHandler(eventHandler0, (-1147.65), 0.0, (-1363), (UnivariateSolver) null);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1.0), (-600.29914469), (-600.29914469));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-1363));
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2587.4390844;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2587.4390844, 2587.4390844, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-4946.9469773354), doubleArray0, 2587.4390844, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double double0 = 0.0;
      GillIntegrator gillIntegrator0 = new GillIntegrator(0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      try { 
        gillIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-1.0), (-1.0), 0.0, 0.0);
      dormandPrince853Integrator0.setMinReduction((-1.0));
      dormandPrince853Integrator0.getMaxEvaluations();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = (double) Integer.MAX_VALUE;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = (double) Integer.MAX_VALUE;
      doubleArray0[4] = 0.0;
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (-1.0);
      doubleArray1[3] = (-1.0);
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.initializeStep(false, Integer.MAX_VALUE, doubleArray0, 0.0, doubleArray1, doubleArray0, doubleArray1, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1690.20884);
      doubleArray0[1] = (-1690.20884);
      doubleArray0[2] = (-1053.56);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1053.56), (-1690.20884), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepSizeControl((-3.75), 624.632, doubleArray0, doubleArray0);
      int int0 = 0;
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.computeDerivatives(0.20136540080403034, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-2031.5776), 2.38466765651207, 2.38466765651207, (-2542.96597244));
      highamHall54Integrator0.getEventHandlers();
      highamHall54Integrator0.setStepSizeControl((-159.14304753524), (-2542.96597244), (-159.14304753524), 2178.2666);
      highamHall54Integrator0.clearStepHandlers();
      highamHall54Integrator0.getEventHandlers();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-2128.67383);
      doubleArray0[1] = (-159.14304753524);
      doubleArray0[2] = (-2031.5776);
      doubleArray0[3] = (-159.14304753524);
      doubleArray0[4] = 2.38466765651207;
      doubleArray0[5] = 2.38466765651207;
      doubleArray0[6] = 2178.2666;
      doubleArray0[7] = 2.38466765651207;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2128.67383), 2178.2666, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 0);
      assertEquals(2178.2666, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator((-904.05407912119));
      classicalRungeKuttaIntegrator0.setMaxEvaluations((-1687));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(Double.NaN, (-904.05407912119), 764.8218716527606, (-904.05407912119));
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      Collection<EventHandler> collection0 = graggBulirschStoerIntegrator0.getEventHandlers();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator((-904.0));
      classicalRungeKuttaIntegrator0.getStepHandlers();
      classicalRungeKuttaIntegrator0.setMaxEvaluations((-1687));
      assertEquals(Double.NaN, classicalRungeKuttaIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, classicalRungeKuttaIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-563.52), (-199.189750749493), (-4029.0), (-563.52));
      dormandPrince54Integrator0.setInitialStepSize(0.19827613256897345);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1126.17, (-1916.1106102371662), 52.8172, 3327.11);
      graggBulirschStoerIntegrator0.getEvaluations();
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = null;
      try {
        adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(0, 2674.6, 0, 1.2995814853898995E-24, (-199.189750749493));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // multistep method needs at least 0 previous steps, got 2
         //
         verifyException("org.apache.commons.math3.ode.MultistepIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(4576.336123, (-2570.788630144977), 3024.17824076841, (-0.04471061572777259));
      dormandPrince54Integrator0.getEventHandlers();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2570.788630144977), (-43.48988418106996), (-4029.0), (-2656.08955836445));
      graggBulirschStoerIntegrator0.getEvaluations();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator0.setOrderControl(130, (-4029.0), 3024.17824076841);
      dormandPrince54Integrator0.getStepHandlers();
      dormandPrince54Integrator0.setMaxEvaluations((-173));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1000.0, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-458.35694), (-458.35694), 156.283035, (-1550.347));
      dormandPrince54Integrator0.setMaxEvaluations(0);
      dormandPrince54Integrator0.addEventHandler((EventHandler) null, 156.283035, (-865.6543), (-761), (UnivariateSolver) null);
      dormandPrince54Integrator0.getMaxEvaluations();
      dormandPrince54Integrator0.getMaxEvaluations();
      dormandPrince54Integrator0.setMaxEvaluations(304);
      dormandPrince54Integrator0.getCurrentStepStart();
      dormandPrince54Integrator0.getOrder();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4784.0, (-2697.74994), 0.0, (-761));
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(0, 0.0, 304, 0);
      dormandPrince54Integrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setOrderControl(0, (-1123.6658805), 0.0);
      dormandPrince54Integrator0.clearStepHandlers();
      assertEquals(5, dormandPrince54Integrator0.getOrder());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-738.0);
      doubleArray0[1] = (-738.0);
      doubleArray0[2] = (-738.0);
      doubleArray0[3] = 2016.122;
      doubleArray0[4] = 2016.122;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-738.0), 2016.122, doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 2016.122, (-738.0), 3089);
      graggBulirschStoerIntegrator0.setInitialStepSize((-738.0));
      ExpandableStatefulODE expandableStatefulODE0 = null;
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, (-738.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double double0 = 0.0;
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1011.686169731, 1011.686169731, 1011.686169731, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = null;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1011.686169731;
      dormandPrince853Integrator0.setStepSizeControl(1011.686169731, 1011.686169731, doubleArray0, doubleArray0);
      doubleArray0[1] = 0.0;
      double double1 = 459.418680238468;
      dormandPrince853Integrator0.setMaxGrowth(459.418680238468);
      dormandPrince853Integrator0.setSafety(0.0);
      ExpandableStatefulODE expandableStatefulODE0 = null;
      try {
        expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.ExpandableStatefulODE", e);
      }
  }
}
