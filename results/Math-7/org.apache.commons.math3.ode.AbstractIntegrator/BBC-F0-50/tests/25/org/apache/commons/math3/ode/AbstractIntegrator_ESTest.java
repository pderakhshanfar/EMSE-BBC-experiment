/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 18 06:43:56 GMT 2021
 */

package org.apache.commons.math3.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.RiddersSolver;
import org.apache.commons.math3.analysis.solvers.SecantSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator;
import org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math3.ode.nonstiff.EulerIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math3.ode.nonstiff.MidpointIntegrator;
import org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractIntegrator_ESTest extends AbstractIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1789.14);
      RiddersSolver riddersSolver0 = new RiddersSolver(1789.14);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      graggBulirschStoerIntegrator0.getEventHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 2.7755575615628914E-14, doubleArray0, 0.4151833653450012, doubleArray0);
      graggBulirschStoerIntegrator0.getCurrentSignedStepsize();
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 852.6473488492;
      doubleArray1[1] = (double) 579;
      graggBulirschStoerIntegrator0.computeDerivatives(1789.14, doubleArray1, doubleArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1789.14);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 1789.14);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver(1789.14);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((double)579, 657.82295721).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 561.4726743533319, 852.6473488492, 579, (UnivariateSolver) riddersSolver0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(eventHandler1).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, (double) Integer.MAX_VALUE, (double) 579, 461, (UnivariateSolver) riddersSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-1.0), doubleArray0, 0.0, doubleArray0);
      graggBulirschStoerIntegrator0.getCurrentSignedStepsize();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1716).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.0);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 3023.1855627, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.getCurrentSignedStepsize();
      midpointIntegrator0.getName();
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 1716);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1153.2329749);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      graggBulirschStoerIntegrator0.getEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver(1153.2329749);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      graggBulirschStoerIntegrator0.getEventHandlers();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(3262.5970876, 2398.805607086).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (double) 461, (double) 94, Integer.MAX_VALUE, (UnivariateSolver) riddersSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 2.7755575615628914E-14, doubleArray0, 0.4151833653450012, doubleArray0);
      graggBulirschStoerIntegrator0.getCurrentSignedStepsize();
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(Double.NaN, 94, doubleArray0, doubleArray0);
      dormandPrince853Integrator0.getOrder();
      graggBulirschStoerIntegrator0.getEvaluations();
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(8, 0, 1096.633056640625, 94, 1.5579321384429932);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        adamsBashforthIntegrator0.integrate(expandableStatefulODE0, (double) 21);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // matrix must have at least one column
         //
         verifyException("org.apache.commons.math3.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = 657.82295721;
      double double1 = 4212.27906532452;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1789.14);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 1789.14);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver(1789.14);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((double)579, 657.82295721, (-1655.6920392), (double)94).when(eventHandler0).g(anyDouble() , any(double[].class));
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(461);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      midpointIntegrator0.addEventHandler(eventHandler0, (-359.77488), 1077.26, (-2320), (UnivariateSolver) riddersSolver0);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        midpointIntegrator0.integrate(expandableStatefulODE0, (-1.0));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2,320) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1789.14);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 1789.14);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver(1789.14);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-1274.5162677980918));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(1.0);
      midpointIntegrator0.integrate(expandableStatefulODE0, 1647.3497704374);
      graggBulirschStoerIntegrator0.setOrderControl((-1094), 4212.27906532452, (-642.153834));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1789.14);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver(1789.14);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      graggBulirschStoerIntegrator0.getEventHandlers();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((double)579, 657.82295721).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 561.4726743533319, 852.6473488492, 579, (UnivariateSolver) riddersSolver0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(eventHandler1).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, (double) 461, (double) 94, Integer.MAX_VALUE, (UnivariateSolver) riddersSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 2.7755575615628914E-14, doubleArray0, 0.4151833653450012, doubleArray0);
      graggBulirschStoerIntegrator0.getCurrentSignedStepsize();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1789.14);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 1789.14);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.0), 461);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 561.4726743533319, 852.6473488492, 579, (UnivariateSolver) riddersSolver0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-2200.78759), 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setStabilityCheck(false, (-598), (-598), 1691.6805958);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator(6265.853465324521, Integer.MAX_VALUE, 0.0, 2288.799799535099);
      graggBulirschStoerIntegrator2.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (double) 461, doubleArray0, (-1.0), doubleArray0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator2.integrate(expandableStatefulODE0, 1691.6805958);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(125.7848805035);
      midpointIntegrator0.getCurrentStepStart();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1413).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.0);
      midpointIntegrator0.getCurrentStepStart();
      // Undeclared exception!
      midpointIntegrator0.integrate(expandableStatefulODE0, 0.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-2.321064927632431E-160));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(1.0705673935006142E-106, Double.NaN);
      midpointIntegrator0.addEventHandler(eventHandler0, 211.804562501732, (-2.321064927632431E-160), Integer.MAX_VALUE, (UnivariateSolver) mullerSolver2_0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      midpointIntegrator0.integrate(expandableStatefulODE0, 1000.0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      int int0 = 461;
      int int1 = 97;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.533744535499, 1789.14);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 97, 1789.14);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      int int2 = 0;
      RiddersSolver riddersSolver0 = new RiddersSolver(1789.14);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((double)579, 657.82295721, (-1655.6920392), 2288.799799535099, 0.795139791634979).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 561.4726743533319, 852.6473488492, 579, (UnivariateSolver) riddersSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 997, 0, 2.320822576772103E-287);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-946.80109731893), doubleArray0, 2.320822576772103E-287, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [-945.801, \uFFFD], values: [0.795, 0.795]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-128.3464474));
      midpointIntegrator0.getEventHandlers();
      // Undeclared exception!
      try { 
        midpointIntegrator0.integrate((ExpandableStatefulODE) null, (-128.3464474));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      int int0 = 461;
      int int1 = 94;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1789.14);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 1789.14);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      int int2 = 0;
      RiddersSolver riddersSolver0 = new RiddersSolver(1789.14);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((double)579, 657.82295721, (-1655.6920392), 2288.799799535099, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 561.4726743533319, 852.6473488492, 579, (UnivariateSolver) riddersSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 997, 0, 2.320822576772103E-287);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-946.80109731893), doubleArray0, 2.320822576772103E-287, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      int int0 = 461;
      int int1 = 94;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(657.82295721, (-1.0), 4212.27906532452, 1789.14);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 1789.14);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      int int2 = 0;
      RiddersSolver riddersSolver0 = new RiddersSolver(1789.14);
      graggBulirschStoerIntegrator0.setOrderControl(579, 852.6473488492, 579);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 561.4726743533319, 852.6473488492, 579, (UnivariateSolver) riddersSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 997, 0, 2.320822576772103E-287);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-946.80109731893), doubleArray0, 2.320822576772103E-287, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4212.27906532452), (-4212.27906532452), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 461);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.2));
      graggBulirschStoerIntegrator0.setOrderControl(0, (-2366.38110441), (-1084.0));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-4212.27906532452), (-4212.27906532452), 0, (UnivariateSolver) riddersSolver0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, (-4212.27906532452), (double) 0, 94);
      double double0 = 0.0;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 94, 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) Integer.MAX_VALUE;
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter1, 2653.35, doubleArray0, 863.0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4212.27906532452), (-4212.27906532452), doubleArray0, doubleArray0);
      int int0 = 94;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 461);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver(6.612555731556604E159);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(579.25, (-1.0), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.addEventHandler(eventHandler0, 4061.3882694, (-1.2), Integer.MAX_VALUE, (UnivariateSolver) riddersSolver0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator1.addEventHandler(eventHandler1, 2.1474836482E9, (-4212.27906532452), Integer.MAX_VALUE);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator(0.0, (-1.0), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator2.setStabilityCheck(true, 0, 1, 0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator2.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (double) 461, doubleArray0, (-666.9376023148), doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-2492.4);
      doubleArray0[1] = (-2492.4);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2492.4);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.5640419864850202E-145, (-2492.4), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver(Integer.MAX_VALUE);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 1395.0229990127132, (-2492.4), Integer.MAX_VALUE, (UnivariateSolver) riddersSolver0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      int int0 = 1476;
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, 1395.0229990127132, (-1.2), 1476);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1476, (-1055), (-29.26827));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray1 = new double[19];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) Integer.MAX_VALUE;
      doubleArray1[2] = 1.5640419864850202E-145;
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-29.26827), doubleArray1, (double) 1476, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 19 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4212.27906532452), (-4212.27906532452), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2143);
      boolean boolean0 = true;
      int int0 = 94;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 461);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      int int1 = 0;
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.2));
      graggBulirschStoerIntegrator0.setOrderControl(0, (-2366.38110441), (-1084.0));
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, (-4212.27906532452), (double) 0, 94);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 94, 0.0);
      EvoSuiteFile evoSuiteFile0 = null;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-383.829), doubleArray0, 1000.0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-1.5584005745360519), (-1.5584005745360519), (-1.5584005745360519), 0.0);
      highamHall54Integrator0.setMaxEvaluations((-28));
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = null;
      try {
        adamsBashforthIntegrator0 = new AdamsBashforthIntegrator((-28), (-1.5584005745360519), 0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // multistep method needs at least -28 previous steps, got 2
         //
         verifyException("org.apache.commons.math3.ode.MultistepIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4212.27906532452), (-4212.27906532452), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 461);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eventHandler0).toString();
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.2));
      graggBulirschStoerIntegrator0.setOrderControl(0, (-2366.38110441), (-1084.0));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-4212.27906532452), (-4212.27906532452), 0, (UnivariateSolver) riddersSolver0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1608.6079390632315), (-2057.0), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(true, 2329);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-3.0399439534134115E97), fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator1.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.getEventHandlers();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4212.27906532452), (-4212.27906532452), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 461);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      int int0 = 0;
      double double0 = (-1.2);
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.2));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-4212.27906532452), (-4212.27906532452), 0, (UnivariateSolver) riddersSolver0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, (-4212.27906532452), (double) 0, 94);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 94, 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 272.77326984, doubleArray0, (double) 0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2004.709);
      doubleArray0[1] = (-1734.8599594067066);
      doubleArray0[2] = (-1734.8599594067066);
      doubleArray0[3] = (-2004.709);
      doubleArray0[4] = (-65.48047982);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1734.8599594067066), (-2004.709), doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      MullerSolver mullerSolver0 = new MullerSolver();
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1734.8599594067066), 2.2737367544323206E-10, 0.0, (-65.48047982));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 108, 1, (-461.3198308));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (double) 1, doubleArray0, (-719.1055), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 5 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = (-4212.27906532452);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4212.27906532452), (-4212.27906532452), doubleArray0, doubleArray0);
      int int0 = 461;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 461);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.2));
      graggBulirschStoerIntegrator0.setOrderControl(0, (-2366.38110441), (-1084.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-497.29154), 94, doubleArray0, doubleArray0);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      dormandPrince54Integrator0.getStepHandlers();
      // Undeclared exception!
      dormandPrince54Integrator0.integrate(expandableStatefulODE1, 1040.9543);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-2492.4);
      doubleArray0[1] = (-2492.4);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2492.4);
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, (-2492.4), doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      highamHall54Integrator0.setMaxEvaluations(2147483645);
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      stepNormalizer0.init((-0.5), doubleArray0, 0.0);
      highamHall54Integrator0.addStepHandler(stepNormalizer0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2492.4), 1920.526376554, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-300));
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.getEventHandlers();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4212.27906532452), (-4212.27906532452), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 461);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      int int0 = 0;
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.2));
      graggBulirschStoerIntegrator0.setOrderControl(0, (-2366.38110441), (-1084.0));
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, (-4212.27906532452), (double) 0, 94);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 94, 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(94).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 1585.57325113, doubleArray0, 1585.57325113, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 188
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = 1291.181233;
      double double1 = 0.0;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1291.181233;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1291.181233, 0.0, doubleArray0, doubleArray0);
      dormandPrince54Integrator0.getEvaluations();
      dormandPrince54Integrator0.getStepHandlers();
      dormandPrince54Integrator0.setMaxEvaluations(0);
      try { 
        dormandPrince54Integrator0.computeDerivatives(1291.181233, doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded
         //
         verifyException("org.apache.commons.math3.util.Incrementor$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2004.709);
      doubleArray0[1] = (-1734.8599594067066);
      doubleArray0[2] = (-1734.8599594067066);
      doubleArray0[3] = (-2004.709);
      double double0 = (-65.48047982);
      doubleArray0[4] = (-65.48047982);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1734.8599594067066), (-2004.709), doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        dormandPrince54Integrator0.integrate(expandableStatefulODE0, (-319.36797));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 5
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(1.0);
      threeEighthesIntegrator0.getEvaluations();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 527.8081592054236;
      doubleArray0[1] = 527.8081592054236;
      doubleArray0[2] = 527.8081592054236;
      doubleArray0[3] = 527.8081592054236;
      doubleArray0[4] = 527.8081592054236;
      doubleArray0[5] = 527.8081592054236;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(527.8081592054236, 2515.48903, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 0, 527.8081592054236);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 0.0, 2750.2, 0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, (double) 0, 527.8081592054236, 0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 209);
      threeEighthesIntegrator0.getMaxEvaluations();
      graggBulirschStoerIntegrator0.setOrderControl(0, (-1357.0), (-2798.839));
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.getCurrentSignedStepsize();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4212.27906532452), (-4212.27906532452), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 461, 94, 461);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      int int0 = 0;
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.2));
      graggBulirschStoerIntegrator0.setOrderControl(0, (-2366.38110441), (-1084.0));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-4212.27906532452), (-4212.27906532452), 0, (UnivariateSolver) riddersSolver0);
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler1, (-4212.27906532452), (double) 0, 94);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 94, 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 1585.57325113, doubleArray0, 1585.57325113, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(5.6843418860808015E-11);
      midpointIntegrator0.getMaxEvaluations();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      midpointIntegrator0.getCurrentSignedStepsize();
      midpointIntegrator0.getEventHandlers();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(5.6843418860808015E-11, Integer.MAX_VALUE, Double.NaN, Double.NaN);
      dormandPrince54Integrator0.setMaxEvaluations(Integer.MAX_VALUE);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 5.6843418860808015E-11;
      doubleArray0[1] = (double) Integer.MAX_VALUE;
      dormandPrince54Integrator0.setStepSizeControl(1000.0, (-2207.300304800562), doubleArray0, doubleArray0);
      dormandPrince54Integrator0.getOrder();
      // Undeclared exception!
      try { 
        midpointIntegrator0.computeDerivatives(246.22, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-3700.51);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-3700.51);
      midpointIntegrator0.getStepHandlers();
      doubleArray0[3] = (-3700.51);
      // Undeclared exception!
      try { 
        midpointIntegrator0.integrate((FirstOrderDifferentialEquations) null, (-3700.51), doubleArray0, 5.6843418860808015E-11, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = (-299.3694841934);
      double double1 = 0.0;
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-299.3694841934), 0.0, (-299.3694841934), (-32.53));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(1275.585512478334, fixedStepHandler0);
      highamHall54Integrator0.addStepHandler(stepNormalizer0);
      double double2 = 0.0;
      highamHall54Integrator0.setMinReduction(0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 1275.585512478334;
      doubleArray0[2] = (-299.3694841934);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 564.28687414443;
      doubleArray0[7] = (-299.3694841934);
      doubleArray0[8] = 0.0;
      stepNormalizer0.init((-32.53), doubleArray0, (-32.53));
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        highamHall54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-299.3694841934), (double[]) null, 1.0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double double0 = 0.0;
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.0);
      double double1 = 1000.0;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1000.0, fixedStepHandler0, stepNormalizerBounds0);
      midpointIntegrator0.addStepHandler(stepNormalizer0);
      midpointIntegrator0.getEventHandlers();
      midpointIntegrator0.clearEventHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      midpointIntegrator0.integrate(expandableStatefulODE0, 1000.0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.0);
      midpointIntegrator0.getEventHandlers();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(0.0);
      threeEighthesIntegrator0.getEventHandlers();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      double double0 = 0.0;
      int int0 = 0;
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = null;
      try {
        bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-1205.3), 0.0, 897.1554, (-3843));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3,843 is smaller than the minimum (2)
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(1265.0, 0.0, 0.0, (-2970.29594876355));
      highamHall54Integrator0.clearEventHandlers();
      assertEquals(5, highamHall54Integrator0.getOrder());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double double0 = 0.0;
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, 0.0, 0.0, 0.0);
      highamHall54Integrator0.clearStepHandlers();
      highamHall54Integrator0.setMaxEvaluations(0);
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = null;
      try {
        adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(0, 0.0, 0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // multistep method needs at least 0 previous steps, got 2
         //
         verifyException("org.apache.commons.math3.ode.MultistepIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double double0 = 0.0;
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, 0.0, doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      dormandPrince853Integrator0.addEventHandler(eventHandler0, 0.0, 348.696989841443, 0);
      dormandPrince853Integrator0.clearEventHandlers();
      dormandPrince853Integrator0.getEvaluations();
      dormandPrince853Integrator0.clearStepHandlers();
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.computeDerivatives(0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EulerIntegrator eulerIntegrator0 = new EulerIntegrator(6.8812326946963);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-3.0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-3.0);
      doubleArray1[1] = 6.8812326946963;
      doubleArray1[2] = 6.8812326946963;
      doubleArray1[3] = 6.8812326946963;
      doubleArray1[4] = (-3.0);
      // Undeclared exception!
      try { 
        eulerIntegrator0.computeDerivatives((-3.0), doubleArray0, doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, (-247.46400672018), 73.0, (-247.46400672018));
      dormandPrince54Integrator0.addStepHandler((StepHandler) null);
      double double0 = 2897.0;
      dormandPrince54Integrator0.getStepHandlers();
      double[] doubleArray0 = new double[1];
      dormandPrince54Integrator0.setSafety((-2642.11228679));
      doubleArray0[0] = 73.0;
      // Undeclared exception!
      try { 
        dormandPrince54Integrator0.computeDerivatives(2897.0, doubleArray0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = (-5136.089);
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator((-5136.089));
      // Undeclared exception!
      try { 
        classicalRungeKuttaIntegrator0.integrate((ExpandableStatefulODE) null, (-5136.089));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator((-2597.86276547582));
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(4.1358029739592175E30, (-2597.86276547582), (-2597.86276547582), (-1525.519306));
      dormandPrince853Integrator0.getOrder();
      dormandPrince853Integrator0.clearEventHandlers();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      dormandPrince853Integrator0.getOrder();
      threeEighthesIntegrator0.getStepHandlers();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1.4210854715202004E-11;
      doubleArray0[1] = 4.1358029739592175E30;
      doubleArray0[2] = (-1525.519306);
      doubleArray0[3] = 4.1358029739592175E30;
      doubleArray0[4] = 1.4210854715202004E-11;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1568.43729313), 1.4210854715202004E-11, doubleArray0, doubleArray0);
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1.4210854715202004E-11, (FixedStepHandler) null, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(1568.43729313, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.5);
      SecantSolver secantSolver0 = new SecantSolver(0.5, 1949.0981424015456);
      midpointIntegrator0.addEventHandler((EventHandler) null, 0.5, 0.5, 0, (UnivariateSolver) secantSolver0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 1949.0981424015456;
      doubleArray0[2] = 0.5;
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.5, (-571.08261443245), doubleArray0, doubleArray0);
      dormandPrince853Integrator0.getOrder();
      midpointIntegrator0.getStepHandlers();
      midpointIntegrator0.clearEventHandlers();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double double0 = 0.0;
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, 0.0, 0.0, 0.0);
      highamHall54Integrator0.clearStepHandlers();
      highamHall54Integrator0.addEventHandler((EventHandler) null, 0.0, 4046.6374252151354, (-5764));
      highamHall54Integrator0.setMaxEvaluations(0);
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = null;
      try {
        adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(0, 0.0, 0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // multistep method needs at least 0 previous steps, got 2
         //
         verifyException("org.apache.commons.math3.ode.MultistepIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(819.086024);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 5169.526637;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 180.0;
      doubleArray0[3] = 819.086024;
      doubleArray0[4] = 819.086024;
      doubleArray0[5] = 5169.526637;
      doubleArray0[6] = 819.086024;
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(5169.526637, 5169.526637, doubleArray0, doubleArray0);
      int int0 = dormandPrince853Integrator0.getEvaluations();
      dormandPrince853Integrator0.setMinReduction(5169.526637);
      dormandPrince853Integrator0.setStepSizeControl(2119.332, 0.0, doubleArray0, doubleArray0);
      dormandPrince853Integrator0.setMaxGrowth(688.71614633);
      dormandPrince853Integrator0.getOrder();
      int int1 = dormandPrince853Integrator0.getOrder();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator(0.0);
      classicalRungeKuttaIntegrator0.getEvaluations();
      classicalRungeKuttaIntegrator0.getStepHandlers();
      classicalRungeKuttaIntegrator0.getEvaluations();
      classicalRungeKuttaIntegrator0.getName();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 0.0;
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, 0.0, doubleArray0, doubleArray1);
      dormandPrince853Integrator0.setStepSizeControl((-1.0), 789.8476718, (double) 0, 0.0);
      dormandPrince853Integrator0.setSafety((-1073.02226760764));
      dormandPrince853Integrator0.setInitialStepSize(0.0);
      dormandPrince853Integrator0.getOrder();
      dormandPrince853Integrator0.getCurrentStepStart();
      classicalRungeKuttaIntegrator0.addEventHandler((EventHandler) null, (double) 0, 0.0, 0);
      classicalRungeKuttaIntegrator0.getName();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      classicalRungeKuttaIntegrator0.addEventHandler((EventHandler) null, 0.0, 146.83284118653756, 8, (UnivariateSolver) illinoisSolver0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 3808.49, (-893.951951435));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.0);
      midpointIntegrator0.getName();
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, (-2144.95581), (-25.69393346270375), 0.0);
      highamHall54Integrator0.setMaxEvaluations(0);
      highamHall54Integrator0.getOrder();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1168.7, 0, (-2.0), 127.5);
      graggBulirschStoerIntegrator0.setOrderControl(5, 668.6, (-1035.53187901));
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }
}
