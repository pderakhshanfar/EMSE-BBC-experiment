/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 00:20:04 GMT 2021
 */

package org.apache.commons.math3.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.PegasusSolver;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator;
import org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator;
import org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math3.ode.nonstiff.EulerIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math3.ode.nonstiff.MidpointIntegrator;
import org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractIntegrator_ESTest extends AbstractIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, 1989.244532051502);
      graggBulirschStoerIntegrator0.getEvaluations();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getEventHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.42268232132379197, doubleArray0, (double) 0, doubleArray0);
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1989.244532051502);
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 1989.244532051502, (double) 0, 150, (UnivariateSolver) regulaFalsiSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(150, 150, (-206.1653191511024), 150, 0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter1);
      expandableStatefulODE0.setTime((-1.2023077889892748E196));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1304.888134459929, 2895.0322994734083, 6.0, (-45.0));
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1.2023077889892748E196));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator(1989.244532051502);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0, 5.6843418860808015E-11, (-2573.71), 2020.69);
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(5.6843418860808015E-11);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2020.69, 1989.244532051502, 5.6843418860808015E-11, (-980.627950735617));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator1.addEventHandler(eventHandler0, 2594.50944822013, 2020.69, (-1792), (UnivariateSolver) regulaFalsiSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(150);
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 1622.27739488);
      graggBulirschStoerIntegrator0.getEventHandlers();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, (-1201.510122516997));
      graggBulirschStoerIntegrator0.getEvaluations();
      EventHandler.Action eventHandler_Action0 = EventHandler.Action.RESET_STATE;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(eventHandler_Action0).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      doReturn((-3605.919), 1989.244532051502, (double)0, (-2707.135), (-206.1653191511024)).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1989.244532051502);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1622.27739488, (-3605.919), 2594.50944822013, 1989.244532051502);
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 1989.244532051502, (double) 0, 150, (UnivariateSolver) regulaFalsiSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(2895.0322994734083);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1622.27739488);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [\uFFFD, 1,622.277], values: [-206.165, -206.165]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, (-1201.510122516997));
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1989.244532051502);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-248.227463975768), (-1201.510122516997), (-206.1653191511024), 7.509818105173167);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-2707.135), 1482.98244228773, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator2.integrate(expandableStatefulODE0, 0.5051454305648804);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator(1989.244532051502);
      double double0 = (-2573.71);
      double double1 = (-3213.76973);
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-3213.76973), 1989.244532051502, 1989.244532051502, (-3213.76973));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      double double2 = 0.0;
      dormandPrince853Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, 1989.244532051502, doubleArray0);
      double double3 = (-0.42268232132379197);
      // Undeclared exception!
      dormandPrince853Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-265.930043716819), doubleArray0, (-0.42268232132379197), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, (-1201.510122516997));
      graggBulirschStoerIntegrator0.getEvaluations();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((EventHandler.Action) null).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      doReturn((-3605.919), 1989.244532051502, (double)0, (-2707.135), (-206.1653191511024)).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1989.244532051502);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1622.27739488, (-3605.919), 2594.50944822013, 1989.244532051502);
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 1989.244532051502, (double) 0, 150, (UnivariateSolver) regulaFalsiSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(2895.0322994734083);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1622.27739488);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,622.277, 1,622.277]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, (-1201.510122516997));
      graggBulirschStoerIntegrator0.getEvaluations();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1989.244532051502);
      double double0 = 1622.27739488;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1622.27739488, (-3605.919), 2594.50944822013, 1989.244532051502);
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-1.0965249168570443E-7), (double) 0, 150, (UnivariateSolver) regulaFalsiSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double[] doubleArray0 = expandableStatefulODE0.getCompleteState();
      expandableStatefulODE0.getSecondaryMappers();
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(1, 652.0, 1033.37616596047, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        adamsBashforthIntegrator0.integrate(expandableStatefulODE0, (-206.1653191511024));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = 0.0;
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(462.182, 2505.01050194, 0.0, (-3213.76973));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      dormandPrince853Integrator0.addStepHandler(dummyStepHandler0);
      dormandPrince853Integrator0.setMaxGrowth(3127.99447);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (-2573.71);
      doubleArray1[1] = (-1647.181452615);
      doubleArray1[2] = 1989.244532051502;
      doubleArray1[3] = (-2573.71);
      try { 
        dormandPrince853Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 1989.244532051502, doubleArray0, 2505.01050194, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator(1989.244532051502);
      double double0 = (-2573.71);
      double double1 = (-3213.76973);
      double double2 = (-1647.181452615);
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-3213.76973), (-3476.016552537787), (-3476.016552537787), (-1647.181452615));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      dormandPrince853Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, (-1647.181452615), doubleArray0);
      double double3 = (-0.42268232132379197);
      // Undeclared exception!
      dormandPrince853Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-265.930043716819), doubleArray0, (-0.42268232132379197), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, (-1201.510122516997));
      graggBulirschStoerIntegrator0.getEvaluations();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1989.244532051502);
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-1201.510122516997), (-206.1653191511024), (-1201.510122516997), 0);
      dormandPrince853Integrator0.getOrder();
      DormandPrince853Integrator dormandPrince853Integrator1 = new DormandPrince853Integrator((-3605.919), 1989.244532051502, (-2.3574653182047758E-7), (-3063.8000744));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        dormandPrince853Integrator1.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 2895.0322994734083, doubleArray0, (double) 0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, (-1201.510122516997));
      graggBulirschStoerIntegrator0.getEvaluations();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((-3605.919), 1989.244532051502, (double)0, (-2707.135), (-206.1653191511024)).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1989.244532051502);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1622.27739488, 0.0, 2594.50944822013, (-144.4343388));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-1.0965249168570443E-7), fixedStepHandler0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-1.0965249168570443E-7), 1.3286716938018799, 150, (UnivariateSolver) regulaFalsiSolver0);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 2146742121, 1, 0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getSecondaryMappers();
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1005.8573358);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator(1989.244532051502);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1.021716833114624, 257.997543290322, (-2573.71));
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1989.244532051502, 257.997543290322, 1782.8686957154912, 411.74794075207836);
      dormandPrince853Integrator0.getOrder();
      DormandPrince853Integrator dormandPrince853Integrator1 = new DormandPrince853Integrator(1782.8686957154912, 411.74794075207836, 411.74794075207836, (-2573.71));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      dormandPrince853Integrator1.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-1314.08), doubleArray0, 257.997543290322, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(1989.244532051502);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eventHandler0).toString();
      midpointIntegrator0.getEventHandlers();
      midpointIntegrator0.addEventHandler(eventHandler0, 1989.244532051502, 1989.244532051502, 878);
      midpointIntegrator0.getEventHandlers();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, (-1201.510122516997));
      graggBulirschStoerIntegrator0.getEvaluations();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((-1268.1570280387364), 4.547473508864641E-10, 4.547473508864641E-10, (-1201.510122516997), 4.547473508864641E-10).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(3585.212);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1622.27739488, 0.0, 2594.50944822013, (-144.4343388));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-1.0965249168570443E-7), 1.3286716938018799, 150, (UnivariateSolver) regulaFalsiSolver0);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 2146742121, 1, 0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getSecondaryMappers();
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1005.8573358);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [\uFFFD, \uFFFD], values: [0, 0]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1989.244532051502, 1989.244532051502, 1989.244532051502, (-1201.510122516997));
      graggBulirschStoerIntegrator0.getEvaluations();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((-3605.919), 1989.244532051502, (double)0, (-2707.135), (-206.1653191511024)).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1989.244532051502);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1622.27739488, 0.0, 2594.50944822013, (-144.4343388));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (-1.0965249168570443E-7), 1.3286716938018799, 150, (UnivariateSolver) regulaFalsiSolver0);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 2146742121, 1, 0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getSecondaryMappers();
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1005.8573358);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4089.793777951), (-4089.793777951), (-2760.0), Double.NaN);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-778), (-778), 4.547473508864641E-10);
      BrentSolver brentSolver0 = new BrentSolver(3457.362965417555);
      double double0 = 3457.362965417555;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-737.9), 3457.362965417555, (-737.9), 4.547473508864641E-10);
      graggBulirschStoerIntegrator1.getEvaluations();
      double double1 = 3093.223668679;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator1.addEventHandler(eventHandler0, 4.547473508864641E-10, 4.547473508864641E-10, 2251, (UnivariateSolver) brentSolver0);
      int int0 = 4380;
      double double2 = 0.0;
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(4.547473508864641E-10, 0, (-3478.445356834468), 0.0);
      dormandPrince853Integrator0.getOrder();
      double double3 = 1484.9677005265917;
      DormandPrince853Integrator dormandPrince853Integrator1 = new DormandPrince853Integrator((-513.4078), 4.547473508864641E-10, 1484.9677005265917, Double.NaN);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      dormandPrince853Integrator1.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (double) 4380, doubleArray0, 1484.9677005265917, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(1989.244532051502);
      midpointIntegrator0.setMaxEvaluations(0);
      midpointIntegrator0.getEvaluations();
      midpointIntegrator0.getEventHandlers();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1000.0, 0.0, 1919.264053658);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 184, Integer.MAX_VALUE, 1919.264053658);
      BrentSolver brentSolver0 = new BrentSolver(1255.755467948498);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, (-1814.39606), (double)Integer.MAX_VALUE).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.getEvaluations();
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 1255.755467948498, 7.663353127378024E218, (-901), (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-901), 36, 1255.755467948498);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1919.264053658);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-901) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(1989.244532051502);
      midpointIntegrator0.getEvaluations();
      midpointIntegrator0.getEventHandlers();
      midpointIntegrator0.getCurrentStepStart();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(Double.NaN, 3457.362965417555, (-1617.6952718736213), 2228.075);
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter((SecondOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1000.0, 0.0, 1919.264053658);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 184, Integer.MAX_VALUE, 1919.264053658);
      BrentSolver brentSolver0 = new BrentSolver(1255.755467948498);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.getEvaluations();
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 1255.755467948498, 7.663353127378024E218, (-901), (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-901), 36, 1255.755467948498);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1919.264053658);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4089.793777951), (-4089.793777951), (-2760.0), Double.NaN);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.setMaxEvaluations(2146862694);
      graggBulirschStoerIntegrator0.getEventHandlers();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-111.1676021));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 3585.212, 2594.50944822013, (-1458.4434493140066));
      graggBulirschStoerIntegrator1.addEventHandler((EventHandler) null, 0.0, 873.4421862170846, 2146862694, (UnivariateSolver) regulaFalsiSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 378, 2, Double.NaN);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getSecondaryMappers();
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1005.8573358);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(1989.244532051502);
      midpointIntegrator0.getEvaluations();
      midpointIntegrator0.getEventHandlers();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(301.0, 1900.9, 4.547473508864641E-10, 4.547473508864641E-10);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = null;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 301.0;
      doubleArray0[1] = 1.9941628263579332E-164;
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) null, 1.9941628263579332E-164, doubleArray0, 1900.9, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1000.0, 0.0, 1919.264053658);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 184, Integer.MAX_VALUE, 4145.27881);
      graggBulirschStoerIntegrator0.setMaxEvaluations(1);
      graggBulirschStoerIntegrator0.getEventHandlers();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-111.1676021));
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, (double) 184, 3585.212, 2, (UnivariateSolver) regulaFalsiSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1334, 1334, 362.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1) exceeded
         //
         verifyException("org.apache.commons.math3.util.Incrementor$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1000.0, 0.0, 1919.264053658);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1724), (-1724), 1109.44);
      graggBulirschStoerIntegrator0.setMaxEvaluations((-778));
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setOrderControl(0, 806.0793, 613.554103305);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = 0.0;
      double double1 = (-1725.905);
      double double2 = Double.NaN;
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, (-1725.905), (-1725.905), Double.NaN);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(858).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = Double.NaN;
      try { 
        dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, (-1290.861), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 1,716
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4089.793777951), (-4089.793777951), (-2760.0), Double.NaN);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      BrentSolver brentSolver0 = new BrentSolver(2511.446578784358);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 2.1170345824450285, 779.987453, 36, (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 2190, 2190, (-4089.793777951));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3757).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.1170345824450285);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = (-387.755439736698);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-387.755439736698), (-387.755439736698), (-387.755439736698), (-387.755439736698));
      double double1 = 0.0;
      int int0 = 336;
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 336);
      int int1 = 0;
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 0);
      double double2 = 828.20556033644;
      double double3 = (-332.07984246298);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-332.07984246298);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-332.07984246298);
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 402.0, doubleArray0, (-387.755439736698), doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.getMaxEvaluations();
      graggBulirschStoerIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator0.clearStepHandlers();
      boolean boolean0 = true;
      int int0 = (-238);
      int int1 = 9;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      double double0 = 1713.5;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 3.0;
      doubleArray0[2] = (double) (-238);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) Integer.MAX_VALUE;
      doubleArray1[1] = 0.0;
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.computeDerivatives((-238), doubleArray0, doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = (-3.4046500868740456E-4);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-3.4046500868740456E-4), 2.273310147516538, (-3.4046500868740456E-4), 0.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      int int0 = 1321;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(824.6, 242.28349177525817, (-381.7));
      dormandPrince54Integrator0.addEventHandler(eventHandler0, (-3.4046500868740456E-4), (-71.2942903559), 1321, (UnivariateSolver) illinoisSolver0);
      dormandPrince54Integrator0.getOrder();
      double[] doubleArray0 = null;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = null;
      try {
        graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.273310147516538, 1321, (double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(396.0, 1.0, 0.0, 1.0);
      dormandPrince853Integrator0.getEvaluations();
      dormandPrince853Integrator0.clearStepHandlers();
      dormandPrince853Integrator0.getCurrentSignedStepsize();
      dormandPrince853Integrator0.setMaxGrowth(396.0);
      dormandPrince853Integrator0.getMaxEvaluations();
      dormandPrince853Integrator0.clearStepHandlers();
      dormandPrince853Integrator0.getEvaluations();
      dormandPrince853Integrator0.getCurrentStepStart();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 396.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (double) Integer.MAX_VALUE;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (double) 0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(Double.NaN, Double.NaN, doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      PegasusSolver pegasusSolver0 = new PegasusSolver(Integer.MAX_VALUE, 0.0);
      graggBulirschStoerIntegrator0.addEventHandler(eventHandler0, 0.0, (-857.06498121981), (-3421), (UnivariateSolver) pegasusSolver0);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = (-3980.8);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-3980.8);
      doubleArray0[1] = (-3980.8);
      doubleArray0[2] = (-3980.8);
      doubleArray0[3] = (-3980.8);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3980.8), 1254.72587805, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.getEventHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-3980.8));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 4
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(6.0);
      threeEighthesIntegrator0.getStepHandlers();
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, threeEighthesIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EulerIntegrator eulerIntegrator0 = new EulerIntegrator((-1.0));
      eulerIntegrator0.getEventHandlers();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1.0);
      doubleArray0[4] = 1000.0;
      doubleArray0[5] = (-1325.121951349604);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.0), (-1.0), doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-1.0), fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(1.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(1989.244532051502);
      midpointIntegrator0.clearEventHandlers();
      midpointIntegrator0.getEvaluations();
      midpointIntegrator0.getEventHandlers();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = 1255.755467948498;
      doubleArray0[3] = 1255.755467948498;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = 1989.244532051502;
      doubleArray0[6] = 0.0;
      // Undeclared exception!
      try { 
        midpointIntegrator0.computeDerivatives(1255.755467948498, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1), 1.0, 1.0, (-1));
      dormandPrince54Integrator0.getEventHandlers();
      double double0 = dormandPrince54Integrator0.getCurrentSignedStepsize();
      assertEquals(1.0, double0, 0.01);
      
      dormandPrince54Integrator0.getEvaluations();
      assertEquals(1.0, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (-1269.0);
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.setStepSizeControl(1387.3585606878653, 2302.504, 0.0, (-405.86713849021));
      graggBulirschStoerIntegrator0.setInitialStepSize(2302.504);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0, stepNormalizerBounds0);
      stepNormalizer0.init(0.0, doubleArray1, 0.0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setMaxEvaluations(Integer.MAX_VALUE);
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      double double0 = graggBulirschStoerIntegrator0.getCurrentSignedStepsize();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1000.0, 0.0, 1919.264053658);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 184, Integer.MAX_VALUE, 4145.27881);
      graggBulirschStoerIntegrator0.setMaxEvaluations(1);
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setOrderControl(1, (-0.3111643669578199), 1919.264053658);
      assertEquals(1000.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-1031.6843584253));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      midpointIntegrator0.addEventHandler(eventHandler0, 3113.26, (-1031.6843584253), 511);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, midpointIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-822.232), (-822.232), (-822.232), (-822.232));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-822.232);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setStepSizeControl((-822.232), Double.NaN, (-822.232), 631.377451279);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.computeDerivatives((-822.232), (double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.001, 3428.262112563, (-1.0), (-1.0));
      dormandPrince54Integrator0.setInitialStepSize((-1.0));
      dormandPrince54Integrator0.setStepSizeControl((-1.0), (-895.095), 3428.262112563, 0.0);
      dormandPrince54Integrator0.clearStepHandlers();
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(1725, (-1.0), 0.0, 0.0, 1988.1508029761767);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = (-822.232);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-822.232), (-822.232), (-822.232), (-822.232));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-822.232);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.computeDerivatives((-822.232), doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator(0.0);
      midpointIntegrator0.getEvaluations();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = 0.0;
      try { 
        midpointIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8 != 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-822.232), (-822.232), (-822.232), (-822.232));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-822.232);
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-4496.5623971), (-822.232), (-1843.390964426), (-822.232));
      dormandPrince853Integrator0.getMaxEvaluations();
      dormandPrince853Integrator0.setStepSizeControl((double) Integer.MAX_VALUE, (-822.232), 0.0, 0.0);
      dormandPrince853Integrator0.getOrder();
      DormandPrince853Integrator dormandPrince853Integrator1 = new DormandPrince853Integrator(0.0, Integer.MAX_VALUE, doubleArray0, doubleArray0);
      int int0 = dormandPrince853Integrator1.getEvaluations();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1.5277127454062126E112), 0.04471061572777259, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 0);
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-1430.3765355084), (-1843.390964426), 0.0, 0.0);
      int int1 = highamHall54Integrator0.getOrder();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1000.0, 0.0, 1919.264053658);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 184, Integer.MAX_VALUE, 4145.27881);
      graggBulirschStoerIntegrator0.setMaxEvaluations(1);
      graggBulirschStoerIntegrator0.getEventHandlers();
      ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator(1779.5922779792);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      classicalRungeKuttaIntegrator0.addStepHandler(dummyStepHandler0);
      assertEquals(Double.NaN, classicalRungeKuttaIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, classicalRungeKuttaIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-68.7143884254095);
      doubleArray0[1] = (-68.7143884254095);
      doubleArray0[2] = (-68.7143884254095);
      doubleArray0[3] = (-68.7143884254095);
      doubleArray0[4] = (-68.7143884254095);
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-68.7143884254095), (-68.7143884254095), doubleArray0, doubleArray0);
      double double0 = 1.0E-12;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-68.7143884254095), 1.0E-12, (-68.7143884254095));
      EventHandler eventHandler0 = null;
      dormandPrince54Integrator0.addEventHandler((EventHandler) null, (-0.1521609496625161), (double) (-1740), 818);
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-1740), (-68.7143884254095), (-68.7143884254095));
      regulaFalsiSolver0.getMaxEvaluations();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, (-68.7143884254095), (-68.7143884254095), (-1740), (UnivariateSolver) regulaFalsiSolver0);
      // Undeclared exception!
      try { 
        dormandPrince54Integrator0.integrate((ExpandableStatefulODE) null, 18.148505520854727);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4089.793777951), (-4089.793777951), (-2760.0), Double.NaN);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      BrentSolver brentSolver0 = new BrentSolver(2511.446578784358);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 2.1170345824450285, 779.987453, 36, (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 2190, 2190, (-4089.793777951));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.1170345824450285);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-3264.8348868217);
      doubleArray0[1] = (double) 30;
      doubleArray0[2] = (-3264.8348868217);
      doubleArray0[3] = 2731.3187;
      double double0 = 0.0;
      doubleArray0[4] = 0.0;
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(30, 115.212, (-3264.8348868217), doubleArray0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-788.9772229392593), 0.50625, 0.0, 0.0);
      String string0 = graggBulirschStoerIntegrator0.getName();
      assertEquals("Gragg-Bulirsch-Stoer", string0);
  }
}
