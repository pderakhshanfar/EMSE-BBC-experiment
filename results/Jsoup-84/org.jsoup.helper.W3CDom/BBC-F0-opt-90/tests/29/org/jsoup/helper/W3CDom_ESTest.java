/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 24 06:13:19 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf(":");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "org.jsoup.helper.W3CDom", attributes0);
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("BE7>I=2]N8 TW~,|");
      Document document0 = parser0.parseInput((Reader) stringReader0, "org.jsoup.helper.W3CDom$W3CBuilder");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(pseudoTextElement0, 63);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("[^-a-zA-Z0-9_:.]", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      String string0 = w3CDom0.asString(document1);
      assertEquals("<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>[^-a-zA-Z0-9_:.]</body>\n</html>\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "2 qoR2t9,\"yOg");
      document0.prependChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = Document.createShell("xmlns=");
      Element element0 = document0.tagName("xmlmq");
      document0.prependChild(element0);
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      Document document0 = Parser.parseBodyFragmentRelaxed(" ", ">MWe0");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "2 qoR2t9,\"yOg");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Document document1 = (Document)document0.prependChild(document0);
      Attributes attributes0 = document1.attributes();
      attributes0.put("", true);
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.convert(document1, (org.w3c.dom.Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, (org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("[a-zA-Z_:][-a-zA-Z0-9_:.]*", "[a-zA-Z_:][-a-zA-Z0-9_:.]*");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      document0.tagName("[a-zA-Z_:][-a-zA-Z0-9_:.]*");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, 63);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("Xy9", "Xy9");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("xmlns:Could not determine a form action URL for submit. Ensure you set a base URI when parsing.", ":");
      Tag tag0 = Tag.valueOf("BeforeDoctypePublicIdentifier");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "F_5w1qLD8Bp7e,\"R$tR", attributes1);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(pseudoTextElement0, 325);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment(" WER/ma0R2u)g#lx8", "Zc~,uV6");
      Attributes attributes0 = document0.attributes();
      attributes0.put("xmlns", "xmlns");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, 3158);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("BE7>I=2]N8 TW~,|");
      Document document0 = parser0.parseInput((Reader) stringReader0, "org.jsoup.helper.W3CDom$W3CBuilder");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      w3CDom_W3CBuilder0.head((Node) null, 63);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("<html>\n<heapR\n<nETA http-equiv=\"C3ntent-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>[a-zA-Z_:][va-zA-Z0-9_:.]*</bodyK\n</html>", "<html>\n<heapR\n<nETA http-equiv=\"C3ntent-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>[a-zA-Z_:][va-zA-Z0-9_:.]*</bodyK\n</html>");
      DataNode dataNode0 = DataNode.createFromEncoded("<html>\n<heapR\n<nETA http-equiv=\"C3ntent-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>[a-zA-Z_:][va-zA-Z0-9_:.]*</bodyK\n</html>", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<html>\n<ead><nETA 5-tp-e;uiv=\"Contqnt-Tye\" content=\"txx/html; charsetTF-8\">\n</head>\n<body>[a-zA-Z_:][va-zA-Z0-9_:.]*</+ody>\n</htjl>", "<html>\n<ead><nETA 5-tp-e;uiv=\"Contqnt-Tye\" content=\"txx/html; charsetTF-8\">\n</head>\n<body>[a-zA-Z_:][va-zA-Z0-9_:.]*</+ody>\n</htjl>");
      W3CDom w3CDom0 = new W3CDom();
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("[^-a-zA-Z0-9_:.]", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Document document2 = new Document("org.jsoup.helper.W3CDom");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document2, document1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("x7sxmlns2{htmW><e-s<EW -p-;uitontqn-T~e\" N.Tn\"txYhm[ cwbTeTF85\n</h:d\n?6dazA]Z_:]!vi-1D]<Hr>T/@jo", "x7sxmlns2{htmW><e-s<EW -p-;uitontqn-T~e\" N.Tn\"txYhm[ cwbTeTF85\n</h:d\n?6dazA]Z_:]!vi-1D]<Hr>T/@jo");
      W3CDom w3CDom0 = new W3CDom();
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'h' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
}
