/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 22:20:41 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("K:j5`LO5x^oRJc=$.", "K:j5`LO5x^oRJc=$.");
      document0.prependElement(":i9XAiq6e)0IXAV");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<html>\n<head>\n<meta http-equiv=\"content-ype\" contnt=\"text/ht-l; charset=utf-8\"\n</head>\n<ody>&gt^v&lt;5s8=q@0=i{&#127;@g</body>\n</html>", "<html>\n<head>\n<meta http-equiv=\"content-ype\" contnt=\"text/ht-l; charset=utf-8\"\n</head>\n<ody>&gt^v&lt;5s8=q@0=i{&#127;@g</body>\n</html>");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      String string0 = w3CDom0.asString(document1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("^HG,1V");
      Element element0 = document0.tagName("ZJ");
      document0.prependChild(element0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("<html>\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n</head>\n<body>&gt;v&lt;5s8=q@0=i{&#127;@g</body>\n</html>", "<html>\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n</head>\n<body>&gt;v&lt;5s8=q@0=i{&#127;@g</body>\n</html>");
      w3CDom0.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("org.jsoup.helper.W3CDom");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.convert((Document) null, (org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$Id");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      document0.empty();
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("html>\n<head>\n<meta ttp-eq!=nTont=nt^ype\" cntnt=\"tex/h=-'; charse=utf-8\"\n<,ead>\n<y>&t^v&lt;5s8=l0=i{#1l7V@g</bdy>\n<m>", "html>\n<head>\n<meta ttp-eq!=nTont=nt^ype\" cntnt=\"tex/h=-'; charse=utf-8\"\n<,ead>\n<y>&t^v&lt;5s8=l0=i{#1l7V@g</bdy>\n<m>");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      document0.attr("", "Y0u3xOid!i[CZm?");
      document0.prependChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<html>\n<head>\n<meta http-equiv=\"content-ype\" contnt=\"text/ht-l; charset=utf-8\"\n</head>\n<ody>&gt^v&lt;5s8=q@0=i{&#127;@g</body>\n</html>", "<html>\n<head>\n<meta http-equiv=\"content-ype\" contnt=\"text/ht-l; charset=utf-8\"\n</head>\n<ody>&gt^v&lt;5s8=q@0=i{&#127;@g</body>\n</html>");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell(".]~+dW-:[");
      document0.prependElement(".]~+dW-:[");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("wt=H?f&1%", "gMEf%]<@=H*");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      document0.attr("xmlns:xmn2", "xmns");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, (-1205));
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<html>\n<head>\n<met http-equiv=\"content-ype\" contnt=\"text/ht-l; charset=utf-8\"\n</head>\n<ody>&gt^v&lt;5s8=q@0=i{&#127;@g</body>\n</html>", "<html>\n<head>\n<met http-equiv=\"content-ype\" contnt=\"text/ht-l; charset=utf-8\"\n</head>\n<ody>&gt^v&lt;5s8=q@0=i{&#127;@g</body>\n</html>");
      document0.attr("xmlns", (String) null);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, 1969);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      DataNode dataNode0 = DataNode.createFromEncoded("<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body></body>\n</html>\n", "{X|&Ul2$@7");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, 3615);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "CharacterReferenceInRcdata");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("wt=H?f&1%", "gMEf%]<@=H*");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      w3CDom_W3CBuilder0.head((Node) null, 22);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("html>\n<head>\n<meta tt:-eq!xnTont=nt^y&e\" cntnt=\"tex/h=-'; charse=utf-8\"\n<,ead>\n<y>&t^v&lt;5s8=l0=i{#1l7V@g</bdy>\n<m>", "html>\n<head>\n<meta tt:-eq!xnTont=nt^y&e\" cntnt=\"tex/h=-'; charse=utf-8\"\n<,ead>\n<y>&t^v&lt;5s8=l0=i{#1l7V@g</bdy>\n<m>");
      W3CDom w3CDom0 = new W3CDom();
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'tt' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("html>\n<head>\n<meta ttp-eq!=nTont=nt^ype\" cntnt=\"tex/h=-'; charse=utf-8\"\n<,ead>\n<y>&t^v&lt;5s8=l0=i{#1l7V@g</bdy>\n<m>", "html>\n<head>\n<meta ttp-eq!=nTont=nt^ype\" cntnt=\"tex/h=-'; charse=utf-8\"\n<,ead>\n<y>&t^v&lt;5s8=l0=i{#1l7V@g</bdy>\n<m>");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Document document2 = Parser.parse("html>\n<head>\n<meta ttp-eq!=nTont=nt^ype\" cntnt=\"tex/h=-'; charse=utf-8\"\n<,ead>\n<y>&t^v&lt;5s8=l0=i{#1l7V@g</bdy>\n<m>", "");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document2, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }
}
