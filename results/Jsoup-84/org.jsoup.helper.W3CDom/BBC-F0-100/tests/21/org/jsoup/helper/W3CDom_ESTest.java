/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 00:08:43 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(":matches(regex) query must not be empty", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "IU", attributes0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(formElement0, (-1627));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      DataNode dataNode0 = DataNode.createFromEncoded("84U>A4", "lAFB");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, 1478);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("(4p4o,=29X", "<vbe5&");
      document0.prependChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      org.jsoup.nodes.Document document0 = org.jsoup.nodes.Document.createShell("xGHVu");
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document1 = (org.jsoup.nodes.Document)document0.tagName("org.jsoup.helper.W3CDom");
      document1.prependChild(document0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("*,JY(zr0A", "*,JY(zr0A");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((org.jsoup.nodes.Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "[a-zA-Z_:][-a-zA-Z0-9_:.]*");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, (Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.xmlParser();
      org.jsoup.nodes.Document document0 = parser0.parseInput("WX)*x?j+", "dyDX{u39");
      org.jsoup.nodes.Document document1 = document0.clone();
      org.jsoup.nodes.Document document2 = document0.normalise();
      Document document3 = w3CDom0.fromJsoup(document2);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document1, document3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("xlmpS", "xlmpS");
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf("xlmpS");
      Attributes attributes0 = document0.attributes();
      FormElement formElement0 = new FormElement(tag0, "]2AFd(", attributes0);
      attributes0.put("", "xlmpS");
      document0.prependChild(formElement0);
      org.jsoup.nodes.Document document1 = org.jsoup.nodes.Document.createShell("xmlns:Mrg.jsoKp.paqehYokenisel");
      Document document2 = w3CDom0.fromJsoup(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("xlmps", "xlmps");
      Tag tag0 = Tag.valueOf("xlmps");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("%D<{U\t4:u-NC\"UOw", "&]N2;nYp~A::9eXXy");
      FormElement formElement0 = new FormElement(tag0, "xlmps", attributes1);
      document0.prependChild(formElement0);
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'DU4' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.xmlParser();
      org.jsoup.nodes.Document document0 = parser0.parseInput("", "");
      org.jsoup.nodes.Document document1 = document0.normalise();
      Document document2 = w3CDom0.fromJsoup(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document1, document2);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      Tag tag0 = Tag.valueOf("{@^v*E%:");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "BetweenDoctypePublicAndSystemIdentifiers", attributes0);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(formElement0, (-92960244));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      Parser parser0 = Parser.xmlParser();
      org.jsoup.nodes.Document document0 = parser0.parseInput("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "");
      Element element0 = document0.attr("xmlns:", ",/F}Fc^I3S=}0>t");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, (-2389));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      document0.attr("xmlns", "-:Tqc$>L&g('c'2j");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("t^&)%~Z}w)D7a3", false);
      w3CDom_W3CBuilder0.head(xmlDeclaration0, 0);
      assertFalse(xmlDeclaration0.hasParent());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Tag tag0 = Tag.valueOf("BetweenDoctypePublicAndSystemIdentifiers");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("|6'uWW~", "org.jsoup.select.Evaluator$AttributeWithValueContaining");
      FormElement formElement0 = new FormElement(tag0, "summary", attributes1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(formElement0, 1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.xmlParser();
      org.jsoup.nodes.Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("Et3", "Et3");
      Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.asString(document1);
  }
}
