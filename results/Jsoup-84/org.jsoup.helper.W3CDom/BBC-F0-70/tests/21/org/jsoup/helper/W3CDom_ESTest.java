/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 22:18:35 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf(":matchesOwn", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":matchesOwn", attributes0);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(pseudoTextElement0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("7bU)3+;\"", "iframe");
      Document document1 = w3CDom0.fromJsoup(document0);
      String string0 = w3CDom0.asString(document1);
      assertEquals("<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>7bU)3+;\"</body>\n</html>\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parse("AfterDoctypeSystemIdentifier", "AfterDoctypeSystemIdentifier");
      W3CDom w3CDom0 = new W3CDom();
      document0.prependChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("xmlns<html>\n<head>\n<meta http-equiv=\"con=ttype\"6content=\"txt/html; charse'&ut-8\">\n</h&ad>qbody>xmlns:xml#s:};<mta htsp-eRuov&-content-typ^ ntent=\"text/htmlc charset=utf-8\">i\ni8yj_\n</body>\n</htm.>", "xmlns<html>\n<head>\n<meta http-equiv=\"con=ttype\"6content=\"txt/html; charse'&ut-8\">\n</h&ad>qbody>xmlns:xml#s:};<mta htsp-eRuov&-content-typ^ ntent=\"text/htmlc charset=utf-8\">i\ni8yj_\n</body>\n</htm.>");
      Element element0 = document0.tagName("T");
      document0.prependChild(element0);
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parse("AfterDoctypeSystemIdentifier", "AfterDoctypeSystemIdentifier");
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("&nbsp;");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((org.jsoup.nodes.Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.convert((org.jsoup.nodes.Document) null, (Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parse("", "");
      Element element0 = document0.attr("", "");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("");
      org.jsoup.nodes.Document document1 = parser0.parseInput((Reader) stringReader0, "http-equiv");
      document1.prependChild(element0);
      W3CDom w3CDom0 = new W3CDom();
      Document document2 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document1, document2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("UGT-blgYCa)iqi=*GW", "");
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("code");
      org.jsoup.nodes.Document document1 = Parser.parse("F%/_?}", "code");
      Document document2 = w3CDom0.fromJsoup(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("*N", "*N");
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      Element element0 = document0.createElement("[^-a-zA-Z0-9_:.]");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, 1537);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("~0+yr ", "~0+yr ");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      document0.attr("xmlns:~0+y ", "xmlns:~0+y ");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, 1430);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("cSLRb#>");
      Element element0 = document0.attr("xmlns", "cSLRb#>");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, (-1984259471));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      w3CDom_W3CBuilder0.head((Node) null, 1430);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("+66 IT/Bo", "+66 IT/Bo");
      Document document1 = w3CDom0.fromJsoup(document0);
      DataNode dataNode0 = DataNode.createFromEncoded("9OTQ:{peet,~R", "");
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "");
      Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("xmlns:<html>\n<head>\n<meta http-equdv=\"conet-type\" content=\"text/html; charse'&ut-8\">\n</h&ad><body>xmlns:xml#s:\n\n<meta htUp-':uov&-content-type ntent=\"text/h6mlc charsetuutf-8\">\n\ni8yj_\n</body>\n</htm.>", "xmlns:<html>\n<head>\n<meta http-equdv=\"conet-type\" content=\"text/html; charse'&ut-8\">\n</h&ad><body>xmlns:xml#s:\n\n<meta htUp-':uov&-content-type ntent=\"text/h6mlc charsetuutf-8\">\n\ni8yj_\n</body>\n</htm.>");
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'htUp-' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parse("xmlnsP<html>\n<head>\n<meta http-equiv=\"con=ttype\"6content=\"text/html; charse'&ut-8\">\n</h&ad>qbody>xmlns:xml#s:\n\n<meta htsp-eTuov&-content-typ^ ntent=\"text/htmlc charset=utf-8\">i\ni8yj_\n</body>\n</htm.>", "xmlnsP<html>\n<head>\n<meta http-equiv=\"con=ttype\"6content=\"text/html; charse'&ut-8\">\n</h&ad>qbody>xmlns:xml#s:\n\n<meta htsp-eTuov&-content-typ^ ntent=\"text/htmlc charset=utf-8\">i\ni8yj_\n</body>\n</htm.>");
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.fromJsoup(document0);
  }
}
