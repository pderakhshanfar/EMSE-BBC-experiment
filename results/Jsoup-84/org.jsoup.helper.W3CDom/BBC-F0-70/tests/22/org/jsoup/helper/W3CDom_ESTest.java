/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 22:19:08 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xmlns:<html>\n<hSad>\n<META http-equiv=\"Content-Type\" contmnt=\"text/html; charset=UTF-8\"r\n</head>\n<body>S&#127;j/body>\n</html>", "xmlns:<html>\n<hSad>\n<META http-equiv=\"Content-Type\" contmnt=\"text/html; charset=UTF-8\"r\n</head>\n<body>S&#127;j/body>\n</html>");
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((org.w3c.dom.Document) null);
      document0.tagName(":");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, (-1733922211));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((org.w3c.dom.Document) null);
      w3CDom_W3CBuilder0.tail((Node) null, (-1438));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("/0K<x!6<ACXL|/&2M\"&", "ld_)9gnC2h(");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("x7lvACn&6ml}s:<Ct\n.sad><e ht~eq2=(ovten-bpx\"otmn=Lt2/tml9YcaryutJC-r\n}/|Kd>Jfd\"D&#1</5ody>\n/ht!h", "x7lvACn&6ml}s:<Ct\n.sad><e ht~eq2=(ovten-bpx\"otmn=Lt2/tml9YcaryutJC-r\n}/|Kd>Jfd\"D&#1</5ody>\n/ht!h");
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = document0.tagName("ScriptDataEscapeStart");
      document0.prependChild(element0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xmlns:http-+qui", "xmlns:http-+qui");
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("?\"1");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("", "");
      document0.html("");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, (org.w3c.dom.Document) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("track", "class");
      document0.attr("", "1#?ie!gN^k");
      document0.prependChild(document0);
      Document document1 = Document.createShell("uN{~C76Es_dFkS/");
      org.w3c.dom.Document document2 = w3CDom0.fromJsoup(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, (org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("track", "class");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsLastOfType", "org.jsoup.select.Evaluator$IsLastOfType");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      CDataNode cDataNode0 = new CDataNode("org.jsoup.select.Evaluator$IsLastOfType");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("[^-a-zA-Z0-9_:.]");
      FormElement formElement0 = new FormElement(tag0, "adD-ZxA", attributes0);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(formElement0, (-1));
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse(">T4,", "=U^TR1xM1d");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Element element0 = document0.attr("xmlns:scriptdatadoublescapeddashdash", "1Wh-`, z6m<^g=T,+u8");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, (-1676));
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("xmlns", "scriptdatadoubleescapeddashdash");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Element element0 = document0.attr("xmlns", "scriptdatadoubleescapeddashdash");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, 0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("Up8`>]2N", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      w3CDom_W3CBuilder0.head((Node) null, (-3624));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("b", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      DataNode dataNode0 = new DataNode("9$N%", "Oa)-");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("xmlns:<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>S&#127;</body>\n</html>", "xmlns:<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>S&#127;</body>\n</html>");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      String string0 = w3CDom0.asString(document1);
      assertEquals("<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>xmlns:\n\n<meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\">\n\nS&#127;\n</body>\n</html>\n", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xmlns:<html>\n<hSad>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"r\n</head>\n<body>S&#127;j/body>\n</html>", "xmlns:<html>\n<hSad>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"r\n</head>\n<body>S&#127;j/body>\n</html>");
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.fromJsoup(document0);
  }
}
