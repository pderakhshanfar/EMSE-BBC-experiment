/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 18 03:36:59 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf(":");
      Document document0 = Parser.parseBodyFragment("org.jsoup.helper.W3CDom", "org.jsoup.helper.W3CDom");
      Attributes attributes0 = document0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "org.jsoup.select.StructuralEvaluator$ImmediateParent", attributes0);
      document0.prependChild(pseudoTextElement0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.tail(document0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("or.jsouphelper.d3CDom");
      Element element0 = document0.tagName("or.jsouphelper.d3CDom");
      document0.prependChild(element0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      Document document0 = Parser.parseBodyFragmentRelaxed("W==W", "W==W");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("[a-zA-Z_:][-a-zA-Z0-9_:.]*", "[a-zA-Z_:][-a-zA-Z0-9_:.]*");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "GG2B`^F~=95C&xg(j");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, (org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[{AJ)\"t`B=YO", "xfFW>C<lK");
      Attributes attributes0 = document0.attributes();
      attributes0.put("", "xfFW>C<lK");
      Document document1 = new Document("");
      document1.prependChild(document0);
      W3CDom w3CDom0 = new W3CDom();
      org.w3c.dom.Document document2 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document1, document2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("sup", "{lFv/k<VoU");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell(")kU0z`g3<:h+#");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Tag tag0 = Tag.valueOf(")kU0z`g3<:h+#");
      CDataNode cDataNode0 = new CDataNode(")kU0z`g3<:h+#");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ")kU0z`g3<:h+#", attributes0);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(pseudoTextElement0, (-1913027340));
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("?P^Qf/g!D", "?P^Qf/g!D");
      Tag tag0 = document0.tag();
      Attributes attributes0 = document0.attributes();
      Attribute attribute0 = new Attribute("xmlns:value", "co?@.|}", attributes0);
      attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "xmlns:value", attributes0);
      document0.prependChild(pseudoTextElement0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("org.jsoup.helper.W3CDom");
      Attributes attributes0 = document0.attributes();
      attributes0.put("xmlns", "s+");
      document0.prependChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf("org.jsoup.helper.W3CDom");
      Document document0 = Parser.parse("org.jsoup.helper.W3CDom", "org.jsoup.helper.W3CDom");
      Attributes attributes0 = document0.attributes();
      Attribute attribute0 = new Attribute("zA#R:8$hd-,p>FCI", "8ut,fX", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "xmlns:L{5", attributes1);
      document0.prependChild(pseudoTextElement0);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'zAR' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf("org.jsoup.helper.W3CDom");
      Document document0 = Parser.parseBodyFragment("org.jsoup.helper.W3CDom", "org.jsoup.helper.W3CDom");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("{98`NXg<", "org.jsoup.helper.W3CDom", attributes0);
      attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "xmlns:", attributes0);
      document0.prependChild(pseudoTextElement0);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((org.w3c.dom.Document) null);
      DocumentType documentType0 = new DocumentType("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "&lt;", "&lt;", "&lt;");
      w3CDom_W3CBuilder0.head(documentType0, 0);
      assertFalse(documentType0.hasParent());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "GG2B`^F~=95C&xg(j");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Document document2 = new Document("GG2B`^F~=95C&xg(j");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document2, document1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("xmlns", "xmlns");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      DataNode dataNode0 = DataNode.createFromEncoded("", "xmlns");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("org.jsoup.helper.W3CDom", "org.jsoup.helper.W3CDom");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.asString(document1);
  }
}
