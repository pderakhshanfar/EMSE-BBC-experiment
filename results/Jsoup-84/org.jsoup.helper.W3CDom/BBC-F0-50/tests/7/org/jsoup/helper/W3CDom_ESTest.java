/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 00:00:33 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      Tag tag0 = Tag.valueOf(":");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "xmlns:con8en", attributes0);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(formElement0, 1704);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.tail(document0, (-1913));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("<![CDATA[", "<![CDATA[");
      document0.tagName("var");
      document0.prependChild(document0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parse("xmlns:value", ":containsData(text) query must not be empty");
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((org.jsoup.nodes.Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("2TTtw<d!xj.|&", "pr /9bTt'7neA1Ziv");
      document0.html("yrhhfp{");
      org.jsoup.nodes.Document document1 = Parser.parse("xmlns:", "xmlns");
      Document document2 = w3CDom0.fromJsoup(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment(":", "qmlns");
      Element element0 = document0.attr("", "body");
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = w3CDom0.fromJsoup(document0);
      document0.prependChild(element0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("xmlns");
      Element element0 = document0.appendElement("cz");
      element0.attr(">mlus:<htl><hemd>\n<wta http-equiviojte<t-type_ co8en=\"$et/tml; cZsej=utf-\"q\n</head>f4bod*>uzttrw;</ode\n<]hfml>", ">mlus:<htl><hemd>\n<wta http-equiviojte<t-type_ co8en=\"$et/tml; cZsej=utf-\"q\n</head>f4bod*>uzttrw;</ode\n<]hfml>");
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'mlus' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("frameset", "xmlns");
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("YRHHfP{", "?j$|;9iy6y;[dgrwyy");
      Element element0 = document0.createElement("[a-zA-Z_:][-a-zA-Z0-9_:.]*");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, 2229);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("S:,", "S:,");
      document0.attr("xmlns:", true);
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, 3203);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("[s~=K%s]", parseSettings0);
      org.jsoup.nodes.Document document0 = Parser.parse("[s~=K%s]", "YRHHfP{");
      Attributes attributes0 = document0.attributes();
      FormElement formElement0 = new FormElement(tag0, "YRHHfP{", attributes0);
      formElement0.attr("xmlns", "?0q1)@q`G`q:K!?5");
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, (-4223));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      DataNode dataNode0 = DataNode.createFromEncoded("TEX!Oh;CePe_0T!_.E", "TEX!Oh;CePe_0T!_.E");
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("pA&IDVl2vl=@q", "pA&IDVl2vl=@q");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, 41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("xmlns:<htl>\n<head>\n<meta http-equiv=\"content-type\" con8ent=\"text/html; charset=utf-8\"Q\n</head>\n<bod*>uzttc3s;</aody>\n</html>", "xmlns:<htl>\n<head>\n<meta http-equiv=\"content-type\" con8ent=\"text/html; charset=utf-8\"Q\n</head>\n<bod*>uzttc3s;</aody>\n</html>");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, (Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("xmlns");
      document0.appendElement("cz");
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = w3CDom0.fromJsoup(document0);
      String string0 = w3CDom0.asString(document1);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><cz/>", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("xmlns");
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      w3CDom_W3CBuilder0.head((Node) null, (-1100));
  }
}
