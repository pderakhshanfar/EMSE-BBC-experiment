/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 10 23:17:58 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      org.jsoup.nodes.Document document0 = Parser.parse("xmlns:conteGt", ":Z;/,65zJoWm`NQ*h,W");
      Element element0 = document0.appendElement(":Z;/,65zJoWm`NQ*h,W");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, (-3688));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.htmlParser();
      org.jsoup.nodes.Document document0 = parser0.parseInput("n[4SFtO+}", "sub");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Comment comment0 = new Comment("Sk^=^uN[%c6Nf'jo");
      w3CDom_W3CBuilder0.tail(comment0, 4922);
      assertEquals("#comment", comment0.nodeName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("", "");
      Document document1 = w3CDom0.fromJsoup(document0);
      String string0 = w3CDom0.asString(document1);
      assertEquals("<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body></body>\n</html>\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("U}Z>j`EB0Ei!");
      document0.prependElement("U}Z>j`EB0Ei!");
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed(",mlnZNhml\n<head>\n<META h#peq=\"oneb-Type\"9on!Gt=\"ext/h(Cdcarset`UTF-8>\n</Qad>\n<2odm>Y\"4SFtO+<ody>\n<2hnm>", ",mlnZNhml\n<head>\n<META h#peq=\"oneb-Type\"9on!Gt=\"ext/h(Cdcarset`UTF-8>\n</Qad>\n<2odm>Y\"4SFtO+<ody>\n<2hnm>");
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = document0.tagName("strike");
      document0.prependChild(element0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("C}Z>j\"EB0Ei!");
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("CpEf .c`5Cfu");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((org.jsoup.nodes.Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = org.jsoup.nodes.Document.createShell("zTdgK17");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, (Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("&nz");
      org.jsoup.nodes.Document document1 = Parser.parseBodyFragment("Sk^=^uN[%c6Nf'jo", "#cdata");
      Document document2 = w3CDom0.fromJsoup(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("xmlns:<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>n[4SFtO+}</body>\n</html>", "xmlns:<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>n[4SFtO+}</body>\n</html>");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("xmlns:<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>n[4SFtO+}</body>\n</html>", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "xmlns", attributes0);
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, (-1));
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("&nbsp;", "&nbsp;");
      Tag tag0 = Tag.valueOf("=~2i ");
      CDataNode cDataNode0 = new CDataNode("=~2i ");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.put("xmlns:sub", true);
      Element element0 = new Element(tag0, "9;;#`r=", attributes0);
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, 840);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("xmlns:<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>n[4SFtO+}</body>\n</html>", "xmlns:<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>n[4SFtO+}</body>\n</html>");
      Element element0 = document0.attr("xmlns", "xmlns");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(element0, (-1));
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parse("xmlns:Nhml>\n<head>\n<META http]eqiv=\"Contet-Type\"conteGt=\"ext/h(m; charset`UTF-8>\n</hQad>\n<2ody>Y\"4SFtO+}</ody>\n</hnml", "xmlns:Nhml>\n<head>\n<META http]eqiv=\"Contet-Type\"conteGt=\"ext/h(m; charset`UTF-8>\n</hQad>\n<2ody>Y\"4SFtO+}</ody>\n</hnml");
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.htmlParser();
      org.jsoup.nodes.Document document0 = parser0.parseInput("&nbs((p;", "xc\"{");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      DataNode dataNode0 = new DataNode("V 4B[R_B5~{86Y+");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, (-304));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      w3CDom_W3CBuilder0.head((Node) null, 743);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("W.A[wSO<!$a\"tP4", "W.A[wSO<!$a\"tP4");
      Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("", "");
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("xmlns:Nhml>\n<head>\n<META htt:]eqiv=\"C*ntet-Type-conteGt=\"ext/h(m; charset`UTF-8>\n<hQad>\n<2ody>Y\"4SFtO+}</ody>\n</hnm", "xmlns:Nhml>\n<head>\n<META htt:]eqiv=\"C*ntet-Type-conteGt=\"ext/h(m; charset`UTF-8>\n<hQad>\n<2ody>Y\"4SFtO+}</ody>\n</hnm");
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'htt' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
}
