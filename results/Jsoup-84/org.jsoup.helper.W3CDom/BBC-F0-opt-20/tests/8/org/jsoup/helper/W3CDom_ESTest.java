/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 10 23:18:20 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      Tag tag0 = Tag.valueOf("&X=CYqjDQEb~|yW");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "option[selected]", attributes0);
      pseudoTextElement0.tagName(":o}RdfB'0qt+Zq-pGvU");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(pseudoTextElement0, 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      DocumentType documentType0 = new DocumentType("^?v!w|x", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "^?v!w|x");
      w3CDom_W3CBuilder0.tail(documentType0, 1999);
      assertFalse(documentType0.hasParent());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("V", "mB2{FzoA &\"[/&Z[");
      document0.prependElement("xmlns:A=");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      org.jsoup.nodes.Document document0 = org.jsoup.nodes.Document.createShell("uTmus");
      document0.tagName("uTmus");
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document1 = (org.jsoup.nodes.Document)document0.prependChild(document0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      org.jsoup.nodes.Document document0 = org.jsoup.nodes.Document.createShell("[jCG}t]m");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document(">1o[812Cq^~GCVu$6!*");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((org.jsoup.nodes.Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = org.jsoup.nodes.Document.createShell("");
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, (Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("/5'4");
      org.jsoup.nodes.Document document1 = Parser.parse("-%m{GBu~<4MY%h22ns", ";F<!)Ph@*8S=D(H%");
      Document document2 = w3CDom0.fromJsoup(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      CDataNode cDataNode0 = new CDataNode("?|9*QXa%&hX");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.put("", "");
      Tag tag0 = Tag.valueOf("#cdata");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "", attributes0);
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("xmlns:xmlqs:cl{nep:", "#AUJ$*[m`d,#C");
      Document document1 = w3CDom0.fromJsoup(document0);
      document0.prependChild(pseudoTextElement0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("<YAu{O2G+@:qkn");
      Tag tag0 = Tag.valueOf("xmlns5");
      Attributes attributes0 = new Attributes();
      attributes0.put("<YAu{O2G+@:qkn", "<YAu{O2G+@:qkn");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "l", attributes0);
      document0.prependChild(pseudoTextElement0);
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'YAuO2G' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("xmlns:xmlqs:cl{nep:", "#AUJ$*[m`d,#C");
      Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((Document) null);
      Tag tag0 = Tag.valueOf("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("xmlns:<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "T-mj8Rj?>", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "=%>GQc ", attributes1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(formElement0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("audio", "audio");
      Document document1 = w3CDom0.fromJsoup(document0);
      Tag tag0 = Tag.valueOf("WwK-N%p");
      Attributes attributes0 = new Attributes();
      attributes0.put("xmlns", "WwK-N%p");
      FormElement formElement0 = new FormElement(tag0, "org.tsoup.nodes.Attri\"utes$Dataset", attributes0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(formElement0, 59);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parse("audio", "audio");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Tag tag0 = Tag.valueOf("audio");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("-Leb3k[W-y~`2\"?X;Z_", "|r;4dt-STK");
      attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "audio", attributes0);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(formElement0, 0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("@iZ0", "@iZ0");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      DataNode dataNode0 = new DataNode("<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>@iZ0</body>\n</html>\n");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, 15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      org.jsoup.nodes.Document document0 = Parser.parseBodyFragmentRelaxed("@iZ0", "@iZ0");
      Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("~@W]qwIL%thK", true);
      w3CDom_W3CBuilder0.head(xmlDeclaration0, (-2278));
      assertEquals(0, xmlDeclaration0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      org.jsoup.nodes.Document document0 = new org.jsoup.nodes.Document("<YAu{O2G+@:qkn");
      Tag tag0 = Tag.valueOf("xmlns5");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "l", attributes0);
      document0.prependChild(pseudoTextElement0);
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.asString(document1);
  }
}
