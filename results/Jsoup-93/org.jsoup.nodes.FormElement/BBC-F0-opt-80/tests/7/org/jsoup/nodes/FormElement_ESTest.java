/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 19:17:34 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("FunYAv~SPNj% g`~zi");
      CDataNode cDataNode0 = new CDataNode("e;th2y3T>kZK2");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) cDataNode0;
      nodeArray0[1] = (Node) formElement0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) formElement0;
      nodeArray0[4] = (Node) cDataNode0;
      nodeArray0[5] = (Node) formElement0;
      nodeArray0[6] = (Node) cDataNode0;
      DocumentType documentType0 = new DocumentType("<![CDATA[e;th2y3T>kZK2]]>", "<![CDATA[e;th2y3T>kZK2]]>", "O *A", "", "");
      nodeArray0[7] = (Node) documentType0;
      nodeArray0[8] = (Node) formElement0;
      formElement0.addChildren(nodeArray0);
      formElement0.removeChild(nodeArray0[1]);
      assertEquals(2, formElement0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("http:/");
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("WG)f");
      CDataNode cDataNode0 = new CDataNode("WG)f");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "WG)f", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      Elements elements0 = formElement1.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("!lAAJ5 ");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ORG.JSOUP.JSOUP", attributes0);
      formElement0.setSiblingIndex((-1432121040));
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("ORG.JSOUP.JSOUP", formElement1.baseUri());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("h4");
      CDataNode cDataNode0 = new CDataNode("h4");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "h4", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertSame(formElement0, formElement1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("FunYAv~SPNj% g`~zi");
      CDataNode cDataNode0 = new CDataNode("e;th2y3T>kZK2");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) cDataNode0;
      nodeArray0[1] = (Node) formElement0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) formElement0;
      nodeArray0[4] = (Node) cDataNode0;
      nodeArray0[5] = (Node) formElement0;
      nodeArray0[6] = (Node) cDataNode0;
      DocumentType documentType0 = new DocumentType("<![CDATA[e;th2y3T>kZK2]]>", "<![CDATA[e;th2y3T>kZK2]]>", "O *A", "", "");
      nodeArray0[7] = (Node) documentType0;
      nodeArray0[8] = (Node) formElement0;
      formElement0.addChildren(nodeArray0);
      formElement0.addElement(formElement0);
      assertEquals(3, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("FunYrAv~SPj% g`z");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "POST");
      Attributes attributes2 = attributes1.put("`R", false);
      FormElement formElement0 = new FormElement(tag0, "method", attributes1);
      attributes2.vals = null;
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tag tag0 = Tag.valueOf("POyT");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "POyT");
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "POyT", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("V*Vh[F.y#\"VJHA`y", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "on", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("action", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "V-=TT]I=b05", attributes0);
      CDataNode cDataNode0 = new CDataNode("ruby");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("FunYAv~SPNj% g`~zi");
      CDataNode cDataNode0 = new CDataNode("e;th2y3T>kZK2");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "rR,KM/UUCQVUlan", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("unAvUP\"% g t", "select");
      attributes0.add("select", "select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.appendChild(formElement0);
      String[] stringArray0 = new String[3];
      stringArray0[1] = "name";
      attributes1.keys = stringArray0;
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("V*Vh[F.y#\"VJHA`y", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("5',YQ;fRe=O\"1]");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "K::,}c4cvO7I$Rx", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "select");
      Attributes attributes2 = attributes1.add("select", "method");
      Attribute attribute0 = Attribute.createFromEncoded("FunYrAv~SPj% g`z", "'3]I<?");
      attributes2.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "method", attributes1);
      formElement0.addElement(formElement0);
      String[] stringArray0 = new String[2];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("FunYAv~SPNj% g`~zi");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("FunYrAv~SPj% g`z", "select");
      Attributes attributes2 = attributes1.put("select", true);
      attributes2.add("method", "MFLT");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$IsRoot", attributes2);
      formElement0.addElement(formElement0);
      String[] stringArray0 = new String[8];
      stringArray0[2] = "name";
      attributes1.keys = stringArray0;
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("FunYAv~SPNj% g`~zi");
      CDataNode cDataNode0 = new CDataNode("e;th2y3T>kZK2");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "rR,KM/UUCQVUlan", attributes0);
      Tag tag1 = Tag.valueOf("select");
      Element element0 = new Element(tag1, "U", attributes0);
      FormElement formElement1 = formElement0.addElement(element0);
      formElement1.attr("disabled", "select");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Tag tag1 = Tag.valueOf("'3]I<?");
      Element element0 = new Element(tag1, "defer", attributes0);
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$IsRoot", attributes0);
      FormElement formElement1 = formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("FunYrAv~SPj% g`z");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "method", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: method
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("+xT1$1");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "font", attributes0);
      formElement0.attr("action", "+xT1$1");
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$IsRoot", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "defer", attributes0);
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$IsRoot", attributes0);
      FormElement formElement1 = formElement0.addElement(element0);
      formElement1.formData();
  }
}
