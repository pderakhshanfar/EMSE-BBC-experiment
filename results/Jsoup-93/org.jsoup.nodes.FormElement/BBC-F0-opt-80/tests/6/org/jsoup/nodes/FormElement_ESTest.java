/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:33:20 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("6';}yBySX@Y(\"G}8#Nf", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "6';}yBySX@Y(\"G}8#Nf", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      Element element0 = formElement0.prependText("dnhrwRk+,O%vP38r4H");
      formElement1.parentNode = (Node) formElement0;
      formElement0.removeChild(element0);
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("checked");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Lq'4MV@-", attributes0);
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("E?](,+rL7T!J_[p~A ", "radio");
      formElement0.addElement(document0);
      Elements elements0 = formElement0.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("^JQ'P5HcOx.rPX$f", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      formElement0.setSiblingIndex(1224);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals(0, formElement1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("gJ_P7$^", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "gJ_P7$^", (Attributes) null);
      formElement0.siblingIndex = (-1);
      Document document0 = Parser.parse("gJ_P7$^", "K]q} M1~2 Na}{d/hC");
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals((-1), formElement1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("math", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "math", attributes0);
      Document document0 = Parser.parseBodyFragment("_D*@Hn", "");
      FormElement formElement1 = formElement0.addElement(document0);
      assertSame(formElement1, formElement0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("POST");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "S/Jw,Jk-3^g_81tP", attributes0);
      formElement0.reparentChild(formElement0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("post", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("6';}yBySX@Y(\"G}8#Nf", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "6';}yBySX@Y(\"G}8#Nf", attributes0);
      formElement0.prependText("dnhrwRk+,O%vP38r4H");
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertFalse(formElement1.hasParent());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("jA/a'iz*Mj+x<{gS");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("jA/a'iz*Mj+x<{gS", "");
      attributes0.keys = null;
      FormElement formElement0 = new FormElement(tag0, "PP)", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("euemt");
      Attributes attributes0 = new Attributes();
      attributes0.put("method", "typP");
      Attributes attributes1 = attributes0.add("BeforeDoctypeName", "!>9iYSiB@MsYP}eQ");
      attributes1.put("i5(WA#", "TYPP0P");
      Attributes attributes2 = attributes1.clone();
      String[] stringArray0 = new String[2];
      attributes2.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "i5(WA#", attributes2);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("6';}yBySX@Y(\"G}8#Nf", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "6';}yBySX@Y(\"G}8#Nf", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tag tag0 = Tag.valueOf("t(L3");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "t(L3", attributes0);
      CDataNode cDataNode0 = new CDataNode("v<*l");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("t(L3");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "t(L3", attributes0);
      CDataNode cDataNode0 = new CDataNode("v<*l");
      cDataNode0.siblingIndex = (-1437839031);
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      attributes0.add("name", "name");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.appendChild(formElement0);
      // Undeclared exception!
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("%B,");
      FormElement formElement0 = new FormElement(tag0, "%B,", (Attributes) null);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      attributes0.put("name", "select");
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("C++krPk8iNG?hOn");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("name");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "}_4e", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: }_4e
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "select");
      FormElement formElement0 = new FormElement(tag0, "", attributes1);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("name");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.add("disabled", "disabled");
      FormElement formElement0 = new FormElement(tag0, "}_4e", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("quirks");
      Attributes attributes0 = new Attributes();
      attributes0.add("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: POST
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("O0z");
      Attributes attributes0 = new Attributes();
      attributes0.put("action", "O0z");
      FormElement formElement0 = new FormElement(tag0, "O0z", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("6';}yBySX@Y(\"G}8#Nf", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "6';}yBySX@Y(\"G}8#Nf", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      Document document0 = Parser.parseBodyFragment("name", "option");
      formElement0.addElement(document0);
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("6';}yBySX@Y(\"G}8#Nf", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "6';}yBySX@Y(\"G}8#Nf", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
