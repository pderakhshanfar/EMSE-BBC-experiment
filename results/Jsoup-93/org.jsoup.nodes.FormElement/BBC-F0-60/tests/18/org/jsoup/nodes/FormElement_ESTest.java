/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 15:12:04 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R.54N#D}x{u*V&X1k;");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "`h{POL%p6-y#n2>2d7!", attributes0);
      Element element0 = formElement0.appendTo(formElement0);
      formElement0.removeChild(formElement0);
      assertSame(formElement0, element0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "http:/", (Attributes) null);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("isindex", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("isindex");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "isindex", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("isindex", "");
      FormElement formElement1 = formElement0.addElement(document0);
      Elements elements0 = formElement1.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R.54N#D}x{u*V&X1k;");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "`h{POL%p6-y#n2>2d7!", attributes0);
      FormElement formElement1 = (FormElement)formElement0.html("R.54N#D}x{u*V&X1k;");
      formElement1.appendTo(formElement0);
      FormElement formElement2 = formElement1.addElement(formElement0);
      assertEquals("r.54n#d}x{u*v&x1k;", formElement2.normalName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      formElement0.siblingIndex = (-1793851348);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals(0, formElement1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("main");
      Document document0 = Parser.parseBodyFragmentRelaxed("main", "org.jsoup.nodes.FormElement");
      FormElement formElement0 = new FormElement(tag0, "main", attributes0);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("main", formElement1.tagName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("seOect");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("METHOD", "NrPv");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.keys = null;
      FormElement formElement0 = new FormElement(tag0, "seOect", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tag tag0 = Tag.valueOf("el^t");
      Attributes attributes0 = new Attributes();
      attributes0.add("]]:EXNK", "el^t");
      Attribute attribute0 = new Attribute("method", "el^t");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[1];
      attributes1.vals = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "el^t", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R.54N#D}x{u*V&X1k;");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "`h{POL%p6-y#n2>2d7!", attributes0);
      Element element0 = formElement0.appendTo(formElement0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Node> list0 = element0.childNodes();
      formElement1.childNodes = list0;
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R.54N#D`}x{u*V&X1k;");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "`h{PO%p6-y#n2>2d7!", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R.54N#Dr}x{u*V&q1k;");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      CDataNode cDataNode0 = new CDataNode("R.54N#Dr}x{u*V&q1k;");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R.54N#D}x{u*V&X1k;");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "`h{POL%p6-y#n2>2d7!", attributes0);
      formElement0.appendTo(formElement0);
      formElement0.setSiblingIndex((-1));
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("name", "select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      formElement0.appendTo(formElement0);
      formElement0.addElement(formElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("POST", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("Z+~ -71NJ:Ip>v\"OI");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("name", "raNio");
      FormElement formElement0 = new FormElement(tag0, "Z+~ -71NJ:Ip>v\"OI", attributes1);
      String[] stringArray0 = new String[1];
      attributes0.vals = stringArray0;
      FormElement formElement1 = formElement0.addElement(formElement0);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement((Tag) null, "{#5", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      FormElement formElement0 = new FormElement(tag0, "", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.prependElement("option");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("Z+~ -71NJ:Ip>v\"OI");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("name", "m+Y5@bZMP|");
      FormElement formElement0 = new FormElement(tag0, "Z+~ -71NJ:Ip>v\"OI", attributes1);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("disabled", "FI", attributes0);
      attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "disabled", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Document document0 = Parser.parseBodyFragmentRelaxed("checked", ";4ELpDzfb;Y`G");
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "checked", attributes0);
      FormElement formElement1 = formElement0.addElement(document0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("YZMV~ez");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: select
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("action");
      FormElement formElement0 = new FormElement(tag0, "action", attributes0);
      formElement0.attr("action", "action");
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "checked", attributes0);
      Elements elements0 = formElement0.elements();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      formElement0.addElement(formElement0);
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R.54N#D}x{u*V&X1k;");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "`h{POL%p6-y#n2>2d7!", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
