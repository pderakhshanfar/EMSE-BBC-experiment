/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 19:06:47 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, " /H`5XV=9BO", (Attributes) null);
      formElement0.appendTo(formElement0);
      formElement0.removeChild(formElement0);
      assertEquals(0, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("method");
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf(";(6\"");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      Elements elements0 = formElement1.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      formElement0.setSiblingIndex((-821));
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertFalse(formElement1.isBlock());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("colgroup", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, ",Ue1_4\"Ma8eb7Z", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertSame(formElement1, formElement0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      Document document0 = Document.createShell(".viEm*NRRb!$Oc56");
      formElement0.appendTo(document0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertTrue(formElement1.hasParent());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.FormElement");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.FormElement", attributes0);
      formElement0.html("org.jsoup.nodes.FormElement");
      Document document0 = Document.createShell("(");
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("org.jsoup.nodes.formelement", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "YgUM");
      Tag tag0 = Tag.valueOf("khE>,Fu)WhGRz>%");
      FormElement formElement0 = new FormElement(tag0, "j&I", attributes1);
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "HFR@");
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      Tag tag0 = Tag.valueOf("method");
      FormElement formElement0 = new FormElement(tag0, "method", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      CDataNode cDataNode0 = new CDataNode("FZ");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf(";rk%'i-(", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Before~ttribueVlue");
      FormElement formElement0 = new FormElement(tag0, "Before~ttribueVlue", (Attributes) null);
      DataNode dataNode0 = new DataNode("Before~ttribueVlue");
      dataNode0.parentNode = (Node) formElement0;
      // Undeclared exception!
      try { 
        formElement0.removeChild(dataNode0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Before~ttribueVlue");
      FormElement formElement0 = new FormElement(tag0, "Before~ttribueVlue", (Attributes) null);
      DataNode dataNode0 = new DataNode("Before~ttribueVlue");
      dataNode0.setSiblingIndex((-40869676));
      dataNode0.parentNode = (Node) formElement0;
      // Undeclared exception!
      try { 
        formElement0.removeChild(dataNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      attributes0.put("name", "name");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement0.appendTo(formElement1);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("K1kRDs~3");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ")VQ;d`.%+'@", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      attributes0.put("name", "name");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      FormElement formElement1 = formElement0.addElement(formElement0);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("*", parseSettings0);
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      Attributes attributes1 = attributes0.put("name", "name");
      FormElement formElement0 = new FormElement(tag0, "YSl=l[S/t1YfG-,q;{", attributes1);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("DISABLED", "vQUM");
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "DISABLED", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Document document0 = Parser.parse("Coud not determine a form action URL for submt. Ensure you set a base URI when parsing.", "VQUM");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "YSl=l[S/t1YfG-,q;{", attributes0);
      FormElement formElement1 = formElement0.addElement(document0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("sel5ect");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "sel5ect", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: sel5ect
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("sel5ect");
      Attributes attributes0 = new Attributes();
      attributes0.put("action", "v3u~O9g");
      FormElement formElement0 = new FormElement(tag0, "P", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf(";(6\"");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      formElement0.addElement(formElement0);
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "YSl=l[S/t1YfG-,q;{", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
