/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 15:01:16 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R#8_@/pF$");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "R#8_@/pF$", attributes0);
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("R#8_@/pF$", "");
      document0.appendTo(formElement0);
      formElement0.removeChild(document0);
      assertEquals("", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#Yu4\"fu=O|Dj#d", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "http:/", (Attributes) null);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Attributes", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "action", attributes0);
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("n\"P9z9", "");
      FormElement formElement1 = formElement0.addElement(document0);
      Elements elements0 = formElement1.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("POST");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("Ip|^X6[T,.@UzAd 1");
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      formElement0.setSiblingIndex((-3443));
      Document document0 = new Document("M");
      FormElement formElement1 = formElement0.addElement(document0);
      assertFalse(formElement1.hasParent());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("figure", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("POST");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      Document document0 = Document.createShell("POST");
      FormElement formElement1 = formElement0.addElement(document0);
      assertSame(formElement0, formElement1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("BhPTQ");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("BhPTQ");
      FormElement formElement0 = new FormElement(tag0, "BhPTQ", attributes0);
      Attributes attributes1 = attributes0.put("method", "PiTQ");
      attributes1.keys = null;
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf(">;n`ISw}u\"");
      CDataNode cDataNode0 = new CDataNode((String) null);
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("CommentEndDash", (String) null);
      Attributes attributes2 = attributes0.put("POST", (String) null);
      attributes2.put("Aps69u[lM+\",e?HX~S", true);
      FormElement formElement0 = new FormElement(tag0, "POST", attributes1);
      String[] stringArray0 = new String[2];
      attributes2.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("e52vvxE[", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "^?Nj<4$]", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("e52vvxE[");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "e52vvxE[", attributes0);
      CDataNode cDataNode0 = new CDataNode("J7FXhuPxy=-5v5g");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R#8_@/pF$");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "R#8_@/pF$", attributes0);
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("R#8_@/pF$", "");
      document0.appendTo(formElement0);
      document0.setSiblingIndex((-1345));
      // Undeclared exception!
      try { 
        formElement0.removeChild(document0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("select");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.put("name", "(_:lP, j%c");
      FormElement formElement0 = new FormElement(tag0, "}Qd\"<K:5", attributes0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) cDataNode0;
      nodeArray0[1] = (Node) formElement0;
      formElement0.insertChildren((-1), nodeArray0);
      formElement0.addElement(formElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("checked", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      attributes0.add("namE", "select");
      FormElement formElement0 = new FormElement(tag0, "namE", attributes0);
      formElement0.addElement(formElement0);
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("&lt;");
      CDataNode cDataNode0 = new CDataNode("DoeG2jM<_cF(TK>");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      FormElement formElement1 = (FormElement)formElement0.attr("name", "name");
      formElement1.addElement(formElement1);
      FormElement formElement2 = (FormElement)formElement1.attr("type", "checkbox");
      formElement2.val("option[selected]");
      FormElement formElement3 = (FormElement)formElement1.attr("checked", "name");
      List<Connection.KeyVal> list0 = formElement3.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      FormElement formElement1 = (FormElement)formElement0.attr("name", "name");
      FormElement formElement2 = formElement0.addElement(formElement0);
      formElement2.attr("type", "checkbox");
      formElement1.attr("checked", "name");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      FormElement formElement1 = (FormElement)formElement0.attr("name", "name");
      formElement0.addElement(formElement0);
      formElement0.attr("type", "radio");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      FormElement formElement1 = (FormElement)formElement0.attr("name", "name");
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("select");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.put("name", "(_:lP!,K j%c");
      FormElement formElement0 = new FormElement(tag0, "'[w)fu", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("select");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.put("disabled", "disabled");
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "raYdio", (Attributes) null);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("POST");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("POST");
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      attributes0.put("method", "POST");
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: POST
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("POST");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("Ip|^X6[T,.@UzAd 1");
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      attributes0.put("action", "POST");
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R#8_@/pF$");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "R#8_@/pF$", attributes0);
      Elements elements0 = formElement0.elements();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("POST");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("Ip|^X6[T,.@UzAd 1");
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      Document document0 = new Document("M");
      formElement0.addElement(document0);
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tag tag0 = Tag.valueOf("&lt;");
      CDataNode cDataNode0 = new CDataNode("DoeG2jM<_cF(TK>");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "&lt;", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
