/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 01 20:59:59 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("a");
      FormElement formElement0 = new FormElement(tag0, "link", (Attributes) null);
      Document document0 = Parser.parse("a", "link");
      Element element0 = formElement0.appendChild(document0);
      element0.parentNode = (Node) formElement0;
      formElement0.removeChild(element0);
      assertEquals(0, formElement0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = Document.createShell("Yv,S^oacC!JG6vC<kb");
      Tag tag0 = Tag.valueOf("Yv,S^oacC!JG6vC<kb");
      FormElement formElement0 = new FormElement(tag0, "?Csz~x)6/+uv:*wXz{", (Attributes) null);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      // Undeclared exception!
      try { 
        formElement0.addChildren(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("#urg>[iD.}*|R");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("%s");
      CDataNode cDataNode0 = new CDataNode("%s");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "%s", attributes0);
      Document document0 = Parser.parseBodyFragment("", "");
      FormElement formElement1 = formElement0.addElement(document0);
      Elements elements0 = formElement1.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("LlG,");
      CDataNode cDataNode0 = new CDataNode("LlG,");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "LlG,", attributes0);
      formElement0.setSiblingIndex(144);
      Document document0 = Parser.parseBodyFragment("LlG,", "LlG,");
      FormElement formElement1 = formElement0.addElement(document0);
      assertSame(formElement1, formElement0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("GGu", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("GGu");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "/-ya", attributes0);
      formElement0.setSiblingIndex((-3355));
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals(0, formElement1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("link");
      CDataNode cDataNode0 = new CDataNode("checkbox");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "ogX", attributes0);
      Document document0 = Document.createShell("org.jsoup.nodes.FormElement");
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("link", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("MPSW", "d\fBxG27|>>=5,C ");
      FormElement formElement0 = new FormElement(tag0, "SELECT", attributes0);
      attributes1.keys = null;
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("?Csz~x)6/+uv:*wXz{");
      CDataNode cDataNode0 = new CDataNode("checkbox");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = Attribute.createFromEncoded("/JUh|#", "%XO@T");
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.add("Om3x0", "Dmo@jx@");
      attributes2.put("Dmo@jx@", "<S}MP[{dkrz9");
      Attributes attributes3 = attributes0.add("r{ZgcKy?l7t@jVTSk]d", "yT2,SpWV/ozBCy/XZi");
      String[] stringArray0 = new String[4];
      attributes3.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "Dmo@jx@", attributes3);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("a");
      FormElement formElement0 = new FormElement(tag0, "link", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("8t");
      FormElement formElement0 = new FormElement(tag0, "Kv2#<~4YKXx<", (Attributes) null);
      CDataNode cDataNode0 = new CDataNode("link");
      formElement0.reparentChild(cDataNode0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(cDataNode0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("name");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.add("name", "name");
      FormElement formElement0 = new FormElement(tag0, "wnBXGLTC%t", attributes0);
      formElement0.prependChild(formElement0);
      formElement0.addElement(formElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("If", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("u} 5P),1U|=");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("name");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.add("name", "select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes1);
      FormElement formElement0 = new FormElement(tag0, "name", attributes0);
      String[] stringArray0 = new String[1];
      attributes0.keys = stringArray0;
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("a");
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, (Attributes) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("name", "keygen");
      attributes1.put("type", "radio");
      FormElement formElement0 = new FormElement(tag0, "type", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "type", attributes1);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      attributes0.add("name", "name");
      attributes0.add("type", "checkbox");
      FormElement formElement0 = new FormElement(tag0, "option[selected]", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("keygen");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("name", "keygen");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("name", "select");
      FormElement formElement0 = new FormElement(tag0, " name=\"select\" METHOD=\"METHOD\"", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("disabled", true);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Q4%qn?Tn{U,9f;eP?(", attributes1);
      FormElement formElement0 = new FormElement(tag0, "disabled", (Attributes) null);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, " name=\"select\" METHOD=\"METHOD\"", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("3YDj&rQ57_7");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "MS", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: MS
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("?Csz~x)6/+uv:*wXz{");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("action", "Yv,S^oacC!JG6vC<kb");
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "?Csz~x)6/+uv:*wXz{", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("GGu", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("GGu");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "/-ya", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("a");
      FormElement formElement0 = new FormElement(tag0, "link", (Attributes) null);
      Document document0 = Parser.parse("a", "link");
      FormElement formElement1 = formElement0.addElement(document0);
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tag tag0 = Tag.valueOf("a");
      FormElement formElement0 = new FormElement(tag0, "link", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
