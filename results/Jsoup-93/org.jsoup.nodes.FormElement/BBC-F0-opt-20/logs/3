* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-20
* Going to generate test cases for class: org.jsoup.nodes.FormElement
* Starting Client-0
* Connecting to master process on port 14075
* Analyzing classpath: 
  - subjects/buggy-versions/Jsoup-93/target/classes
* Finished analyzing classpath
* Generating tests for class org.jsoup.nodes.FormElement
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 185
* Using seed 3863086924
* Starting evolution
bbc usage percentage is: 20%
* Initial Number of Goals in DynaMOSA = 63 / 185
[MASTER] 18:56:57.385 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
* Search finished after 601s and 6298 generations, 3373419 statements, best individual has fitness: 72.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 39
* Number of covered goals: 30
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 32
* Number of covered goals: 20
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 45
* Number of covered goals: 34
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 64%
* Total number of goals: 25
* Number of covered goals: 16
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 32
* Number of covered goals: 20
* Generated 24 tests with total length 153
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 19:06:58.096 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:06:58.557 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:06:58.940 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:06:59.297 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:06:59.681 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:00.007 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:00.413 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:00.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:01.164 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:01.839 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:02.197 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:02.663 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:03.048 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:03.391 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:03.772 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:04.182 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:04.546 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:04.921 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:05.381 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:05.749 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:06.102 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:06.444 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:06.861 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:07.193 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:08.153 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:07:09.240 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'FormElement_ESTest' to results/Jsoup-93/org.jsoup.nodes.FormElement/BBC-F0-opt-20/tests/3
* Done!

* Computation finished
