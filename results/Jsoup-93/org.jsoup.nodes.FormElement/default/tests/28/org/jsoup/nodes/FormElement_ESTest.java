/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 00:40:36 GMT 2020
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("POST", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "S4@.y7i", (Attributes) null);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) formElement0;
      Document document0 = new Document("POST");
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) formElement0;
      formElement0.addChildren(nodeArray0);
      formElement0.removeChild(document0);
      assertEquals(0, formElement0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Element element0 = new Element("radio");
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "radio", (Attributes) null);
      formElement0.addElement(element0);
      Elements elements0 = formElement0.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "!x-}", (Attributes) null);
      Document document0 = Parser.parseBodyFragmentRelaxed("", "!x-}");
      formElement0.appendTo(document0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals(1, formElement1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("di");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("di");
      FormElement formElement0 = new FormElement(tag0, "di", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("di", "di");
      formElement0.setSiblingIndex((-1936));
      FormElement formElement1 = formElement0.addElement(document0);
      assertSame(formElement1, formElement0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("colgroup");
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals(0, formElement1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("7}Wv)DrQ[lQd%");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      formElement0.html("7}Wv)DrQ[lQd%");
      Document document0 = Parser.parseBodyFragmentRelaxed("$M58UNKc-q/.Pv'4 ", "");
      FormElement formElement1 = formElement0.addElement(document0);
      assertFalse(formElement1.isBlock());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("method", "GOpT");
      Tag tag0 = Tag.valueOf("GOpT");
      attributes1.vals = null;
      FormElement formElement0 = new FormElement(tag0, "GOpT", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.add("method", "nOpT");
      Tag tag0 = Tag.valueOf("method");
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "nOpT", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("dci");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "dci", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("radio");
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("radio");
      FormElement formElement0 = new FormElement(tag0, "radio", attributes0);
      formElement0.reparentChild(cDataNode0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(cDataNode0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("radio");
      cDataNode0.setSiblingIndex((-1));
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("radio");
      FormElement formElement0 = new FormElement(tag0, "radio", attributes0);
      formElement0.reparentChild(cDataNode0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(cDataNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("NAME", "select");
      FormElement formElement0 = new FormElement(tag0, "NAME", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.appendTo(formElement0);
      // Undeclared exception!
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("radio");
      FormElement formElement0 = new FormElement(tag0, "radio", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("NAME", "select");
      FormElement formElement0 = new FormElement(tag0, "NAME", attributes1);
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      formElement0.addElement(formElement0);
      // Undeclared exception!
      try { 
        formElement0.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("radio");
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("NAME", "7E@");
      FormElement formElement0 = new FormElement(tag0, "%Dv<QJy`RAW%S)$", attributes1);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "radio", (Attributes) null);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.attr("disabled", (String) null);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Element element0 = new Element("radio");
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "radio", (Attributes) null);
      formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("METHOD");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("METHOD", "h.X", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "POST";
      attributes1.vals = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "H.X", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: H.X
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.add("ACTION", "x?uZ");
      Tag tag0 = Tag.valueOf("GOps");
      FormElement formElement0 = new FormElement(tag0, "GOps", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "%Dv<QJy`RAW%S)$", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: %Dv<QJy`RAW%S)$
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "radio", (Attributes) null);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Element element0 = new Element("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "%Dv<QJy`RAW%S)$", attributes0);
      formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("7}Wv)DrQ[lQd%");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("$M58UNKc-q/.Pv'4 ", "");
      // Undeclared exception!
      try { 
        formElement0.removeChild(document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
