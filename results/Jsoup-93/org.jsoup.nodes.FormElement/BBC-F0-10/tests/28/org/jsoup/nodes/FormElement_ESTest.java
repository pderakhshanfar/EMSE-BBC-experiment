/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 17:30:15 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("$eVALUES");
      FormElement formElement0 = new FormElement(tag0, "$eVALUES", attributes0);
      Element element0 = formElement0.prependElement("POST");
      formElement0.removeChild(element0);
      assertEquals(0, formElement0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("action", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "action", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      Elements elements0 = formElement1.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("&.jRZd)3:p3)x");
      FormElement formElement0 = new FormElement(tag0, "&.jRZd)3:p3)x", attributes0);
      formElement0.siblingIndex = (-692);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("&.jrzd)3:p3)x", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("colgroup", (ParseSettings) null);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "colgroup", attributes0);
      Document document0 = Parser.parseBodyFragment("checked", "colgroup");
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals(0, formElement1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("v!hqjVb19rE}YiU", "v!hqjVb19rE}YiU");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) formElement0;
      formElement0.insertChildren((-1), nodeArray0);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("select", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("on");
      CDataNode cDataNode0 = new CDataNode("9kd:|K^[");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.keys = null;
      FormElement formElement0 = new FormElement(tag0, "I~select", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("slect");
      Attributes attributes1 = attributes0.add("METHOD", "menu");
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "menu", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf("o SX+G;vy9<lp50xmQ", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "o SX+G;vy9<lp50xmQ", attributes0);
      Document document0 = Parser.parse("m]#FN7_*cnQ^}Cwca6", "checked");
      document0.setParentNode(formElement0);
      List<Node> list0 = Parser.parseXmlFragment("o SX+G;vy9<lp50xmQ", "xJb4");
      formElement0.childNodes = list0;
      // Undeclared exception!
      try { 
        formElement0.removeChild(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("D\",6}");
      FormElement formElement0 = new FormElement(tag0, "autofcus", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$IsLastChild");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$IsLastChild", (Attributes) null);
      CDataNode cDataNode0 = new CDataNode("org.jsoup.select.Evaluator$IsLastChild");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$IsLastChild");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$IsLastChild", (Attributes) null);
      CDataNode cDataNode0 = new CDataNode("org.jsoup.select.Evaluator$IsLastChild");
      CDataNode cDataNode1 = (CDataNode)cDataNode0.doClone(formElement0);
      cDataNode1.setSiblingIndex((-212));
      // Undeclared exception!
      try { 
        formElement0.removeChild(cDataNode1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.putIgnoreCase("name", "select");
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.appendTo(formElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("D\",6}");
      FormElement formElement0 = new FormElement(tag0, "autofcus", attributes0);
      formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement0.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes1 = attributes0.put("select", "&v&Nz_;Kc^");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.putIgnoreCase("name", "MV>B");
      FormElement formElement1 = formElement0.addElement(formElement0);
      String[] stringArray0 = new String[1];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("&`1j{Zd)3::p3)x");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("option[selected]", parseSettings0);
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.putIgnoreCase("name", "MV>B");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("disabled", "$#.=8~");
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("$eVALUES");
      FormElement formElement0 = new FormElement(tag0, "$eVALUES", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("POST", "POST");
      FormElement formElement1 = formElement0.addElement(document0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes1 = attributes0.add("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "4B}|JX_ZH", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: 4B}|JX_ZH
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("action", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.add("action", "action");
      FormElement formElement0 = new FormElement(tag0, "action", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("$eVALUES");
      FormElement formElement0 = new FormElement(tag0, "$eVALUES", attributes0);
      Elements elements0 = formElement0.elements();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("$eVALUES");
      FormElement formElement0 = new FormElement(tag0, "$eVALUES", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
