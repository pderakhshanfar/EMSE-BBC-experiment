/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 00:40:26 GMT 2020
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("maxSZze must be 0 (uTlimited) `r larger");
      CDataNode cDataNode0 = new CDataNode("maxSZze must be 0 (uTlimited) `r larger");
      FormElement formElement0 = new FormElement(tag0, "Could not determine a form action URL for submit. Ensure you set a base URI when parsing.", (Attributes) null);
      formElement0.appendChild(cDataNode0);
      formElement0.removeChild(cDataNode0);
      assertEquals("maxSZze must be 0 (uTlimited) `r larger", formElement0.tagName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("AY6N/g#Y=M|IIe");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Kv;(m^FOEQqrOW/0E", attributes0);
      Document document0 = Document.createShell("Kv;(m^FOEQqrOW/0E");
      FormElement formElement1 = formElement0.addElement(document0);
      Elements elements0 = formElement1.elements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("$axSZze must be 0 (uTlimited) `r larger");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "n$$:y]K8!1!%HC", attributes0);
      formElement0.setSiblingIndex((-1233));
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("$axSZze must be 0 (uTlimited) `r larger", formElement1.nodeName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("hr");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "hr", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("hr", formElement1.baseUri());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("wbHr;dGTE.");
      FormElement formElement0 = new FormElement(tag0, "wbHr;dGTE.", (Attributes) null);
      formElement0.appendChild(formElement0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("wbHr;dGTE.", formElement1.nodeName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("TV<Lm`X7dzG?MJ5fR");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("checkbox", "");
      attributes1.keys = null;
      FormElement formElement0 = new FormElement(tag0, "TV<Lm`X7dzG?MJ5fR", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tag tag0 = Tag.valueOf("$axSZ9e must be 0 (uTlimited) `r larger");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("select", true);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      FormElement formElement0 = new FormElement(tag0, "n$$:y]K8!1!%HC", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tag tag0 = Tag.valueOf("sovc");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "y_BYj;QR&FwLn;><MG", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("opt]Iin");
      FormElement formElement0 = new FormElement(tag0, "opt]Iin", (Attributes) null);
      CDataNode cDataNode0 = new CDataNode((String) null);
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("opt]Iin");
      FormElement formElement0 = new FormElement(tag0, "opt]Iin", (Attributes) null);
      CDataNode cDataNode0 = new CDataNode((String) null);
      CDataNode cDataNode1 = (CDataNode)cDataNode0.doClone(formElement0);
      cDataNode1.setSiblingIndex((-56450481));
      // Undeclared exception!
      try { 
        formElement0.removeChild(cDataNode1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      Tag tag0 = Tag.valueOf(" select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, " select", attributes0);
      FormElement formElement0 = new FormElement(tag0, " select", attributes1);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) formElement0;
      nodeArray0[1] = (Node) pseudoTextElement0;
      nodeArray0[2] = (Node) pseudoTextElement0;
      nodeArray0[3] = (Node) formElement0;
      nodeArray0[4] = (Node) formElement0;
      nodeArray0[5] = (Node) pseudoTextElement0;
      nodeArray0[6] = (Node) formElement0;
      nodeArray0[7] = (Node) pseudoTextElement0;
      nodeArray0[8] = (Node) formElement0;
      pseudoTextElement0.addChildren(nodeArray0);
      formElement0.addElement(pseudoTextElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf(">u[`ofV\"@-", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf(" select");
      Attributes attributes1 = attributes0.add(" select", "LION");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.StructuralEvaluator$Not", attributes1);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      formElement0.addElement(formElement0);
      // Undeclared exception!
      try { 
        formElement0.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("option");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.add("name", "name");
      Tag tag0 = Tag.valueOf(" select");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.StructuralEvaluator$Not", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      Element element0 = new Element(tag0, "select");
      FormElement formElement0 = new FormElement(tag0, "n$$:y]K8!1!%HC", attributes0);
      formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("FlFze.*kN@");
      attributes0.add("method", "POST");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.slect.Evaluator$Attribut1WithValueContaining", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: org.jsoup.slect.Evaluator$Attribut1WithValueContaining
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tag tag0 = Tag.valueOf("$axSZze must be 0 (uTlimited) `rlarger");
      CDataNode cDataNode0 = new CDataNode("$axSZze must be 0 (uTlimited) `rlarger");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("action", "action");
      FormElement formElement0 = new FormElement(tag0, "$axSZze must be 0 (uTlimited) `rlarger", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tag tag0 = Tag.valueOf("$axSZze must be 0 (uTlimited) `r larger");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "n$$:y]K8!1!%HC", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: n$$:y]K8!1!%HC
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("sovc");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "y_BYj;QR&FwLn;><MG", attributes0);
      Elements elements0 = formElement0.elements();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("$axSZze must be 0 (uTlimited) `r larger");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "select");
      FormElement formElement0 = new FormElement(tag0, "n$$:y]K8!1!%HC", attributes0);
      FormElement formElement1 = formElement0.addElement(element0);
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("maxSZze must be 0 (uTlimited) `r larger");
      CDataNode cDataNode0 = new CDataNode("maxSZze must be 0 (uTlimited) `r larger");
      FormElement formElement0 = new FormElement(tag0, "Could not determine a form action URL for submit. Ensure you set a base URI when parsing.", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.removeChild(cDataNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
