/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 17:10:15 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      Element element0 = formElement0.prependElement(",O*88s");
      formElement0.removeChild(element0);
      assertEquals(0, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("http:/");
      FormElement formElement0 = new FormElement(tag0, "http:/", (Attributes) null);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf("G#Q>yw[rUvFw~");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "G#Q>yw[rUvFw~", attributes0);
      formElement0.addElement(formElement0);
      Elements elements0 = formElement0.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("");
      Tag tag0 = Tag.valueOf("63p'wcOWZ?z5RYUC");
      Attributes attributes0 = cDataNode0.attributes();
      Document document0 = new Document("POST");
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      formElement0.setSiblingIndex(1308);
      FormElement formElement1 = formElement0.addElement(document0);
      assertFalse(formElement1.isBlock());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      formElement0.siblingIndex = (-1881084541);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", (Attributes) null);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      assertEquals(0, formElement1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("v;%EUk?'f7+Z?`wE;GB");
      FormElement formElement0 = new FormElement(tag0, "v;%EUk?'f7+Z?`wE;GB", (Attributes) null);
      Document document0 = new Document("v;%EUk?'f7+Z?`wE;GB");
      document0.appendChild(formElement0);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("v;%EUk?'f7+Z?`wE;GB", formElement1.baseUri());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("method", "oj.^");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("oj.^", parseSettings0);
      attributes0.vals = null;
      FormElement formElement0 = new FormElement(tag0, "method", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attribute attribute0 = new Attribute("method", "oj.^");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(attribute0);
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      Tag tag0 = Tag.valueOf("oj.^", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "pe%)q@l", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("@yDFY!q48jM");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "4sU{~K(", attributes0);
      List<Node> list0 = Parser.parseXmlFragment("OJTR", "@yDFY!q48jM");
      formElement0.childNodes = list0;
      Document document0 = Parser.parseBodyFragmentRelaxed("4sU{~K(", "COULD NOT DETERMINE A FORM ACTION URL FOR SUBMIT. ENSURE YOU SET A BASE URI WHEN PARSING.");
      document0.parentNode = (Node) formElement0;
      // Undeclared exception!
      try { 
        formElement0.removeChild(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Z~_");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.safety.Cleaner$CleaningVisitor", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("");
      Tag tag0 = Tag.valueOf("3p'wcOWZ?z5RYUC");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "3p'wcOWZ?z5RYUC", attributes0);
      cDataNode0.setParentNode(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(cDataNode0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      attributes0.add("name", "select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) pseudoTextElement0;
      nodeArray0[1] = (Node) pseudoTextElement0;
      nodeArray0[2] = (Node) pseudoTextElement0;
      DocumentType documentType0 = new DocumentType("name", "]w?R?", "!Ts,.u");
      nodeArray0[3] = (Node) documentType0;
      nodeArray0[4] = (Node) pseudoTextElement0;
      nodeArray0[5] = (Node) pseudoTextElement0;
      nodeArray0[6] = (Node) pseudoTextElement0;
      pseudoTextElement0.addChildren(nodeArray0);
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      formElement0.addElement(pseudoTextElement0);
      // Undeclared exception!
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("ol", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("ol");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "ol", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      attributes0.add("name", "select");
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      formElement0.addElement(pseudoTextElement0);
      // Undeclared exception!
      try { 
        formElement0.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tag tag0 = Tag.valueOf("v;%EUk?'f7+B?`wE;:B");
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, (Attributes) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      attributes1.add("type", "radio");
      Tag tag0 = Tag.valueOf("object");
      FormElement formElement0 = new FormElement(tag0, "radio", attributes0);
      Element element0 = formElement0.attr("checked", "name");
      element0.val("type");
      FormElement formElement1 = formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      Tag tag0 = Tag.valueOf("input");
      attributes1.add("type", "radio");
      FormElement formElement0 = new FormElement(tag0, "EkmO<j'Fr?<yA\"{P#+B", attributes0);
      Element element0 = formElement0.attr("checked", "EkmO<j'Fr?<yA\"{P#+B");
      formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "name");
      Tag tag0 = Tag.valueOf("input");
      attributes1.add("type", "radio");
      FormElement formElement0 = new FormElement(tag0, "EkmO<j'Fr?<yA\"{P#+B", attributes0);
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("name", "name");
      Tag tag0 = Tag.valueOf("input");
      FormElement formElement0 = new FormElement(tag0, "name", attributes1);
      Element element0 = formElement0.attr("type", "checkbox");
      formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "|ajet", attributes0);
      Element element0 = formElement0.attr("name", "|ajet");
      formElement0.prependElement("option");
      FormElement formElement1 = formElement0.addElement(element0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag1 = Tag.valueOf("input", parseSettings0);
      FormElement formElement1 = new FormElement(tag1, "select", attributes1);
      formElement0.addElement(formElement1);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("name", "select");
      FormElement formElement0 = new FormElement(tag0, " rBKDRx>R", attributes1);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "/F1<&j.w/x%A\"C{", attributes0);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      CDataNode cDataNode0 = new CDataNode("checked");
      Attributes attributes0 = cDataNode0.attributes();
      attributes0.put("disabled", true);
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, " rBKDRx>R", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "/F1<&j.w/x%A\"C{", attributes0);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("method", "POST");
      Tag tag0 = Tag.valueOf("Pi");
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: POST
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tag tag0 = Tag.valueOf("B`");
      Attributes attributes0 = new Attributes();
      attributes0.add("action", "method");
      FormElement formElement0 = new FormElement(tag0, "&amp;", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tag tag0 = Tag.valueOf("B`");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "&amp;", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tag tag0 = Tag.valueOf("v;%EUk?'f7+Z?`wE;GB");
      FormElement formElement0 = new FormElement(tag0, "v;%EUk?'f7+Z?`wE;GB", (Attributes) null);
      Document document0 = new Document("v;%EUk?'f7+Z?`wE;GB");
      formElement0.addElement(document0);
      formElement0.formData();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      FormElement formElement0 = new FormElement(tag0, "select", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
