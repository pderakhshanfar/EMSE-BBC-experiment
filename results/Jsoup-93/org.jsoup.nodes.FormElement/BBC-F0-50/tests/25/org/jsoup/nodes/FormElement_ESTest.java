/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 01 21:00:27 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.parser.CharacterReader");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.parser.CharacterReader", attributes0);
      formElement0.prependChild(formElement0);
      formElement0.removeChild(formElement0);
      assertEquals(0, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("hVzh");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("hVzh", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      formElement0.addElement(pseudoTextElement0);
      Elements elements0 = formElement0.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("iuRxGM`dp%\"yc'");
      CDataNode cDataNode0 = new CDataNode("iuRxGM`dp%\"yc'");
      Document document0 = Parser.parseBodyFragment("~=8}Ase;9\"olVg", "~=8}Ase;9\"olVg");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "CbYa9od}", attributes0);
      formElement0.setSiblingIndex(330);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals("iurxgm`dp%\"yc'", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tag tag0 = Tag.valueOf("iuRxGM`dp%\"yc'");
      CDataNode cDataNode0 = new CDataNode("iuRxGM`dp%\"yc'");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "iuRxGM`dp%\"yc'", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("", "Could not parse query '%s': unexpected token at '%s'");
      formElement0.siblingIndex = (-2364);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals((-2364), formElement1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("ins", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "option[selected]", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("ins", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("radio", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      formElement0.setParentNode(formElement0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals(0, formElement1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("{KWNGC", "{KWNGC");
      Tag tag0 = Tag.valueOf("eKK )<$VwD6mN?!");
      FormElement formElement0 = new FormElement(tag0, "SMp=yw!_Q", (Attributes) null);
      formElement0.text("eKK )<$VwD6mN?!");
      FormElement formElement1 = formElement0.addElement(document0);
      assertFalse(formElement1.hasParent());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("method", "hjzu");
      Tag tag0 = Tag.valueOf("hjzu");
      attributes0.vals = null;
      FormElement formElement0 = new FormElement(tag0, "E=1$rJdE2/s/", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("hVzh");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("method", "hVzh");
      attributes1.add("method", "method");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("hVzh", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "No buffer left to unconsume", attributes0);
      String[] stringArray0 = new String[2];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("v`ybY");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("radio");
      FormElement formElement0 = new FormElement(tag0, "radio", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~=8}Ase;9\"olVg", "~=8}Ase;9\"olVg");
      Tag tag0 = Tag.valueOf("~=8}Ase;9\"olVg");
      CDataNode cDataNode0 = new CDataNode("<07lTPT8&U%\"Q%/6");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      FormElement formElement1 = formElement0.addElement(document0);
      formElement1.parentNode = (Node) formElement0;
      // Undeclared exception!
      try { 
        formElement1.removeChild(formElement0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      Attributes attributes1 = attributes0.put("name", "select");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) pseudoTextElement0;
      nodeArray0[1] = (Node) pseudoTextElement0;
      nodeArray0[2] = (Node) pseudoTextElement0;
      pseudoTextElement0.addChildren(nodeArray0);
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      // Undeclared exception!
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("b7Y{?Y{@q7`|YR ");
      CDataNode cDataNode0 = new CDataNode("b7Y{?Y{@q7`|YR ");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "b7Y{?Y{@q7`|YR ", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      attributes0.put("name", "select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      formElement0.addElement(pseudoTextElement0);
      // Undeclared exception!
      try { 
        formElement0.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("img");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      Attributes attributes1 = attributes0.put("name", "select");
      FormElement formElement0 = new FormElement(tag0, "select", attributes1);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("select");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      Attributes attributes1 = attributes0.add("disabled", ",X");
      FormElement formElement0 = new FormElement(tag0, "disabled", attributes1);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("OTT[ODK^\"}");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "h8qI&{a_Tpui3cs", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":_aogm", attributes0);
      FormElement formElement1 = formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tag tag0 = Tag.valueOf("fBxXeXDtp2p(");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("method", "POST", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "`<vg@ Xoy]I*&T>h$~f", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: `<vg@ Xoy]I*&T>h$~f
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("b7Y{?Y{@q7`|YR ");
      CDataNode cDataNode0 = new CDataNode("b7Y{?Y{@q7`|YR ");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = new Attribute("action", "4n3omKt[G7s}");
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "action", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("iuRxGM`dp%\"yc'");
      CDataNode cDataNode0 = new CDataNode("iuRxGM`dp%\"yc'");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "iuRxGM`dp%\"yc'", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("iuRxGM`dp%\"yc'");
      CDataNode cDataNode0 = new CDataNode("iuRxGM`dp%\"yc'");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "iuRxGM`dp%\"yc'", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("", "Could not parse query '%s': unexpected token at '%s'");
      FormElement formElement1 = formElement0.addElement(document0);
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("~=8}Ase;9\"olVg");
      CDataNode cDataNode0 = new CDataNode("<07lTPT8&U%\"Q%/6");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
