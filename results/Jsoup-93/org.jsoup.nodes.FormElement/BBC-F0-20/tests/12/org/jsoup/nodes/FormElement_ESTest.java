/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 17:19:08 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tag tag0 = Tag.valueOf("W(~-zrj9^d}");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "W(~-zrj9^d}", attributes0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) formElement0;
      nodeArray0[1] = (Node) formElement0;
      nodeArray0[2] = (Node) formElement0;
      nodeArray0[3] = (Node) formElement0;
      nodeArray0[4] = (Node) formElement0;
      nodeArray0[5] = (Node) formElement0;
      formElement0.addChildren(nodeArray0);
      formElement0.removeChild(formElement0);
      assertEquals(0, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ">V~SSF)_", attributes0);
      formElement0.addElement(pseudoTextElement0);
      Elements elements0 = formElement0.elements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tag tag0 = Tag.valueOf(";%T#Ly{T");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "gQVSw{3K-N`>((P]Sr", attributes0);
      Document document0 = Document.createShell(";%T#Ly{T");
      formElement0.setSiblingIndex(1);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals(";%T#Ly{T", formElement1.nodeName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("POST");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      formElement0.setSiblingIndex((-1717986916));
      FormElement formElement1 = formElement0.addElement((Element) null);
      assertSame(formElement1, formElement0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("~b7iW>Ohk}eTr9M|Wn");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("h6");
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertEquals("h6", formElement1.normalName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tag tag0 = Tag.valueOf("~b7iW>Ohk}eTr9M|`Wn");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "~b7iW>Ohk}eTr9M|`Wn", attributes0);
      Document document0 = new Document("~b7iW>Ohk}eTr9M|`Wn");
      document0.reparentChild(formElement0);
      FormElement formElement1 = formElement0.addElement(document0);
      assertEquals(0, formElement1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("object");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      formElement0.text("EL<QOUT");
      FormElement formElement1 = formElement0.addElement(formElement0);
      assertSame(formElement1, formElement0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("PUBLIC", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("PUBLIC", "option");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.keys = null;
      FormElement formElement0 = new FormElement(tag0, "option", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tag tag0 = Tag.valueOf("3gCgzG@&#_$o$5a");
      CDataNode cDataNode0 = new CDataNode("{:B!h2Qshzbpp2J|KrG");
      Attributes attributes0 = cDataNode0.attributes();
      Attributes attributes1 = attributes0.put("iohl{y`@N", true);
      FormElement formElement0 = new FormElement(tag0, "o<X-sZl", attributes1);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("79", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      // Undeclared exception!
      try { 
        formElement0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tag tag0 = Tag.valueOf("~b7iW>Ohk}eTr9M|`Wn");
      FormElement formElement0 = new FormElement(tag0, "~b7iW>Ohk}eTr9M|`Wn", (Attributes) null);
      CDataNode cDataNode0 = new CDataNode("~b7iW>Ohk}eTr9M|`Wn");
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("SKIfqmE;vbaL");
      FormElement formElement0 = new FormElement(tag0, "SKIfqmE;vbaL", attributes0);
      CDataNode cDataNode0 = new CDataNode("SKIfqmE;vbaL");
      cDataNode0.setSiblingIndex((-437));
      Node node0 = cDataNode0.doClone(formElement0);
      // Undeclared exception!
      try { 
        formElement0.removeChild(node0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.add("name", "select");
      FormElement formElement1 = formElement0.addElement(formElement0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) formElement1;
      formElement1.addChildren(nodeArray0);
      // Undeclared exception!
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("EpEN)S\"nimPw");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      FormElement formElement1 = formElement0.addElement((Element) null);
      // Undeclared exception!
      try { 
        formElement1.formData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.FormElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase(";B`|Yfg_wzTj#eyl2", ";B`|Yfg_wzTj#eyl2");
      Tag tag0 = Tag.valueOf("object");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      attributes0.add("type", "object");
      attributes0.add("name", "type");
      String[] stringArray0 = new String[2];
      attributes0.vals = stringArray0;
      formElement0.addElement(formElement0);
      // Undeclared exception!
      try { 
        formElement0.formData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("jd8kAJyYJ@|M,o", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = null;
      try {
        formElement0 = new FormElement(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("object");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      attributes0.add("name", "name");
      attributes0.put("type", "CHECKBOX");
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement0.val("@H=M44nh");
      attributes0.add("checked", "object");
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("object");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      attributes0.add("name", "name");
      attributes0.put("type", "CHECKBOX");
      formElement0.addElement(formElement0);
      attributes0.add("checked", "object");
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("object");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      Attributes attributes1 = attributes0.put("type", "radio");
      attributes1.put("name", "oegIu");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "H4zrFs{2i?@T|zSqZ^", attributes0);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("object");
      FormElement formElement0 = new FormElement(tag0, "object", attributes0);
      attributes0.add("name", "type");
      formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.add("name", "select");
      FormElement formElement1 = formElement0.addElement(formElement0);
      List<Connection.KeyVal> list0 = formElement1.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      attributes0.add("disabled", "5L@G|71Tj");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ">V~SSF)_", attributes0);
      formElement0.addElement(pseudoTextElement0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("sj2D;Z9(JClz");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "sj2D;Z9(JClz", attributes0);
      Document document0 = Parser.parse("sj2D;Z9(JClz", "Pi-vb/gdoH40T#OC");
      formElement0.addElement(document0);
      List<Connection.KeyVal> list0 = formElement0.formData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tag tag0 = Tag.valueOf("x[f3=");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("method", "POST");
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "x[f3=", attributes1);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: x[f3=
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("action");
      Attributes attributes0 = new Attributes();
      attributes0.add("action", "action");
      FormElement formElement0 = new FormElement(tag0, "=", attributes0);
      // Undeclared exception!
      try { 
        formElement0.submit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("QOT");
      FormElement formElement0 = new FormElement(tag0, "http:/", attributes0);
      Connection connection0 = formElement0.submit();
      assertNotNull(connection0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tag tag0 = Tag.valueOf("POST");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "POST", attributes0);
      Elements elements0 = formElement0.elements();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tag tag0 = Tag.valueOf("select");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "select", attributes0);
      FormElement formElement1 = formElement0.addElement(formElement0);
      formElement1.formData();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("jd8kAJyYJ@|M,o", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "limitedQuirks", attributes0);
      CDataNode cDataNode0 = new CDataNode("");
      // Undeclared exception!
      try { 
        formElement0.removeChild(cDataNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
