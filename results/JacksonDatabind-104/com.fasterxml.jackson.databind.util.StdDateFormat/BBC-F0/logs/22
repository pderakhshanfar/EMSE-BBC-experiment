* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: com.fasterxml.jackson.databind.util.StdDateFormat
* Starting Client-0
* Connecting to master process on port 19038
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonDatabind-104/target/classes
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.databind.util.StdDateFormat
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1396
* Using seed 2869253024
* Starting evolution
* Initial Number of Goals in DynaMOSA = 666 / 1396
[MASTER] 21:31:30.171 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
* Search finished after 302s and 469 generations, 151791 statements, best individual has fitness: 192.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 234
* Number of covered goals: 196
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 146
* Number of covered goals: 120
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 714
* Number of covered goals: 675
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 58%
* Total number of goals: 90
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 146
* Number of covered goals: 120
* Generated 85 tests with total length 372
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 33%
* Compiling and checking tests
[MASTER] 21:33:21.939 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 21:33:21.940 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
Locale locale0 = Locale.CANADA;
Boolean boolean0 = new Boolean(true);
StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);
ParsePosition parsePosition0 = new ParsePosition(48);
stdDateFormat0.parse("0000-00-00T00:00", parsePosition0);

[MASTER] 21:33:22.739 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<[1970-01-01T00:00:00.332]+0000> but was:<[2014-02-14T20:21:21.320]+0000>
[MASTER] 21:33:22.740 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = new StdDateFormat();
Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
StringBuffer stringBuffer0 = new StringBuffer();
Date date0 = stdDateFormat0.parse("0000-00-00");
stdDateFormat0.format(date0, stringBuffer0, fieldPosition0);
assertEquals("1970-01-01T00:00:00.332+0000", stringBuffer0.toString());


[MASTER] 21:33:26.235 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 21:33:26.235 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
ParsePosition parsePosition0 = new ParsePosition(89);
stdDateFormat0._parseAsISO8601("0000-00-00T00:00", parsePosition0);

[MASTER] 21:33:26.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 21:33:26.541 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = new StdDateFormat();
ParsePosition parsePosition0 = new ParsePosition(0);
stdDateFormat0._parseDate("0000-00-00T00:00", parsePosition0);

[MASTER] 21:33:27.279 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 21:33:27.280 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(15, "Value \"");
Locale locale0 = Locale.TAIWAN;
StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0);
stdDateFormat0.parse("0000-00-00T00:00");

[MASTER] 21:33:28.003 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 21:33:28.003 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(15, "Value \"");
Locale locale0 = Locale.TAIWAN;
StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0);
ParsePosition parsePosition0 = new ParsePosition(5498);
stdDateFormat0.parseAsISO8601("0000-00-00T00:00", parsePosition0);

[MASTER] 21:33:28.154 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.text.ParseException: Cannot parse date "yyyy-MM-dd'T'HH:mm:ss.SSSZ": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null)
[MASTER] 21:33:28.155 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ZoneInfo zoneInfo0 = (ZoneInfo)StdDateFormat.DEFAULT_TIMEZONE;
Locale locale0 = Locale.FRENCH;
Locale.Category locale_Category0 = Locale.Category.DISPLAY;
Locale.setDefault(locale_Category0, locale0);
StdDateFormat stdDateFormat0 = new StdDateFormat(zoneInfo0, locale0);
StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);
ParsePosition parsePosition0 = new ParsePosition((-1422));
ParsePosition parsePosition1 = new ParsePosition(0);
stdDateFormat1.instance.parse("yyyy-MM-dd'T'HH:mm:ss.SSSZ", parsePosition1);
stdDateFormat1.instance.parseAsISO8601("yyyy-MM-dd'T'HH:mm:ss.SSSZ", parsePosition0);

[MASTER] 21:33:29.399 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<...gorianCalendar[time=[?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id="UTC",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=?,MONTH=?,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=?,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=?,HOUR=?,HOUR_OF_DAY=?,MINUTE=?,SECOND=?,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]]> but was:<...gorianCalendar[time=[1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="UTC",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]]>
[MASTER] 21:33:29.401 [logback-1] WARN  JUnitAnalyzer - Failing test:
 TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
Locale locale0 = StdDateFormat.DEFAULT_LOCALE;
StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0);
Calendar calendar0 = stdDateFormat0._getCalendar(timeZone0);
assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"UTC\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=?,MONTH=?,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=?,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=?,HOUR=?,HOUR_OF_DAY=?,MINUTE=?,SECOND=?,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]", calendar0.toString());
assertFalse(stdDateFormat0.isColonIncludedInTimeZone());


[MASTER] 21:33:36.470 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test52 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 21:33:36.470 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
Boolean boolean0 = new Boolean(true);
SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-510), ";1+9x)3EBv!");
Locale locale0 = Locale.FRANCE;
StdDateFormat stdDateFormat1 = new StdDateFormat(simpleTimeZone0, locale0, (Boolean) null);
MockDate mockDate0 = new MockDate(627, (-1867), (-1));
StdDateFormat stdDateFormat2 = stdDateFormat0.withLenient((Boolean) null);
stdDateFormat2.format((Date) mockDate0);

[MASTER] 21:33:36.471 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test51 -> class java.text.ParseException: Cannot parse date "yyyy-MM-dd'T'HH:mm:ss.SSSZ": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null)
[MASTER] 21:33:36.471 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
String string0 = "";
ParsePosition parsePosition0 = new ParsePosition(43);
MockDate mockDate0 = new MockDate(537, 43, 43, 43, 43);
stdDateFormat0.isLenient();
stdDateFormat0._parseAsISO8601("yyyy-MM-dd'T'HH:mm:ss.SSSZ", parsePosition0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'StdDateFormat_ESTest' to results/JacksonDatabind-104/com.fasterxml.jackson.databind.util.StdDateFormat/BBC-F0/tests/22
* Done!

* Computation finished
