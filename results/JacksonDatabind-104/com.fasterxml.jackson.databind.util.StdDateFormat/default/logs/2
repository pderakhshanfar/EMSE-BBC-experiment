* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.fasterxml.jackson.databind.util.StdDateFormat
* Starting Client-0
* Connecting to master process on port 11396
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonDatabind-104/target/classes
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.databind.util.StdDateFormat
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1396
* Using seed 2607331144
* Starting evolution
* Initial Number of Goals in DynaMOSA = 666 / 1396
[MASTER] 21:23:23.442 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 21:24:25.565 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 21:25:34.780 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
* Search finished after 302s and 825 generations, 197051 statements, best individual has fitness: 194.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 83%
* Total number of goals: 234
* Number of covered goals: 195
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 146
* Number of covered goals: 118
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 90%
* Total number of goals: 29
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 714
* Number of covered goals: 671
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 58%
* Total number of goals: 90
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 146
* Number of covered goals: 118
* Generated 83 tests with total length 281
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 21:26:27.055 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 21:26:27.055 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = new StdDateFormat();
stdDateFormat0.parse("0000-00-00T00:00", (ParsePosition) null);

[MASTER] 21:26:28.951 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:26:28.953 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
StdDateFormat stdDateFormat1 = stdDateFormat0.withColonInTimeZone(false);
assertFalse(stdDateFormat1.isLenient());


[MASTER] 21:26:29.452 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 21:26:29.452 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = new StdDateFormat();
stdDateFormat0._parseDate("0000-00-00T00:00", (ParsePosition) null);

[MASTER] 21:26:33.135 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalStateException
[MASTER] 21:26:33.135 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = new StdDateFormat();
ParsePosition parsePosition0 = new ParsePosition((-8));
stdDateFormat0._parseAsISO8601("0000-00-00T00:00", parsePosition0);

[MASTER] 21:26:33.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 21:26:33.972 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
stdDateFormat0.parse("0000-00-00T00:00");

[MASTER] 21:26:34.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 21:26:34.418 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
ParsePosition parsePosition0 = new ParsePosition(178);
stdDateFormat0.parseAsISO8601("0000-00-00T00:00", parsePosition0);

[MASTER] 21:26:34.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.text.ParseException: Cannot parse date "": while it seems to fit format 'yyyy-MM-dd', parsing fails (leniency? null)
[MASTER] 21:26:34.634 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
ParsePosition parsePosition0 = new ParsePosition(39);
stdDateFormat0.parseAsISO8601("", parsePosition0);

[MASTER] 21:26:35.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 21:26:35.418 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
ParsePosition parsePosition0 = new ParsePosition(65);
stdDateFormat0._parseAsISO8601("0000-00-00", parsePosition0);

[MASTER] 21:26:41.187 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test46 -> class java.lang.AssertionError: Expecting exception: NullPointerException
[MASTER] 21:26:41.188 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StdDateFormat stdDateFormat0 = StdDateFormat.instance;
SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(57, "\" can not be represented as BigDecimal");
StringWriter stringWriter0 = new StringWriter(286);
StringBuffer stringBuffer0 = stringWriter0.getBuffer();
Locale locale0 = Locale.SIMPLIFIED_CHINESE;
MockDate mockDate0 = new MockDate(57, 286, 45, 58, 58);
stdDateFormat0._format(simpleTimeZone0, locale0, mockDate0, stringBuffer0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'StdDateFormat_ESTest' to results/JacksonDatabind-104/com.fasterxml.jackson.databind.util.StdDateFormat/default/tests/2
* Done!

* Computation finished
