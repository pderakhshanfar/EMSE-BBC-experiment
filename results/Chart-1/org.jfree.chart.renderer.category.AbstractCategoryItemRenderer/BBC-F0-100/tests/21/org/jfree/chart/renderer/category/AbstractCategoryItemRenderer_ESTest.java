/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 06 10:54:54 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JTable;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.UnitType;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      DecimalFormat decimalFormat0 = new DecimalFormat("bta(r");
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("bta(r", decimalFormat0);
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, (-1), (-137), true, 10, 0.0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle rectangle0 = new Rectangle(10, 10);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      GeneralPath generalPath0 = new GeneralPath(categoryStepRenderer0.DEFAULT_SHAPE);
      Rectangle rectangle1 = generalPath0.getBounds();
      Point2D.Double point2D_Double0 = (Point2D.Double)categoryStepRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle1, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-5.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      JTableHeader jTableHeader0 = new JTableHeader((TableColumnModel) null);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      Point2D.Double point2D_Double0 = (Point2D.Double)groupedStackedBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, defaultCaret0, rectangle0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("E@");
      ValueMarker valueMarker0 = new ValueMarker(1.0E-9);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(1, 1013, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Float0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 200, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      statisticalBarRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D_Double0, 91.697025, groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0, 1.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("3.^", 0.2, 3.0);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = groupedStackedBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(1, 2185, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      groupedStackedBarRenderer0.drawBackground(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0);
      assertTrue(combinedDomainCategoryPlot0.isNotify());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 8);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 193, (-1261), (-1261), 6, 10, 15, true, false, false, false, false, true);
      Rectangle rectangle0 = chartPanel0.getBounds((Rectangle) null);
      LogAxis logAxis0 = new LogAxis();
      Layer layer0 = Layer.BACKGROUND;
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      statisticalLineAndShapeRenderer0.drawAnnotations(graphics2D0, rectangle0, categoryAxis3D0, logAxis0, layer0, plotRenderingInfo0);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[14][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      waterfallBarRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 5, 5, true, (-2699.336141), 5);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Number[][] numberArray0 = new Number[12][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 5, 5, true);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.ENGLISH;
      DateAxis dateAxis0 = new DateAxis("E", zoneInfo0, locale0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, dateAxis0, minMaxCategoryRenderer0);
      Rectangle rectangle0 = new Rectangle(10, 10, 10, 500);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, defaultKeyedValues2DDataset0, (PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0F, (-1935.07353412066));
      BufferedImage bufferedImage0 = new BufferedImage(1, 2185, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1, 10, 10, 10);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.createState((PlotRenderingInfo) null);
      boolean boolean0 = stackedBarRenderer3D0.hitTest((-1012.3), 0.2, graphics2D0, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis3D0, (ValueAxis) null, defaultCategoryDataset0, 2185, 1, true, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = groupedStackedBarRenderer0.getSeriesURLGenerator((-2353));
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = boxAndWhiskerRenderer0.getSeriesItemLabelGenerator(15);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'paint' argument.");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) groupedStackedBarRenderer0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, extendedCategoryAxis0, valueAxis0, groupedStackedBarRenderer0);
      NumberAxis numberAxis0 = (NumberAxis)categoryStepRenderer0.getRangeAxis(categoryPlot0, 2);
      assertTrue(numberAxis0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("*F0", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, symbolAxis0, statisticalBarRenderer0);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(categoryPlot0, 1881);
      assertEquals(0.05, valueAxis0.getUpperMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3361.97027), "");
      cyclicNumberAxis0.resizeRange(1.0E-6);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 180);
      assertEquals(0, valueAxis0.getMinorTickCount());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2488.497910323901);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CyclicNumberAxis cyclicNumberAxis1 = (CyclicNumberAxis)waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 500);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4022.522477), 1450.351161463798);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1171);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, (CategoryAxis) null, (ValueAxis) null, groupedStackedBarRenderer0);
      CategoryPlot categoryPlot1 = groupedStackedBarRenderer0.getPlot();
      assertTrue(categoryPlot1.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("", dateFormat0);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = minMaxCategoryRenderer0.getItemLabelGenerator(3021, (-2505), false);
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      categoryStepRenderer0.setPlot(combinedRangeCategoryPlot0);
      DrawingSupplier drawingSupplier0 = categoryStepRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      CategoryAxis categoryAxis0 = groupedStackedBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis3D0, (ValueAxis) null, groupedStackedBarRenderer0);
      CategoryAxis categoryAxis0 = boxAndWhiskerRenderer0.getDomainAxis(categoryPlot0, defaultCategoryDataset0);
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) lineAndShapeRenderer0.ZERO, (-552.03167357266), true);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      CustomCategoryURLGenerator customCategoryURLGenerator1 = (CustomCategoryURLGenerator)stackedBarRenderer3D0.getBaseURLGenerator();
      assertEquals(0, customCategoryURLGenerator1.getListCount());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator1 = (IntervalCategoryToolTipGenerator)levelRenderer0.getBaseToolTipGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = levelRenderer0.getBaseItemLabelGenerator();
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue((double) levelRenderer0.ZERO, (Comparable) 0.2, (Comparable) 0.2);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue(2499.8467, (Comparable) 0, (Comparable) 10);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      assertEquals(2499.8467, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue((-1597.335363), (Comparable) groupedStackedBarRenderer0.ZERO, (Comparable) false);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      assertEquals((-1597.335363), range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = lineRenderer3D0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      boolean boolean0 = levelRenderer0.equals(ganttRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesURLGenerator((-3205), (CategoryURLGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Color color0 = Color.yellow;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_PAINT, color0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesURLGenerator((-2233), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesToolTipGenerator((-621), (CategoryToolTipGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Y", dateFormat0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("@(`HepZc\"_9&%=u!W", numberFormat0);
      // Undeclared exception!
      try { 
        ganttRenderer0.setSeriesItemLabelGenerator((-2750), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesItemLabelGenerator((-2505), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(5, 1.0F, 1.0F, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 2.5E7, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(1, 2185, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ZnY`AI_dw.#YsKzji");
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = subCategoryAxis0.DEFAULT_TICK_LABEL_INSETS.createOutsetRectangle((Rectangle2D) defaultCaret0, false, false);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LogAxis logAxis0 = new LogAxis("{2}");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.hitTest(0.2, (double) levelRenderer0.ZERO, (Graphics2D) null, rectangle2D0, categoryPlot0, subCategoryAxis0, logAxis0, (CategoryDataset) null, 2541, 500, true, categoryStepRenderer_State0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2121.8618242), (-345.3281885), true);
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 8.0, 25.5, 0.0F, 0.0F);
      Rectangle2D rectangle2D0 = rectangleInsets0.createAdjustedRectangle(rectangle2D_Float0, (LengthAdjustmentType) null, (LengthAdjustmentType) null);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("C>");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.0F, "");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.hitTest(250000.0, 0.0F, (Graphics2D) null, rectangle2D0, categoryPlot0, subCategoryAxis0, cyclicNumberAxis0, defaultStatisticalCategoryDataset0, 5, 3358, false, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getRangeAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(7);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.getItemMiddle(0.0, stackedAreaRenderer0.ZERO, taskSeriesCollection0, categoryAxis3D0, rectangle0, (RectangleEdge) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getDomainAxis((CategoryPlot) null, taskSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getDomainAxis(combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      String[] stringArray0 = new String[4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      double[][] doubleArray0 = new double[4][5];
      double[] doubleArray1 = new double[6];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        barRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      double[][] doubleArray0 = new double[8][4];
      double[] doubleArray1 = new double[3];
      doubleArray0[3] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("w1,");
      ValueMarker valueMarker0 = new ValueMarker(0.0F);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Not implemented.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 10, "?");
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, defaultCaret0, 1.0F, minMaxCategoryRenderer0.DEFAULT_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      Year year0 = new Year(mockDate0);
      Week week0 = new Week(10, year0);
      PeriodAxis periodAxis0 = new PeriodAxis("", week0, week0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, periodAxis0, (Rectangle2D) null, 0.0, periodAxis0.DEFAULT_TICK_LABEL_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawOutline((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, (CategoryMarker) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, (Rectangle2D) null, (-2461.11532658), combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("$");
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0, 1.0, (Paint) null, logarithmicAxis0.DEFAULT_TICK_MARK_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawBackground(graphics2D0, categoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = thermometerPlot0.DEFAULT_INSETS.createOutsetRectangle(rectangle2D0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("org.jfree.chart.renderer.RendererState");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawAnnotations((Graphics2D) null, rectangle2D1, categoryAxis0, numberAxis3D0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 193.998, "");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, (CategoryPlot) null, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 0, 10, true, categoryItemRendererState0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, true, false, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0, (String) null);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis0, cyclicNumberAxis0, defaultStatisticalCategoryDataset0, 0, 10, false, categoryItemRendererState0, rectangle0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, false, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      LogAxis logAxis0 = new LogAxis();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis0, logAxis0, defaultStatisticalCategoryDataset0, (-1029), (-282), true, categoryItemRendererState0, rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 15, (double) 5, (double) 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0, 0.0, "a/?S'yA+4))i");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Double0, (Rectangle2D) null, cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Number[][] numberArray0 = new Number[5][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getBaseItemLabelPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, paint0, paint0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.addEntity(standardEntityCollection0, defaultPolarItemRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 5, 2890, false, 5, 2890);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultStatisticalCategoryDataset0, (-2018), (-2018), true, (-2018), (-2018));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, groupedStackedBarRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, (-1), 7, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("'=", "Null 'orientation' argument.", 0.2, 0.025);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = waterfallBarRenderer0.getURLGenerator((-3205), (-3205), true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      scatterRenderer0.setSeriesToolTipGenerator(180, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = groupedStackedBarRenderer0.getToolTipGenerator(955, 955, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      assertEquals(0, groupedStackedBarRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = boxAndWhiskerRenderer0.getSeriesToolTipGenerator(0);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Number[][] numberArray0 = new Number[1][4];
      Number[] numberArray1 = new Number[7];
      numberArray1[3] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 10, "");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 0, 3, false, categoryItemRendererState0, defaultCaret0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Number[][] numberArray0 = new Number[8][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "FyJ&%-'(L,l");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, (-4923), 5, true, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Number[][] numberArray0 = new Number[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "FyJ&%-'(L,l");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = categoryStepRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, categoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 0, 0, false, categoryItemRendererState0, defaultCaret0);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, (CategoryDataset) null, 449, 10, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Locale locale0 = Locale.GERMANY;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("2(", numberFormat0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, groupedStackedBarRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, 1, 4426, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_PAINT);
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultStatisticalCategoryDataset0, 10, 0, true, 0.2, (-1686.6362));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultStatisticalCategoryDataset0, 10, 0, true, 0.2, (-1686.6362));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, taskSeriesCollection0, (-2294), 1900, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Color color0 = Color.yellow;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_PAINT, color0);
      LegendItemCollection legendItemCollection0 = waterfallBarRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      ValueAxis valueAxis0 = groupedStackedBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("U\"&SR)D~3");
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      try { 
        levelRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("org.jfree.chart.renderer.xy.ClusteredXYBarRenderer", numberFormat0);
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      Object object0 = levelRenderer0.clone();
      assertTrue(object0.equals((Object)levelRenderer0));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("@");
      NumberAxis numberAxis0 = new NumberAxis();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("@", 5, 0.05);
      Layer layer0 = Layer.FOREGROUND;
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis0, categoryStepRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("@", numberAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(500, 5046, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("", decimalFormat0);
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(1.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultCategoryDataset0, 1, 1, true, 0.0, 0.0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) minMaxCategoryRenderer0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Number[][] numberArray0 = new Number[2][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultIntervalCategoryDataset0, 8, 1022, true, 1022, 2, false);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis0, groupedStackedBarRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      groupedStackedBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0E-8, 10, 3.0, 10, 0.2, 1.0E-8, plotOrientation0);
      assertEquals(1.0, groupedStackedBarRenderer0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, 10, (-7342), 36, 1.0F, 194.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.updateCrosshairValues(categoryCrosshairState0, (-1), 0, (-1), (-1), (-3670.51620373999), 0.0, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      groupedStackedBarRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0.2, 3.0, 1241.382721508401, (-2294), 0.0, 1.0, plotOrientation0);
      assertTrue(groupedStackedBarRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DrawingSupplier drawingSupplier0 = categoryStepRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Unknown layer.", 0.2, 2.5E-9, (-1844.616685804339));
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(lineRenderer3D1.equals((Object)lineRenderer3D0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineRenderer3D0.getLegendItemLabelGenerator();
      lineRenderer3D0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      lineRenderer3D0.setSeriesItemLabelGenerator(17, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem(22, 22);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem((-2272), 19);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, categoryAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      LogAxis logAxis0 = new LogAxis();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, logAxis0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle2D_Double0, logAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(3.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      Rectangle rectangle0 = new Rectangle();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = stackedBarRenderer0.getPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (double) stackedBarRenderer3D0.ZERO);
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0, 10, categoryPlot0.DEFAULT_GRIDLINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, categoryPlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE, 0.0F);
      stackedBarRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, cyclicNumberAxis0, intervalMarker0, rectangle0);
      assertEquals(2.0, intervalMarker0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, valueAxis0.DEFAULT_TICK_MARK_PAINT, valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      Rectangle rectangle0 = chartPanel0.getBounds();
      levelRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, valueAxis0, categoryMarker0, rectangle0);
      assertEquals(2.0F, valueAxis0.getTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("E@");
      ValueMarker valueMarker0 = new ValueMarker(0.0F);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(1, 993, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      valueMarker0.setLabel("E@");
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Float0);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("w1,");
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Float0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("vnKo:5}%a|x6CeM");
      Rectangle rectangle0 = new Rectangle();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = categoryStepRenderer0.getPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      Stroke stroke0 = defaultDrawingSupplier0.getNextStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 0.05, categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stroke0, 0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, cyclicNumberAxis0, intervalMarker0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.CHINA;
      DateAxis dateAxis0 = new DateAxis("+?Fyh*t", zoneInfo0, locale0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, dateAxis0, minMaxCategoryRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      minMaxCategoryRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle0);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Rectangle rectangle0 = new Rectangle(10, 10);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.data.xy.XYSeries");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, logAxis0, minMaxCategoryRenderer0);
      categoryStepRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, logAxis0, rectangle0, 10, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0, (-1246.6466132834892), categoryStepRenderer0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      Range range0 = categoryStepRenderer0.findRangeBounds((CategoryDataset) null, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("@");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("@", 0.0, 20.0, 0.05);
      Paint paint0 = xYPointerAnnotation0.getOutlinePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryAxis3D0.DEFAULT_TICK_MARK_PAINT, numberAxis0.DEFAULT_AXIS_LINE_PAINT, paint0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      Rectangle rectangle0 = new Rectangle(9, 5, 500, 9);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 10, 1.0F);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0, (PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Number[][] numberArray0 = new Number[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, defaultCaret0, categoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      lineRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertEquals(2.0, lineRenderer3D0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      LevelRenderer levelRenderer1 = (LevelRenderer)levelRenderer0.clone();
      assertEquals(1.0, levelRenderer1.getMaximumItemWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null, false);
      assertFalse(minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      boxAndWhiskerRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      CategoryURLGenerator categoryURLGenerator0 = boxAndWhiskerRenderer0.getURLGenerator(0, 2331, true);
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      assertEquals(0, boxAndWhiskerRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      scatterRenderer0.setSeriesToolTipGenerator(180, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      LevelRenderer levelRenderer1 = (LevelRenderer)levelRenderer0.clone();
      assertFalse(levelRenderer1.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setSeriesItemLabelGenerator(5, (CategoryItemLabelGenerator) null, false);
      assertEquals(2.0, boxAndWhiskerRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getItemLabelGenerator(5, 27, false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      waterfallBarRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) standardCategoryURLGenerator0);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = levelRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.createHotSpotShape((Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis0, dateAxis0, (CategoryDataset) null, 5, 0, false, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      levelRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      LevelRenderer levelRenderer1 = (LevelRenderer)levelRenderer0.clone();
      assertTrue(levelRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = boxAndWhiskerRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null);
      assertTrue(lineRenderer3D0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("vnKo:5}%a|x6CeM");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = categoryStepRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, (ValueAxis) null, categoryStepRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", valueAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 5052, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = minMaxCategoryRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.removeAnnotations();
      assertFalse(lineRenderer3D0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) lineAndShapeRenderer0.ZERO, (-552.03167357266), true);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = categoryStepRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      JFreeChart jFreeChart0 = new JFreeChart("", valueAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, false);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      categoryStepRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, defaultCaret0);
      assertEquals(0.0, defaultCaret0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("3.^");
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      // Undeclared exception!
      try { 
        lineRenderer3D0.getItemMiddle(0.0, boxAndWhiskerRenderer0.ZERO, (CategoryDataset) null, categoryAxis0, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      int int0 = groupedStackedBarRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 5, 7, 0, 15, 38, true, true, true, false, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1, (-903.633402749609), (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      NumberAxis numberAxis0 = new NumberAxis("PROPERTIES");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0, levelRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = levelRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }
}
