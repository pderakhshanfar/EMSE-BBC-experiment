/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 01 20:00:44 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Button;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.MultipleGradientPaint;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferInt;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.awt.image.WritableRaster;
import java.beans.PropertyChangeListener;
import java.lang.reflect.Array;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.ZoneId;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.TimeZone;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JEditorPane;
import javax.swing.JFormattedTextField;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JPasswordField;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.SpinnerNumberModel;
import javax.swing.border.SoftBevelBorder;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.multi.MultiTextUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.plaf.synth.SynthTabbedPaneUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.JTextComponent;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.KeyToGroupMap;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.event.SeriesChangeEvent;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.SeriesChangeInfo;
import org.jfree.data.general.SeriesChangeType;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Minute;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'labelPaint' argument.", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(26, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DateAxis dateAxis0 = new DateAxis("[`A`#");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.ui.PaintSample");
      Paint paint0 = extendedCategoryAxis0.getTickLabelPaint();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 1.0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE, paint0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      minMaxCategoryRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, intervalMarker0, defaultCaret0);
      assertEquals((-1.0), intervalMarker0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = (GroupedStackedBarRenderer)groupedStackedBarRenderer0.clone();
      assertEquals(4.0, groupedStackedBarRenderer1.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, (double) lineRenderer3D0.ZERO);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, lineRenderer3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      LinkedList<StandardCategorySeriesLabelGenerator> linkedList0 = new LinkedList<StandardCategorySeriesLabelGenerator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 2.0F, (Number) 0.05, (Number) 2.0F, (Number) lineRenderer3D0.ZERO, (Number) 10, (Number) 2.0F, (Number) 2.0F, (Number) 500, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) 2.0F, (Comparable) true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      intervalCategoryItemLabelGenerator0.clone();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = (GroupedStackedBarRenderer)groupedStackedBarRenderer0.clone();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)groupedStackedBarRenderer1.getItemLabelGenerator(74, (-1), true);
      assertNotSame(intervalCategoryItemLabelGenerator1, intervalCategoryItemLabelGenerator0);
      assertNotNull(intervalCategoryItemLabelGenerator1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DateAxis dateAxis0 = new DateAxis();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.lookupSeriesOutlineStroke(1223);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("bj");
      groupedStackedBarRenderer0.setSeriesURLGenerator(2033, (CategoryURLGenerator) standardCategoryURLGenerator0);
      groupedStackedBarRenderer0.getURLGenerator(2033, 2033, false);
      groupedStackedBarRenderer0.setDrawBarOutline(true);
      assertEquals(0, groupedStackedBarRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      groupedStackedBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      groupedStackedBarRenderer0.getURLGenerator(10, 10, false);
      Object object0 = groupedStackedBarRenderer0.clone();
      assertTrue(object0.equals((Object)groupedStackedBarRenderer0));
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis0, defaultCategoryItemRenderer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      Rectangle rectangle0 = new Rectangle(2535, (-1), 10, (-1));
      Rectangle2D rectangle2D0 = rectangleInsets0.createOutsetRectangle((Rectangle2D) rectangle0, true, true);
      Rectangle2D rectangle2D1 = dateAxis0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle(rectangle2D0);
      CategoryItemRendererState categoryItemRendererState0 = barRenderer3D0.initialise((Graphics2D) null, rectangle2D1, categoryPlot0, taskSeriesCollection0, (PlotRenderingInfo) null);
      categoryItemRendererState0.getEntityCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      chartPanel0.getZoomRectangle();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity((EntityCollection) null, (Shape) null, taskSeriesCollection0, 10, (-1084), false, 0.0, 1.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis0, defaultCategoryItemRenderer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = defaultCategoryItemRenderer0.initialise((Graphics2D) null, defaultCaret0, categoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      int int0 = 4953;
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity((EntityCollection) null, (Shape) null, taskSeriesCollection0, 4953, 4953, false, 1.5707963267948966, 0.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4953, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 3, 2422, 10, 3, (-1055), (-1), false, false, true, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3212, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DateAxis dateAxis0 = new DateAxis("");
      IntervalMarker intervalMarker0 = new IntervalMarker((-577.873312683587), 680, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = metalTreeUI0.new NodeDimensionsHandler();
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      TreePath treePath0 = new TreePath(groupedStackedBarRenderer0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      variableHeightLayoutCache0.getBounds(treePath0, defaultCaret0);
      basicTreeUI_NodeDimensionsHandler0.getNodeDimensions(bufferedImage0, 2422, 17, true, (Rectangle) null);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("org.jfree.chart.ui.Contributor", "Null 'stroke' argument.", "Null 'stroke' argument.");
      statisticalLineAndShapeRenderer1.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
      assertFalse(boolean0);
      
      statisticalLineAndShapeRenderer1.getLegendItemToolTipGenerator();
      statisticalLineAndShapeRenderer0.getLegendItemToolTipGenerator();
      statisticalLineAndShapeRenderer0.getSeriesURLGenerator(17);
      assertFalse(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("U{gj3$3}/&UIS6");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      ValueMarker valueMarker0 = new ValueMarker(0.2);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("0(", subCategoryAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2422, 3212, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DateAxis dateAxis0 = new DateAxis("");
      minMaxCategoryRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, valueMarker0, defaultCaret0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.drawAnnotations(graphics2D0, defaultCaret0, subCategoryAxis0, dateAxis0, layer0, plotRenderingInfo0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesShapesVisible(2422, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      assertTrue(combinedDomainCategoryPlot0.canSelectByPoint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("U{gj3$3}/&UIS6");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3591.8117, 0.2);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, lineRenderer3D0);
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("U{gj3$3}/&UIS6", dateTickUnit0, (-1.0));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      JFreeChart jFreeChart0 = new JFreeChart("DateTickUnitType.SECOND", categoryPlot0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      cyclicNumberAxis0.setUpperBound(1.0F);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, (-1), 10, 1604, 15, (-1), 14, true, false, true, false, false, false, true);
      jFreeChart1.createBufferedImage(300, 10);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(categoryPlot0, (-2947));
      assertFalse(valueAxis0.isVerticalTickLabels());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("U{gj3$3}/&UIS6");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("U{gj3$3}/&UIS6", true, 1.0F);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      JFreeChart jFreeChart0 = new JFreeChart("U{gj3$3}/&UIS6", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, 15, 15, 0, 10, 0, true, true, true, true, false, true, true);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(680, 200);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, (double) lineRenderer3D0.ZERO);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, lineRenderer3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      categoryPlot0.setRangeAxisLocation(500, axisLocation1, true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      lineRenderer3D0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Float0);
      lineRenderer3D0.getRangeAxis(categoryPlot0, (-1129));
      assertEquals(0.8, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      defaultCategoryItemRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) customCategoryURLGenerator0, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, defaultCaret0, taskSeriesCollection0, 0, 2791, false, 2791, 2791);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      defaultCategoryItemRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) customCategoryURLGenerator0, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, defaultCaret0, taskSeriesCollection0, 0, 0, false, (double) defaultCategoryItemRenderer0.ZERO, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Locale locale0 = new Locale("Null 'layer' not permitted.");
      DateFormat dateFormat0 = DateFormat.getTimeInstance(0, locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Null 'layer' not permitted.", dateFormat0);
      defaultCategoryItemRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, defaultCaret0, taskSeriesCollection0, 0, (-2175), true, (-1708.327742541712), (-1708.327742541712));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Locale locale0 = new Locale("Null 'layer' not permitted.");
      DateFormat dateFormat0 = DateFormat.getTimeInstance(0, locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Null 'layer' not permitted.", dateFormat0);
      defaultCategoryItemRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, defaultCaret0, taskSeriesCollection0, 0, 0, false, (double) defaultCategoryItemRenderer0.ZERO, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("U{gj3$3}/&UIS6");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("] R4y/yU^#2Zy_<%v", true, 1.0F);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      JFreeChart jFreeChart0 = new JFreeChart("U{gj3$3}/&UIS6", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, "ZOOM_IN_DOMAIN", false, 1.0F, 10, 0.5F, 2.0F, plotOrientation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      scatterRenderer0.lookupSeriesStroke(1024);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(680, 200);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      statisticalLineAndShapeRenderer0.setBaseLinesVisible(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItemToolTipGenerator();
      scatterRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      scatterRenderer0.getBaseShapesFilled();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      Size2D size2D0 = new Size2D((double) scatterRenderer0.ZERO, (double) ganttRenderer0.ZERO);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, (-2700.6), 3.0, rectangleAnchor0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("8YXdU");
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      TimeZone timeZone0 = TimeZone.getTimeZone("8YXdU");
      Locale locale0 = Locale.GERMANY;
      PeriodAxis periodAxis0 = new PeriodAxis("&J~QcH", fixedMillisecond0, fixedMillisecond0, timeZone0, locale0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      int int0 = 3;
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultMultiValueCategoryDataset0, 3, 10);
      int int1 = (-2276);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      ganttRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, subCategoryAxis0, periodAxis0, slidingCategoryDataset0, (-2276), (-3054), true, categoryStepRenderer_State0, rectangle2D0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.DEFAULT_PAINT, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      defaultCategoryItemRenderer0.equals(statisticalLineAndShapeRenderer0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.equals((Object) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setEndPercent(8.0);
      assertTrue(ganttRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(12.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, lineRenderer3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 1.0F, (-1718.5215F), 312.93F);
      lineRenderer3D0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Float0);
      double double0 = lineRenderer3D0.getXOffset();
      assertEquals(12.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2014.02944564), 2.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      minMaxCategoryRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, defaultCaret0, 100000.0, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = new DefaultCategoryItemRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultKeyedValues2DDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      LogAxis logAxis0 = new LogAxis();
      Week week0 = new Week(89, 500);
      PeriodAxis periodAxis0 = new PeriodAxis("^%oeO", week0, week0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, periodAxis0, defaultCaret0, 2.0F, defaultCategoryItemRenderer1.DEFAULT_VALUE_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("U{gj3$*3!/H&UISd");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5887.21388532, 0, "U{gj3$*3!/H&UISd");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      SynthTabbedPaneUI synthTabbedPaneUI0 = new SynthTabbedPaneUI();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      GeneralPath generalPath0 = new GeneralPath(scatterRenderer0.DEFAULT_SHAPE);
      generalPath0.getBounds();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      scatterRenderer0.getPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 17, 6, 10, 18, 0, true, true, false, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis numberAxis0 = new NumberAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0.05);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      defaultCaret0.add((double) 2.0F, (-2085.372214441));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(valueMarker0);
      combinedRangeCategoryPlot0.markerChanged(markerChangeEvent0);
      minMaxCategoryRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, defaultCaret0, 2.0F, numberAxis0.DEFAULT_TICK_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-2086), 2);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge((-195));
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getItemMiddle(true, defaultCategoryItemRenderer0.ZERO, slidingGanttCategoryDataset0, subCategoryAxis0, defaultCaret0, rectangleEdge0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.axis.DateAxis");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, (-991.275), "-");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.axis.DateAxis", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation1 = chartPanel0.getOrientation();
      categoryCrosshairState0.updateCrosshairPoint(5.0E9, (double) 0, (-1.0), 5887.21388532, plotOrientation1);
      int int0 = 20;
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 0, 0, 0, 20, 0.2, (-952.242152161674), plotOrientation0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1119.115896514106), (-952.242152161674), true);
      StandardBarPainter standardBarPainter0 = new StandardBarPainter();
      stackedBarRenderer3D0.setBarPainter(standardBarPainter0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "a12)Q^q'");
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.axis.DateAxis");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1000000.0, (-991.275), "-");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.axis.DateAxis", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation1 = chartPanel0.getOrientation();
      categoryCrosshairState0.updateCrosshairPoint(5.0E9, (double) 0, (-1.0), 5887.21388532, plotOrientation1);
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 0, 0, 0, 20, 0.0, (-952.242152161674), plotOrientation0);
      Second second0 = null;
      try {
        second0 = new Second(20, 680, (-1273), (-49), 500, 3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'year' argument must be in range 1900 to 9999.
         //
         verifyException("org.jfree.data.time.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = true;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      DecimalFormat decimalFormat0 = new DecimalFormat("k~U:w:");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", decimalFormat0);
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 8, 730, false, 2058.92039, (double) defaultCategoryItemRenderer0.ZERO, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Number[][] numberArray0 = new Number[9][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Null 'plot' argument.");
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue((double) 0, (Comparable) 500, (Comparable) true);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.hitTest(1.0E-8, 500, (Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis0, numberAxis3D0, defaultCategoryDataset0, 0, 0, true, (CategoryItemRendererState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      stackedBarRenderer0.getURLGenerator((-1236), (-1236), true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(12, 0, 12);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (12) and height (0) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Number[][] numberArray0 = new Number[3][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      stackedAreaRenderer1.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      stackedAreaRenderer1.findRangeBounds(defaultIntervalCategoryDataset0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.getStackValues(defaultIntervalCategoryDataset1, 15, 9);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): category index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][0];
      Number[] numberArray1 = new Number[2];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      numberArray1[0] = (Number) integer0;
      double double0 = LineRenderer3D.DEFAULT_Y_OFFSET;
      numberArray1[1] = (Number) 8.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      numberArray2[0] = (Number) integer0;
      double double1 = LineRenderer3D.DEFAULT_Y_OFFSET;
      numberArray2[1] = (Number) 8.0;
      numberArray2[2] = (Number) integer0;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      numberArray2[3] = (Number) 5;
      numberArray2[4] = (Number) integer0;
      numberArray2[5] = (Number) integer0;
      numberArray2[6] = (Number) integer0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[2];
      numberArray3[0] = (Number) integer0;
      numberArray3[1] = (Number) integer0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[9];
      numberArray4[0] = (Number) integer0;
      numberArray4[1] = (Number) integer0;
      numberArray4[2] = (Number) integer0;
      numberArray4[3] = (Number) integer0;
      numberArray4[4] = (Number) integer0;
      numberArray4[5] = (Number) integer0;
      numberArray4[6] = (Number) integer0;
      numberArray4[7] = (Number) integer0;
      numberArray4[8] = (Number) integer0;
      numberArray0[3] = numberArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(54.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      Point point1 = new Point(point0);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point1);
      ValueMarker valueMarker0 = new ValueMarker((-951.6667));
      minMaxCategoryRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, numberAxis3D0, valueMarker0, defaultCaret0);
      Layer layer1 = Layer.FOREGROUND;
      minMaxCategoryRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis3D0, numberAxis3D0, layer1, (PlotRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      ItemLabelPosition itemLabelPosition0 = waterfallBarRenderer0.getPositiveItemLabelPosition(0, 0, true);
      ganttRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      waterfallBarRenderer0.setDrawBarOutline(true);
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      Point point1 = new Point(point0);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point1);
      ValueMarker valueMarker0 = new ValueMarker(0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, numberAxis3D0, valueMarker0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      double[][] doubleArray0 = new double[9][0];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1390.15570199567;
      doubleArray1[1] = (double) 10;
      doubleArray1[2] = (double) stackedAreaRenderer0.ZERO;
      doubleArray1[3] = (double) 10;
      doubleArray1[4] = (double) stackedAreaRenderer0.ZERO;
      doubleArray1[5] = (double) 10;
      doubleArray1[6] = (double) 10;
      doubleArray1[7] = (double) stackedAreaRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) stackedAreaRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[0];
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) 10;
      doubleArray5[1] = (double) 1.0F;
      doubleArray5[2] = (double) 1.0F;
      doubleArray5[3] = (double) stackedAreaRenderer0.ZERO;
      doubleArray5[4] = (double) 10;
      doubleArray5[5] = (double) 1.0F;
      doubleArray5[6] = (double) 10;
      doubleArray5[7] = (double) stackedAreaRenderer0.ZERO;
      doubleArray5[8] = (double) 10;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[2];
      doubleArray6[0] = (double) 10;
      doubleArray6[1] = 1390.15570199567;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[1];
      doubleArray7[0] = (double) 10;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[0];
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[0];
      doubleArray0[8] = doubleArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Number[][] numberArray0 = new Number[3][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("gd#rH6gt");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer1.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryStepRenderer1.hitTest((-1592.311999), 2136.51882, (Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, extendedCategoryAxis0, numberAxis3D0, defaultIntervalCategoryDataset0, (-2638), 3, false, categoryItemRendererState0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[5][5];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-801.3720048526826);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (-1543.68973391764);
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) stackedAreaRenderer0.ZERO;
      doubleArray3[5] = (double) stackedAreaRenderer0.ZERO;
      doubleArray3[6] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (double) 0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[3];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = (double) stackedAreaRenderer0.ZERO;
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      stackedAreaRenderer0.addEntity(standardEntityCollection0, defaultCaret0, defaultIntervalCategoryDataset0, 0, 0, true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setArtifactPaint(stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT);
      boxAndWhiskerRenderer0.getFillBox();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setYOffset(0.0);
      assertEquals(3, lineRenderer3D0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Graphics2D graphics2D0 = null;
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      stackedAreaRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      Number[][] numberArray0 = new Number[5][5];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[8];
      numberArray2[0] = (Number) 1.0F;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      numberArray2[1] = (Number) integer0;
      numberArray2[2] = combinedDomainCategoryPlot0.ZERO;
      numberArray2[3] = (Number) 0;
      numberArray2[4] = (Number) 2.0F;
      numberArray2[5] = (Number) 0;
      numberArray2[6] = (Number) 500;
      numberArray2[7] = (Number) 0.05;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[0];
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[6];
      numberArray4[0] = (Number) integer0;
      numberArray4[1] = (Number) 0;
      numberArray4[2] = (Number) 0;
      numberArray4[3] = (Number) stackedAreaRenderer1.ZERO;
      numberArray4[4] = (Number) 500;
      numberArray4[5] = (Number) integer0;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[6];
      numberArray5[0] = (Number) 10;
      numberArray5[1] = (Number) 0.05;
      numberArray5[2] = (Number) 0.2;
      Float float0 = new Float(0.0F);
      numberArray5[3] = (Number) float0;
      numberArray5[4] = (Number) 500;
      numberArray5[5] = (Number) 10;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.createHotSpotShape((Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, subCategoryAxis0, (ValueAxis) null, defaultIntervalCategoryDataset0, 10, 47, true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer0.getBaseItemLabelGenerator();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      PiePlot3D piePlot3D0 = new PiePlot3D();
      RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, defaultCaret0, defaultCaret0, rectangleInsets0, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals((-2.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = true;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      DecimalFormat decimalFormat0 = new DecimalFormat("k~U:w:");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", decimalFormat0);
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 8, 730, false, 2058.92039, (double) defaultCategoryItemRenderer0.ZERO, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = true;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      Graphics2D graphics2D0 = null;
      DecimalFormat decimalFormat0 = new DecimalFormat("Null 'generator' argument.");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Null 'generator' argument.", decimalFormat0);
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 2588, 2588, true, 2588, 2588, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel(0.0, 0.0, 3.141592653589793, 0.2);
      JSpinner jSpinner0 = new JSpinner(spinnerNumberModel0);
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DecimalFormat decimalFormat0 = jSpinner_NumberEditor0.getFormat();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("", decimalFormat0);
      ganttRenderer0.equals(intervalCategoryItemLabelGenerator0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-2617), (-2617), 0.2);
      DatasetGroup datasetGroup0 = waferMapDataset0.getGroup();
      jSpinner0.addPropertyChangeListener((PropertyChangeListener) jSpinner_NumberEditor0);
      defaultMultiValueCategoryDataset0.getColumnIndex("{2}");
      defaultMultiValueCategoryDataset0.setGroup(datasetGroup0);
      ganttRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setDrawOutlines(false);
      assertEquals(0, scatterRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = (BoxAndWhiskerRenderer)boxAndWhiskerRenderer0.clone();
      assertFalse(boxAndWhiskerRenderer1.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      minMaxCategoryRenderer0.drawAnnotations((Graphics2D) null, defaultCaret0, categoryAxis3D0, numberAxis3D0, layer0, plotRenderingInfo0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      boolean boolean0 = minMaxCategoryRenderer0.equals(minMaxCategoryRenderer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Not implemented.", "Not implemented.", "");
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      try { 
        boxAndWhiskerRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      minMaxCategoryRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem((-833), (-2195));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 10;
      floatArray0[1] = (float) 10;
      floatArray0[2] = (float) 10;
      floatArray0[3] = 1.0F;
      floatArray0[4] = 1.0F;
      floatArray0[5] = 1.0F;
      floatArray0[6] = 1.0F;
      floatArray0[7] = 1.0F;
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      int[] intArray0 = new int[8];
      intArray0[0] = 15;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = 10;
      intArray0[4] = 10;
      intArray0[5] = 10;
      intArray0[6] = 10;
      intArray0[7] = 15;
      DataBufferInt dataBufferInt0 = new DataBufferInt(intArray0, 372, 1);
      Point point0 = new Point(1, (-1420));
      Point point1 = new Point(point0);
      WritableRaster writableRaster0 = Raster.createPackedRaster((DataBuffer) dataBufferInt0, 10, 30, 1, point1);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D((Raster) writableRaster0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1);
      candlestickRenderer0.getSeriesOutlineStroke(10);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D0, 10, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      Shape shape0 = null;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "PNG_Image_Files");
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      Graphics2D graphics2D0 = null;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 2588, 2588, true, 2588, 2588, true);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 5);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(")9[n");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer3D0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, subCategoryAxis0, numberAxis3D0, defaultMultiValueCategoryDataset0, 5, 10, true, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 1.0F, 0.0F);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createIntersection(rectangle2D0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D1, 0.0F, (Paint) null, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[4][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 0, 0, true, (double) scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(4.0, statisticalBarRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[5][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("&Um8 <;zL~=HDh");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, extendedCategoryAxis0, (ValueAxis) null, scatterRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      int int0 = 7;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2356, 7, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      String string0 = null;
      RegularTimePeriod regularTimePeriod0 = null;
      // Undeclared exception!
      try { 
        Year.parseYear("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot parse string.
         //
         verifyException("org.jfree.data.time.Year", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Number[][] numberArray0 = new Number[1][9];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray1[1] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray1[2] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      defaultCategoryItemRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      defaultCategoryItemRenderer0.getDrawingSupplier();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryItemRendererState categoryItemRendererState0 = defaultCategoryItemRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        ganttRenderer0.drawTasks((Graphics2D) null, categoryItemRendererState0, defaultCaret0, combinedRangeCategoryPlot0, extendedCategoryAxis0, valueAxis0, taskSeriesCollection0, 2285, 2285, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2285, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, waterfallBarRenderer0.DEFAULT_PAINT, waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, waterfallBarRenderer0.DEFAULT_PAINT);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("2J3a0@i", waterfallBarRenderer1.ZERO, 0.001, 2180.524543494011);
      categoryPointerAnnotation0.setArrowLength(2883.353709291);
      waterfallBarRenderer1.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      waterfallBarRenderer0.equals(waterfallBarRenderer1);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getLegendItem(0, 6);
      waterfallBarRenderer1.getIncludeBaseInRange();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getSeriesShapesVisible(0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, waterfallBarRenderer0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = basicTreeUI0.new NodeDimensionsHandler();
      TreePath treePath0 = new TreePath(basicTreeUI0);
      basicTreeUI0.getPathBounds((JTree) null, treePath0);
      basicTreeUI_NodeDimensionsHandler0.getNodeDimensions(basicTreeUI0, 10, 3, false, (Rectangle) null);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.calculateBarWidth(categoryPlot0, (Rectangle2D) null, defaultMultiValueCategoryDataset0, (CategoryItemRendererState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LayeredBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawAnnotations((Graphics2D) null, defaultCaret0, categoryAxis0, numberAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = defaultCategoryItemRenderer0.getLegendItemLabelGenerator();
      defaultCategoryItemRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator1 = defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      assertSame(categorySeriesLabelGenerator1, categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Number[][] numberArray0 = new Number[3][4];
      Number[] numberArray1 = new Number[3];
      double double0 = LineRenderer3D.DEFAULT_X_OFFSET;
      numberArray1[0] = (Number) 12.0;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      numberArray1[1] = (Number) integer0;
      Short short0 = new Short((short)0);
      numberArray1[2] = (Number) short0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[1];
      numberArray2[0] = (Number) integer0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[5];
      numberArray3[0] = (Number) integer0;
      numberArray3[1] = (Number) short0;
      numberArray3[2] = (Number) integer0;
      numberArray3[3] = (Number) integer0;
      numberArray3[4] = (Number) integer0;
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Boolean boolean0 = new Boolean(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      Paint paint0 = statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setUseSeriesOffset(false);
      defaultCategoryItemRenderer0.lookupSeriesFillPaint((-2389));
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      double double1 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      scatterRenderer0.lookupLegendShape(1382);
      Number[][] numberArray0 = new Number[1][3];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) (-3.0);
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals((-3.0), range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = 10;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(10, 10);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("h", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeXYPlot0, false);
      int int1 = 3;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 37, (double) 1.0F, (double) minMaxCategoryRenderer0.ZERO, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotOrientation plotOrientation0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, defaultCaret0, defaultCaret0, combinedRangeXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D rectangle2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      scatterRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_SHADOW_PAINT;
      // Undeclared exception!
      try { 
        scatterRenderer0.setLegendTextPaint((-983), color0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Graphics2D graphics2D0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Rectangle rectangle0 = new Rectangle(942, 500);
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.CONTRACT;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, (RectangleInsets) null, lengthAdjustmentType1, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Graphics2D graphics2D0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo1.getChartArea();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getItemLabelGenerator(10, 0, false);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setSeriesItemLabelGenerator((-1), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getLegendItems();
      Graphics2D graphics2D0 = null;
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      XYBlockRenderer xYBlockRenderer1 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer1.getBlockAnchor();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(rectangle0, true);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      chartPanel0.getZoomRectangle();
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, (Rectangle2D) null, fastScatterPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      defaultCategoryItemRenderer0.removeAnnotation(categoryLineAnnotation0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = new DefaultCategoryItemRenderer();
      Boolean boolean0 = defaultCategoryItemRenderer0.getSeriesShapesFilled(1767);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(10, 10);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      minMaxCategoryRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      assertFalse(defaultCategoryItemRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getLegendItems();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, fastScatterPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainCrosshairPaint(stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0, 0, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 8);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      defaultCategoryItemRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, logarithmicAxis0, rectangle2D0, 1.0E-8, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, logarithmicAxis0.DEFAULT_TICK_MARK_STROKE);
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      boolean boolean0 = true;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      Number[][] numberArray0 = new Number[2][8];
      Number[] numberArray1 = new Number[3];
      numberArray1[1] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[2] = (Number) lineRenderer3D0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[4];
      numberArray2[0] = (Number) lineRenderer3D0.ZERO;
      numberArray2[1] = (Number) 12.0;
      numberArray2[2] = (Number) 12.0;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray2[3] = (Number) integer0;
      numberArray0[1] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      int int0 = 1701;
      int int1 = (-812);
      double double1 = 4.0;
      standardEntityCollection0.equals(numberArray2[3]);
      double double2 = 2.0;
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Font font0 = Font.getFont("org.jfree.chart.axis.Tick", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT);
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart("kXiVM}@Pd<", font0, compassPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawVerticalItem(graphics2D0, categoryItemRendererState0, rectangle2D0, categoryPlot0, subCategoryAxis0, (ValueAxis) null, defaultIntervalCategoryDataset0, (-812), 680, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[5][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Range range0 = ValueAxis.DEFAULT_RANGE;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 3, 2356, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2356
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(false);
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.CHINESE;
      DateAxis dateAxis0 = new DateAxis("DatasetRenderingOrder.FORWARD", timeZone0, locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getSeriesOutlineStroke(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      Paint paint0 = combinedDomainXYPlot0.getRangeCrosshairPaint();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, defaultCaret0, 0.05, paint0, defaultPolarItemRenderer1.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3023.80438);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesOutlineStroke(8);
      minMaxCategoryRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, defaultCaret0, 884.145305164, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, (Stroke) null);
      MultipleGradientPaint.ColorSpaceType multipleGradientPaint_ColorSpaceType0 = MultipleGradientPaint.ColorSpaceType.LINEAR_RGB;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, defaultCaret0, 1.0E-8, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[5][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Font font0 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("k?3>cH)fczlO}", font0, multiplePiePlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      MockDate mockDate0 = new MockDate(182, 3158, (-701), 625, (-136), (-276));
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("e^bo;z/Um", regularTimePeriod0, regularTimePeriod0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-136), 1.25, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-34);
      byteArray0[5] = (byte) (-14);
      byteArray0[6] = (byte)126;
      byteArray0[7] = (byte)1;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(2585, byteArray0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
      stackedAreaRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, periodAxis0, intervalMarker0, rectangle2D0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 2356, 2356, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      int int0 = 1;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Graphics2D graphics2D0 = null;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(5, systemColor0, systemColor0, systemColor0, systemColor0);
      Rectangle rectangle0 = new Rectangle();
      Rectangle2D rectangle2D0 = rectangleInsets0.createInsetRectangle((Rectangle2D) rectangle0, false, true);
      CategoryPlot categoryPlot0 = null;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      int int0 = (-2207);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, (CategoryPlot) null, categoryAxis0, logAxis0, defaultMultiValueCategoryDataset0, 0, (-2207), true, (CategoryItemRendererState) null, rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(false);
      CategoryDataset categoryDataset0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.hitTest(1.0F, 1.0F, (Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, categoryAxis3D0, numberAxis0, (CategoryDataset) null, 1028, 10, false, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(ringPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(27, 10, 3394.7, 5.0E-6, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0);
      Number[][] numberArray0 = new Number[0][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.hitTest(2019.298064, 0.4, graphics2D0, defaultCaret0, (CategoryPlot) null, categoryAxis0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 10, 698, true, categoryItemRendererState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 698
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      CategoryDataset categoryDataset0 = null;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getBounds((TreePath) null, defaultCaret0);
      fixedHeightLayoutCache0.getRowForPath((TreePath) null);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, numberAxis0, (CategoryDataset) null, 506, 1, true, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(ringPlot0);
      jFreeChart0.plotChanged(plotChangeEvent0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(27, 10, 3394.7, 5.0E-6, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      minMaxCategoryRenderer2.drawRangeLine(graphics2D0, (CategoryPlot) null, cyclicNumberAxis0, defaultCaret0, 10, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      MultipleGradientPaint.ColorSpaceType multipleGradientPaint_ColorSpaceType0 = MultipleGradientPaint.ColorSpaceType.LINEAR_RGB;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawRangeLine(graphics2D0, (CategoryPlot) null, cyclicNumberAxis0, defaultCaret0, 5.0E-6, ringPlot0.DEFAULT_BACKGROUND_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(27, 10, 3394.7, 5.0E-6, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      minMaxCategoryRenderer2.drawRangeLine(graphics2D0, (CategoryPlot) null, cyclicNumberAxis0, defaultCaret0, 10, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      MultipleGradientPaint.ColorSpaceType multipleGradientPaint_ColorSpaceType0 = MultipleGradientPaint.ColorSpaceType.LINEAR_RGB;
      minMaxCategoryRenderer2.equals(multipleGradientPaint_ColorSpaceType0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 5, 213, true, (double) defaultCategoryItemRenderer0.ZERO, 213, false);
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(5, systemColor0, systemColor0, systemColor0, systemColor0);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) null, 14, 213, 10, 102);
      Rectangle2D rectangle2D0 = rectangleInsets0.createInsetRectangle((Rectangle2D) rectangle0, false, true);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.hitTest(213, 213, (Graphics2D) null, rectangle2D0, (CategoryPlot) null, categoryAxis0, logAxis0, defaultMultiValueCategoryDataset0, 476, 10, true, (CategoryItemRendererState) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      defaultCategoryItemRenderer0.clone();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("The 'width' argument must be > 0.0");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Rectangle rectangle0 = new Rectangle(3044, 660, 10, 6);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0, 0.0, defaultCategoryItemRenderer0.DEFAULT_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      Number[][] numberArrayArray0 = null;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SeriesChangeType seriesChangeType0 = SeriesChangeType.UPDATE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 2356, (-1434));
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(defaultIntervalCategoryDataset0, seriesChangeInfo0);
      defaultIntervalCategoryDataset0.seriesChanged(seriesChangeEvent0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 5, (-1434), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(7, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("*vZD9");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Rectangle rectangle0 = new Rectangle(10, 10, 4904, 1);
      rectangle0.add(28, (-1734));
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle0, 9999, defaultCategoryItemRenderer0.DEFAULT_PAINT, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_STROKE);
      defaultCategoryItemRenderer0.getUseSeriesOffset();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = new DefaultCategoryItemRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer2 = new DefaultCategoryItemRenderer();
      DrawingSupplier drawingSupplier0 = defaultCategoryItemRenderer2.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(false);
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 5, 5, 0.0, 1, 0.0, (double) defaultCategoryItemRenderer0.ZERO, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.removeAnnotations();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2034, 2034);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LogAxis logAxis0 = new LogAxis("t");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, logAxis0, minMaxCategoryRenderer0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      minMaxCategoryRenderer0.drawOutline(graphics2D0, categoryPlot0, rectangle2D0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      Icon icon0 = synthTreeUI0.getCollapsedIcon();
      assertNull(icon0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesFillPaint(true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CategoryMarker categoryMarker0 = new CategoryMarker(defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      JEditorPane jEditorPane0 = new JEditorPane();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, categoryAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      defaultCategoryItemRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setUseFillPaint(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5, (double) minMaxCategoryRenderer0.ZERO);
      CategoryMarker categoryMarker0 = new CategoryMarker(defaultCategoryItemRenderer0.ZERO, minMaxCategoryRenderer1.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity((EntityCollection) null, lineRenderer3D0.DEFAULT_SHAPE, (CategoryDataset) null, 182, 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      CategoryDataset categoryDataset0 = null;
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      minMaxCategoryRenderer2.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      numberAxis0.setLabelToolTip((String) null);
      CategoryItemRendererState categoryItemRendererState1 = minMaxCategoryRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.createHotSpotBounds((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis0, numberAxis0, (CategoryDataset) null, 0, 81, true, categoryItemRendererState1, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      defaultCategoryItemRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      rectangle0.y = (-3692);
      JDBCXYDataset jDBCXYDataset0 = null;
      try {
        jDBCXYDataset0 = new JDBCXYDataset("", "$2)E&DCW;4k", "$2)E&DCW;4k", "s=r)>/hse<FF:~U?B+");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Graphics2D graphics2D0 = null;
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      defaultCategoryItemRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setUseFillPaint(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5, (double) minMaxCategoryRenderer0.ZERO);
      CategoryMarker categoryMarker0 = new CategoryMarker(defaultCategoryItemRenderer0.ZERO, minMaxCategoryRenderer1.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE, 0);
      IntervalMarker intervalMarker0 = new IntervalMarker((double) lineRenderer3D0.ZERO, 0.2);
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      String string0 = "";
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Rectangle rectangle0 = new Rectangle(0, 42, 1, 1367);
      rectangle0.add(5, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle0, 0, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, subCategoryAxis0.DEFAULT_TICK_MARK_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      CategoryDataset categoryDataset0 = null;
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryAxis categoryAxis1 = minMaxCategoryRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.createHotSpotBounds((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis1, numberAxis0, (CategoryDataset) null, 10, 1, true, categoryItemRendererState0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      Graphics2D graphics2D0 = null;
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation1, defaultMultiValueCategoryDataset0, 0, (-326), false, 1.0F, 88.425, false);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0F, 0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(entityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultMultiValueCategoryDataset0, 52, 10, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 52, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      statisticalLineAndShapeRenderer0.createState(plotRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Graphics2D graphics2D0 = null;
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      Rectangle rectangle0 = new Rectangle();
      statisticalLineAndShapeRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, fastScatterPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItem((-593), (-1));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection1);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      defaultIntervalCategoryDataset0.seriesChanged((SeriesChangeEvent) null);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 2356, 1049, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setMaximumBarWidth(757.95411);
      stackedBarRenderer3D0.getSeriesItemLabelGenerator(3);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getArtifactPaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultMultiValueCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 2494, 5, true, 2.0E7, (-135.5432702542515), false);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(false);
      categoryStepRenderer1.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 4, 1454, true, 4, 1454, true);
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      assertEquals(1.0, boxAndWhiskerRenderer0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 2630, 2630, false, 1254.7108933156558, 2630, false);
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      assertTrue(boxAndWhiskerRenderer0.getFillBox());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-3577), (-3577), true);
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesShape(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearSelection();
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      FastScatterPlot fastScatterPlot1 = null;
      try {
        fastScatterPlot1 = new FastScatterPlot((float[][]) null, valueAxis0, (ValueAxis) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rangeAxis' argument.
         //
         verifyException("org.jfree.chart.plot.FastScatterPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[3][9];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) scatterRenderer0.ZERO;
      numberArray1[1] = (Number) 3.0;
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) ganttRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) scatterRenderer0.ZERO;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) 3.0;
      numberArray2[3] = (Number) 3.0;
      numberArray2[4] = (Number) scatterRenderer0.ZERO;
      numberArray2[5] = (Number) ganttRenderer0.ZERO;
      Number[] numberArray3 = new Number[4];
      numberArray3[0] = (Number) scatterRenderer0.ZERO;
      numberArray3[1] = (Number) scatterRenderer0.ZERO;
      numberArray3[2] = (Number) 3.0;
      numberArray3[3] = (Number) ganttRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      Range range0 = stackedAreaRenderer1.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setSeriesToolTipGenerator(3, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      assertFalse(ganttRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      boolean boolean0 = true;
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("C8iZ#t\"43P2");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 10);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.urls.StandardCategoryURLGenerator");
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(1127);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getRangeAxis((CategoryPlot) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3050, 9999);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      String string0 = "*vZD9";
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("*vZD9");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Rectangle rectangle0 = new Rectangle(10, 10, (-2827), 9999);
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle0, 0, defaultCategoryItemRenderer0.DEFAULT_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (-425.2785012), true);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawStackHorizontal((List) null, "*vZD9", graphics2D0, categoryStepRenderer_State0, rectangle0, combinedDomainCategoryPlot0, subCategoryAxis0, (ValueAxis) null, defaultIntervalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ganttRenderer0.setSeriesToolTipGenerator(254, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      assertTrue(ganttRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      minMaxCategoryRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 360);
      ValueMarker valueMarker0 = new ValueMarker(0.0F);
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, (ValueAxis) null, valueMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LineRenderer3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryDataset categoryDataset0 = null;
      Graphics2D graphics2D0 = null;
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) null);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawOutline((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      statisticalLineAndShapeRenderer1.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      stackedBarRenderer0.setSeriesToolTipGenerator(5, (CategoryToolTipGenerator) null);
      boolean boolean0 = statisticalLineAndShapeRenderer1.equals(statisticalLineAndShapeRenderer0);
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setUseSeriesOffset(false);
      defaultCategoryItemRenderer0.lookupSeriesFillPaint((-2379));
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      double double1 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)scatterRenderer0.lookupLegendShape(1382);
      Number[][] numberArray0 = new Number[1][3];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) scatterRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(152, 23, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1775.2846195384);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, defaultCategoryItemRenderer0);
      // Undeclared exception!
      try { 
        levelRenderer0.drawItem(graphics2D0, categoryStepRenderer_State0, rectangle2D_Double0, categoryPlot0, extendedCategoryAxis0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 152, 676, true, 152);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, statisticalLineAndShapeRenderer0.ZERO, 3.0, 0.0, 1, 0.0, 4.5, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryDataset categoryDataset0 = null;
      Graphics2D graphics2D0 = null;
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawOutline((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      SystemColor systemColor0 = SystemColor.menu;
      String string0 = "";
      Color.getColor("", (Color) systemColor0);
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(systemColor0);
      statisticalLineAndShapeRenderer0.removeAnnotations();
      statisticalLineAndShapeRenderer0.setBaseShapesFilled(true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.getLegendTextPaint(75);
      stackedBarRenderer3D0.getRenderAsPercentages();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 75;
      floatArray0[1] = (float) 954;
      floatArray0[2] = (float) 75;
      floatArray0[3] = 0.95F;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(75, 954, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 4 and should be 71550
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-1188.85682036));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, false, false);
      Rectangle2D rectangle2D0 = defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT.getMaxCharBounds(fontRenderContext0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, (Rectangle2D) null, categoryAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.createState(plotRenderingInfo0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      int int0 = (-2448);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.addEntity((EntityCollection) null, rectangle0, defaultStatisticalCategoryDataset0, 0, (-2448), true, (double) minMaxCategoryRenderer0.ZERO, 2919.901498);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = defaultCategoryItemRenderer0.removeAnnotation((CategoryAnnotation) null);
      assertFalse(boolean0);
      
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.setSeriesToolTipGenerator(20, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      JEditorPane jEditorPane0 = new JEditorPane();
      boolean boolean1 = defaultCategoryItemRenderer0.equals(stackedBarRenderer0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      int int0 = 3;
      stackedBarRenderer3D0.getLegendTextPaint(3);
      stackedBarRenderer3D0.setShadowXOffset(3978.180145702076);
      stackedBarRenderer3D0.getRowCount();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.createState(plotRenderingInfo0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryAxis categoryAxis0 = defaultCategoryItemRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      minMaxCategoryRenderer1.drawAnnotations((Graphics2D) null, rectangle0, (CategoryAxis) null, numberAxis0, layer0, plotRenderingInfo0);
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(true);
      defaultCategoryItemRenderer0.getPassCount();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getMaximumBarWidth();
      DrawingSupplier drawingSupplier0 = boxAndWhiskerRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 2292, 2292);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(slidingGanttCategoryDataset0, tableOrder0, 2120);
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      double double1 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setUseSeriesOffset(false);
      defaultCategoryItemRenderer0.lookupSeriesFillPaint((-2379));
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      double double1 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      scatterRenderer0.lookupLegendShape(1382);
      Number[][] numberArray0 = new Number[1][3];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) scatterRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      Number[][] numberArray0 = new Number[7][8];
      Number[] numberArray1 = new Number[26];
      numberArray1[0] = (Number) stackedAreaRenderer1.ZERO;
      numberArray1[1] = (Number) stackedAreaRenderer1.ZERO;
      numberArray1[2] = (Number) stackedAreaRenderer1.ZERO;
      numberArray1[3] = (Number) stackedAreaRenderer1.ZERO;
      numberArray1[4] = (Number) stackedAreaRenderer0.ZERO;
      numberArray1[5] = (Number) stackedAreaRenderer0.ZERO;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultMultiValueCategoryDataset0, tableOrder0, (-702));
      categoryToPieDataset0.getValue((Comparable) stackedAreaRenderer0.ZERO);
      numberArray1[1] = null;
      numberArray1[7] = (Number) stackedAreaRenderer1.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = null;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, stackedAreaRenderer1.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, (-1503), (-702), true, 2.0, 0.2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      waterfallBarRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) null);
      BarRenderer.setDefaultShadowsVisible(true);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      Hour hour0 = new Hour(mockDate0);
      Minute minute0 = new Minute(270, hour0);
      RegularTimePeriod regularTimePeriod0 = minute0.previous();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", regularTimePeriod0, 0.0, 0.0);
      Layer layer0 = Layer.FOREGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.getItemShapeFilled(10, 270);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      Number[] numberArray0 = new Number[8];
      numberArray0[0] = (Number) stackedAreaRenderer1.ZERO;
      numberArray0[1] = (Number) stackedAreaRenderer1.ZERO;
      numberArray0[2] = (Number) stackedAreaRenderer1.ZERO;
      numberArray0[3] = (Number) stackedAreaRenderer1.ZERO;
      numberArray0[4] = (Number) stackedAreaRenderer0.ZERO;
      numberArray0[5] = (Number) stackedAreaRenderer1.ZERO;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.title.Title");
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.createState(plotRenderingInfo0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 10, 0, 1.7976931348623157E308);
      Layer layer0 = Layer.FOREGROUND;
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      layeredBarRenderer1.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      ScatterRenderer scatterRenderer2 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer2.getItemShapeFilled(0, (-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = (-702);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      Number[][] numberArray0 = new Number[7][8];
      Number[] numberArray1 = new Number[8];
      numberArray1[0] = (Number) stackedAreaRenderer1.ZERO;
      numberArray1[1] = (Number) stackedAreaRenderer1.ZERO;
      numberArray1[2] = (Number) stackedAreaRenderer1.ZERO;
      numberArray1[3] = (Number) stackedAreaRenderer1.ZERO;
      numberArray1[4] = (Number) stackedAreaRenderer0.ZERO;
      numberArray1[5] = (Number) stackedAreaRenderer1.ZERO;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultMultiValueCategoryDataset0, tableOrder0, (-702));
      categoryToPieDataset0.getValue((Comparable) stackedAreaRenderer0.ZERO);
      numberArray1[6] = null;
      numberArray1[7] = (Number) stackedAreaRenderer1.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = null;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) stackedAreaRenderer0.ZERO;
      numberArray2[3] = (Number) stackedAreaRenderer1.ZERO;
      numberArray2[4] = null;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[1];
      numberArray3[0] = (Number) stackedAreaRenderer1.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[4];
      numberArray4[0] = (Number) stackedAreaRenderer0.ZERO;
      numberArray4[1] = (Number) stackedAreaRenderer1.ZERO;
      numberArray4[2] = (Number) stackedAreaRenderer0.ZERO;
      numberArray4[3] = null;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[7];
      numberArray5[0] = (Number) stackedAreaRenderer1.ZERO;
      numberArray5[1] = (Number) stackedAreaRenderer0.ZERO;
      numberArray5[2] = (Number) stackedAreaRenderer1.ZERO;
      numberArray5[3] = (Number) stackedAreaRenderer1.ZERO;
      numberArray5[4] = (Number) stackedAreaRenderer0.ZERO;
      numberArray5[5] = null;
      numberArray5[6] = (Number) stackedAreaRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[0];
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[8];
      numberArray7[0] = (Number) stackedAreaRenderer1.ZERO;
      numberArray7[1] = (Number) stackedAreaRenderer0.ZERO;
      numberArray7[2] = (Number) stackedAreaRenderer1.ZERO;
      numberArray7[3] = (Number) stackedAreaRenderer0.ZERO;
      int int1 = CategoryStepRenderer.STAGGER_WIDTH;
      numberArray7[4] = (Number) 5;
      double double1 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      numberArray7[5] = (Number) 3.0;
      numberArray7[6] = (Number) stackedAreaRenderer1.ZERO;
      numberArray7[7] = (Number) stackedAreaRenderer1.ZERO;
      numberArray0[6] = numberArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setShadowYOffset((-33.69258666));
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.clone();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      int int0 = (-1700);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesItemLabelGenerator((-1700), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.createState(plotRenderingInfo0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      defaultCategoryItemRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.FOREGROUND;
      minMaxCategoryRenderer1.drawAnnotations((Graphics2D) null, rectangle0, (CategoryAxis) null, numberAxis0, layer0, plotRenderingInfo0);
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(true);
      int int0 = defaultCategoryItemRenderer0.getPassCount();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Boolean boolean0 = new Boolean(false);
      groupedStackedBarRenderer0.lookupSeriesPaint(1362);
      defaultPolarItemRenderer0.setSeriesVisibleInLegend(1362, boolean0, false);
      defaultPolarItemRenderer0.lookupSeriesStroke(59);
      ItemLabelPosition itemLabelPosition0 = defaultPolarItemRenderer0.getSeriesPositiveItemLabelPosition(1);
      groupedStackedBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      groupedStackedBarRenderer0.getURLGenerator(1362, 1362, false);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) null, false);
      boxAndWhiskerRenderer0.setArtifactPaint(groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.getSeriesShapesVisible(1);
      scatterRenderer0.setSeriesShapesFilled(1, (Boolean) null);
      groupedStackedBarRenderer0.getSeriesToolTipGenerator(493);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setErrorIndicatorPaint(defaultXYItemRenderer0.DEFAULT_PAINT);
      assertTrue(defaultXYItemRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(false);
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.createState((PlotRenderingInfo) null);
      categoryItemRendererState0.getCrosshairState();
      int int0 = 3;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      scatterRenderer0.updateCrosshairValues((CategoryCrosshairState) null, defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, (-1238.1117), 3, 13.3, 13.3, plotOrientation0);
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Null 'layer' not permitted.");
      CategoryMarker categoryMarker0 = new CategoryMarker(scatterRenderer1.ZERO, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer1.DEFAULT_STROKE);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.createState(plotRenderingInfo0);
      minMaxCategoryRenderer0.getLegendItems();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo1);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      JInternalFrame jInternalFrame0 = new JInternalFrame("@</@1Kd", true, true, true);
      Rectangle rectangle1 = jInternalFrame0.getNormalBounds();
      defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle1, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer1.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(10, 1453.888, (-354.36925885), 0, 10, 10, 0);
      Point2D point2D0 = arc2D_Double0.getEndPoint();
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot1.findSubplot(plotRenderingInfo0, point2D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainMarker((Graphics2D) null, combinedRangeCategoryPlot0, categoryAxis0, categoryMarker0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItems();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      defaultCategoryItemRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setUseFillPaint(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) defaultCategoryItemRenderer0.ZERO, (-5176.09631729849));
      categoryStepRenderer0.getToolTipGenerator(999, 10, false);
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, 0.0F);
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, categoryMarker0, rectangle0);
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getShadowsVisible();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setItemMargin(0.0);
      boolean boolean0 = defaultCategoryItemRenderer0.getBaseLinesVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      CategoryDataset categoryDataset0 = null;
      Graphics2D graphics2D0 = null;
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("!JB", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      Rectangle rectangle1 = chartPanel0.getBounds();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.initialise((Graphics2D) null, rectangle1, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Rectangle rectangle0 = new Rectangle();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CategoryMarker categoryMarker0 = new CategoryMarker(0, defaultCategoryItemRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      RectangleInsets rectangleInsets0 = jFreeChart0.getPadding();
      Point2D point2D0 = defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0, (-1338.495379305858), 75.0, 4340.2293757);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainMarker((Graphics2D) null, (CategoryPlot) null, categoryAxis3D0, categoryMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, 252.56009949483115, defaultCategoryItemRenderer0.ZERO, 2428.52971, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(false);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)minMaxCategoryRenderer0.lookupSeriesShape((-377));
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-57.0), (-3.0), (String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double0, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D_Double0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(lineRenderer3D0.ZERO, categoryAxis3D0.DEFAULT_TICK_MARK_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE, scatterRenderer0.DEFAULT_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, 1.0F);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainMarker((Graphics2D) null, (CategoryPlot) null, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(false);
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CategoryMarker categoryMarker0 = new CategoryMarker(scatterRenderer1.ZERO, scatterRenderer1.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CategoryMarker categoryMarker0 = new CategoryMarker(defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      JEditorPane jEditorPane0 = new JEditorPane();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10, 0.1F, 10);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (-1236.07107526), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      minMaxCategoryRenderer0.drawBackground(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0);
      assertFalse(minMaxCategoryRenderer0.isDrawLines());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getItemShapeVisible(31, 31);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 8.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.0, 31, (-347.02933), 31);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Graphics2D graphics2D0 = null;
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, (PlotRenderingInfo) null);
      categoryItemRendererState0.setSeriesRunningTotal(4819.66264758);
      // Undeclared exception!
      try { 
        defaultMultiValueCategoryDataset0.getValues(117, 117);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 117, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.removeAnnotation((CategoryAnnotation) null);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, 252.56009949483115, defaultCategoryItemRenderer0.ZERO, 2428.52971, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      minMaxCategoryRenderer0.lookupSeriesShape((-377));
      minMaxCategoryRenderer0.isDrawLines();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      MockDate mockDate0 = null;
      try {
        mockDate0 = new MockDate("#&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Date", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getSeriesToolTipGenerator(0);
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      levelRenderer0.setMaximumItemWidth(1.0);
      assertTrue(levelRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.createState(plotRenderingInfo0);
      minMaxCategoryRenderer0.getLegendItems();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      defaultCategoryItemRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setUseFillPaint(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) defaultCategoryItemRenderer0.ZERO, (-5176.09631729849));
      CategoryMarker categoryMarker0 = new CategoryMarker(true, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, 0.0F);
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, categoryMarker0, rectangle0);
      BarRenderer barRenderer0 = new BarRenderer();
      boolean boolean0 = barRenderer0.getShadowsVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, (-48.3), defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getBaseItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((double[][]) null, (double[][]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'data' argument.
         //
         verifyException("org.jfree.data.DataUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      CategoryDataset categoryDataset0 = null;
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = null;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      CategoryDataset categoryDataset0 = null;
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CategoryMarker categoryMarker0 = new CategoryMarker(defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(10);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Graphics2D graphics2D0 = null;
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.createState(plotRenderingInfo0);
      minMaxCategoryRenderer0.getLegendItems();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      defaultCategoryItemRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.BACKGROUND;
      minMaxCategoryRenderer1.drawAnnotations((Graphics2D) null, rectangle0, (CategoryAxis) null, numberAxis0, layer0, plotRenderingInfo0);
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.clone();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Layer layer0 = Layer.BACKGROUND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalLineAndShapeRenderer1.DEFAULT_VALUE_LABEL_PAINT, categoryStepRenderer0.DEFAULT_PAINT, statisticalLineAndShapeRenderer1.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.lookupSeriesFillPaint((-2379));
      int int0 = (-1434);
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[] numberArray0 = new Number[7];
      numberArray0[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[1] = (Number) scatterRenderer0.ZERO;
      numberArray0[2] = (Number) scatterRenderer0.ZERO;
      numberArray0[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, defaultCategoryItemRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 1, (-2379), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.lookupSeriesFillPaint((-2379));
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[1][5];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray1[1] = (Number) scatterRenderer0.ZERO;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection1, (Shape) null, defaultIntervalCategoryDataset0, 0, 1896, false, 1.0E7, (double) scatterRenderer0.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.lookupSeriesFillPaint((-2379));
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[1][5];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray1[1] = (Number) scatterRenderer0.ZERO;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, numberArray0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(numberArray0, (Number[][]) null);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset1, (-1434), (-2379), false, 0.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      standardCategoryItemLabelGenerator0.clone();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = intervalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      assertNull(range0);
      
      statisticalLineAndShapeRenderer1.getErrorIndicatorPaint();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncompletePaint(categoryStepRenderer0.DEFAULT_OUTLINE_PAINT);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = boxAndWhiskerRenderer0.getItemLabelGenerator(5, 5, false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator((-162));
      boolean boolean0 = true;
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getPassCount();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, (-162));
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedDomainCategoryPlot0, defaultCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(360, 360, false);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getPassCount();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1, 1);
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedDomainCategoryPlot0, taskSeriesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getPassCount();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = 1;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 1);
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedDomainCategoryPlot0, slidingGanttCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Graphics2D graphics2D0 = null;
      Rectangle rectangle0 = new Rectangle();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      Number[][] numberArray0 = new Number[2][8];
      Number[] numberArray1 = new Number[3];
      numberArray1[1] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[2] = (Number) lineRenderer3D0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[4];
      numberArray2[0] = (Number) lineRenderer3D0.ZERO;
      numberArray2[1] = (Number) 12.0;
      numberArray2[2] = (Number) 12.0;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray2[3] = (Number) integer0;
      numberArray0[1] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      int int0 = 1701;
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, minMaxCategoryRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 1701, (-812), true, 4.0, 2.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart("'Q-Ld$kN7", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, spiderWebPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 6, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JTable jTable0 = new JTable();
      jTable0.getTableHeader();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), "/_");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, (-169));
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise(graphics2D0, rectangle0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      minMaxCategoryRenderer0.createState(plotRenderingInfo0);
      minMaxCategoryRenderer0.getLegendItems();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.setSeriesToolTipGenerator((-2556), (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      stackedBarRenderer0.getPassCount();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", 8.0, 2187.24691);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.getSeriesURLGenerator(1125);
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      lineAndShapeRenderer0.getLegendItemURLGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_PAINT);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesShape(false);
      scatterRenderer0.setBaseLegendShape(lineAndShapeRenderer0.DEFAULT_SHAPE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.getPassCount();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Gn/4^r%DYb[-3YvyhL", 0.2, 1773.4299697);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Layer layer0 = Layer.BACKGROUND;
      waterfallBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = scatterRenderer0.getUseOutlinePaint();
      boolean boolean1 = scatterRenderer0.getBaseShapesFilled();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.lookupSeriesFillPaint((-2379));
      defaultCategoryItemRenderer0.getLegendItem((-1434), (-1434));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[1][5];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray1[1] = (Number) scatterRenderer0.ZERO;
      numberArray1[2] = (Number) scatterRenderer0.ZERO;
      numberArray1[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray1[4] = (Number) scatterRenderer0.ZERO;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, (-1434), (-1434), false, (-1434), (-2379));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      int int0 = 0;
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      stackedBarRenderer0.getPassCount();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      stackedBarRenderer0.getLegendItemToolTipGenerator();
      lineRenderer3D0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", 8.0, 2187.24691);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = null;
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      Stack<StatisticalLineAndShapeRenderer> stack0 = new Stack<StatisticalLineAndShapeRenderer>();
      JTree jTree0 = new JTree(stack0);
      // Undeclared exception!
      try { 
        multiTreeUI0.getEditingPath(jTree0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Polygon polygon0 = new Polygon();
      statisticalLineAndShapeRenderer0.setLegendShape(551, polygon0);
      statisticalLineAndShapeRenderer0.getBaseToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      Color color0 = (Color)Axis.DEFAULT_AXIS_LABEL_PAINT;
      BarRenderer.getDefaultShadowsVisible();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getMaximumItemWidth();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(true);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap(groupedStackedBarRenderer0.ZERO);
      groupedStackedBarRenderer0.setSeriesToGroupMap(keyToGroupMap0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      NumberAxis numberAxis0 = new NumberAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, subCategoryAxis0, numberAxis0, groupedStackedBarRenderer0);
      groupedStackedBarRenderer0.setPlot(categoryPlot0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", numberAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp((-1.0F), 10, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1762, 0.0, (-2461.9554047901), chartRenderingInfo0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawHorizontalItem(graphics2D0, categoryStepRenderer_State0, rectangle0, (CategoryPlot) null, subCategoryAxis0, numberAxis0, taskSeriesCollection0, 500, 0, true, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.gantt.TaskSeriesCollection cannot be cast to org.jfree.data.statistics.BoxAndWhiskerCategoryDataset
         //
         verifyException("org.jfree.chart.renderer.category.BoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItems();
      ImageIcon imageIcon0 = new ImageIcon("+");
      minMaxCategoryRenderer0.setMaxIcon(imageIcon0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogAxis logAxis0 = new LogAxis("");
      logAxis0.setVerticalTickLabels(true);
      logAxis0.setMinorTickCount(1);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D((-2480.3798327502973), (double) stackedBarRenderer3D0.ZERO, true);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      assertFalse(categoryStepRenderer0.getStagger());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Object object0 = statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.equals(object0);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      assertTrue(boxAndWhiskerRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = (-772);
      boolean boolean0 = true;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      minMaxCategoryRenderer0.clone();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(3.0, (-1.0), (double) (-772));
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform1, (-431));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -431
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = (-772);
      boolean boolean0 = true;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      // Undeclared exception!
      try { 
        ganttRenderer0.setSeriesURLGenerator((-772), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getObjectIcon();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2404.697534713081), 1892.1);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedBarRenderer3D0.lookupLegendTextPaint(0);
      stackedBarRenderer3D0.setAutoPopulateSeriesFillPaint(true);
      stackedBarRenderer3D0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      stackedBarRenderer3D0.setBase((-2404.697534713081));
      stackedBarRenderer3D0.getNegativeItemLabelPositionFallback();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(0, 0, true);
      stackedBarRenderer3D0.setSeriesURLGenerator(0, (CategoryURLGenerator) null);
      assertEquals(4.0, stackedBarRenderer3D0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      boolean boolean0 = minMaxCategoryRenderer0.equals(standardCategoryToolTipGenerator0);
      minMaxCategoryRenderer0.setAutoPopulateSeriesShape(true);
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Shape shape0 = minMaxCategoryRenderer0.lookupSeriesShape(1);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.equals(shape0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      categoryStepRenderer0.setLegendTextFont(1, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT);
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      categoryStepRenderer0.setSeriesItemLabelGenerator(15, (CategoryItemLabelGenerator) null, false);
      boolean boolean1 = categoryStepRenderer0.getStagger();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getURLGenerator(1, 1, false);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setSeriesURLGenerator((-2546), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      minMaxCategoryRenderer0.equals(ganttRenderer0);
      minMaxCategoryRenderer0.setAutoPopulateSeriesShape(true);
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)minMaxCategoryRenderer0.lookupSeriesShape((-772));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.equals(standardCategoryToolTipGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      categoryStepRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      categoryStepRenderer0.getStagger();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 2608, (-2304));
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("({0}, {1}) = {2}");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge((-772));
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getItemMiddle(5, "({0}, {1}) = {2}", slidingCategoryDataset0, subCategoryAxis0, rectangle2D_Double0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.getSeriesURLGenerator(1125);
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      lineAndShapeRenderer0.getLegendItemURLGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator(79);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      scatterRenderer0.setBaseLegendShape(waterfallBarRenderer0.DEFAULT_SHAPE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3.0, 2.0E7);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncompletePaint(lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT);
      assertFalse(lineAndShapeRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      minMaxCategoryRenderer0.equals(levelRenderer0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, true);
      JFreeChart jFreeChart1 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, 10, 0, 2342, 10, 1, 15, false, true, true, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 10, 0.0F, 759.0F);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.drawBackground(graphics2D0, (CategoryPlot) null, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      boolean boolean0 = minMaxCategoryRenderer0.equals(ganttRenderer0);
      minMaxCategoryRenderer0.setAutoPopulateSeriesShape(true);
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      minMaxCategoryRenderer0.lookupSeriesShape((-772));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.equals(standardCategoryToolTipGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      categoryStepRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      boolean boolean1 = categoryStepRenderer0.getStagger();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      stackedBarRenderer0.getPassCount();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", "({0}, {1}) = {2}", (-5.0), 0.0);
      categoryPointerAnnotation0.setCategory("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      Paint paint0 = categoryPointerAnnotation0.getPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer0.DEFAULT_PAINT, stackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer0.DEFAULT_PAINT, paint0);
      waterfallBarRenderer0.setLastBarPaint(stackedBarRenderer0.DEFAULT_PAINT);
      TimeSeries timeSeries0 = new TimeSeries(3.0);
      int int0 = 3;
      MockDate mockDate0 = null;
      try {
        mockDate0 = new MockDate("({0}, {1}) = {2}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Date", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.getSeriesURLGenerator(1125);
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      lineAndShapeRenderer0.getLegendItemURLGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_PAINT);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesShape(false);
      scatterRenderer0.setBaseLegendShape(lineAndShapeRenderer0.DEFAULT_SHAPE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setXOffset(2274.46119270353);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, 3, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JTable jTable0 = new JTable();
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 15);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise(graphics2D0, rectangle0, combinedRangeCategoryPlot0, slidingGanttCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ImageIcon imageIcon0 = new ImageIcon("+");
      minMaxCategoryRenderer0.setMaxIcon(imageIcon0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogAxis logAxis0 = new LogAxis("");
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D((double) stackedBarRenderer3D0.ZERO, (double) stackedBarRenderer3D0.ZERO, true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, logAxis0, stackedBarRenderer3D1);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(2461, (-3542), true);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.equals(categoryPlot0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.setSeriesItemLabelGenerator(6, (CategoryItemLabelGenerator) null, true);
      boolean boolean0 = categoryStepRenderer0.getStagger();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      minMaxCategoryRenderer0.equals(ganttRenderer0);
      minMaxCategoryRenderer0.setAutoPopulateSeriesShape(true);
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      minMaxCategoryRenderer0.lookupSeriesShape((-772));
      minMaxCategoryRenderer0.isDrawLines();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItems();
      String string0 = "+";
      ImageIcon imageIcon0 = new ImageIcon("+");
      minMaxCategoryRenderer0.setMaxIcon(imageIcon0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogAxis logAxis0 = new LogAxis("");
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D((-2480.3798327502973), (double) stackedBarRenderer3D0.ZERO, true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, logAxis0, stackedBarRenderer3D1);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField(defaultFormatterFactory0, (Object) null);
      // Undeclared exception!
      try { 
        multiTextUI0.modelToView((JTextComponent) jFormattedTextField0, 500);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ImageIcon imageIcon0 = new ImageIcon("+");
      minMaxCategoryRenderer0.setMaxIcon(imageIcon0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogAxis logAxis0 = new LogAxis("");
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D((double) stackedBarRenderer3D0.ZERO, (double) stackedBarRenderer3D0.ZERO, true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, logAxis0, stackedBarRenderer3D1);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(2461, (-3542), true);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      boolean boolean0 = stackedAreaRenderer0.equals(categoryPlot0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      boolean boolean1 = categoryStepRenderer0.getStagger();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getPassCount();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedAreaRenderer0.setBaseLegendTextFont(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getStagger();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      Minute minute0 = new Minute(mockDate0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("{2}", minute0, 968.1285846);
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      assertEquals(0, categoryStepRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getPassCount();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedAreaRenderer0.setBaseLegendTextFont(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.getSeriesURLGenerator(1125);
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      lineAndShapeRenderer0.getLegendItemURLGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseLegendShape(waterfallBarRenderer0.DEFAULT_SHAPE);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.removeAnnotations();
      statisticalBarRenderer0.getLegendItemLabelGenerator();
      Locale locale0 = new Locale("Null 'paint' argument.", "Null 'paint' argument.");
      // Undeclared exception!
      try { 
        DateFormat.getDateInstance(3362, locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 3362
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getPassCount();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultCategoryDataset0, 200, 200);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = 1;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 1);
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedDomainCategoryPlot0, slidingGanttCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setAutoPopulateSeriesShape(true);
      categoryStepRenderer0.getStagger();
      int int0 = 253;
      categoryStepRenderer0.getLegendItem(253, 253);
      System.setCurrentTimeMillis(5);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      Stack<CategoryPointerAnnotation> stack0 = new Stack<CategoryPointerAnnotation>();
      DateAxis dateAxis0 = null;
      try {
        dateAxis0 = new DateAxis("Nk", (TimeZone) null, (Locale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'zone' argument.
         //
         verifyException("org.jfree.chart.axis.DateAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      String string0 = "+";
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("+");
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      Hashtable<DefaultCategoryItemRenderer, IntervalCategoryItemLabelGenerator> hashtable0 = new Hashtable<DefaultCategoryItemRenderer, IntervalCategoryItemLabelGenerator>();
      JTree jTree0 = new JTree(hashtable0);
      jTree0.getPathForLocation(319, 319);
      variableHeightLayoutCache0.getBounds((TreePath) null, (Rectangle) null);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getItemMiddle("+", "+", defaultKeyedValues2DDataset0, extendedCategoryAxis0, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-867.26089), 35.719840317793825);
      barRenderer3D0.getXOffset();
      defaultCategoryItemRenderer0.getURLGenerator(3, 1, false);
      defaultCategoryItemRenderer0.setSeriesURLGenerator(3, (CategoryURLGenerator) null, false);
      barRenderer3D0.setShadowXOffset((double) defaultCategoryItemRenderer0.ZERO);
      defaultCategoryItemRenderer0.getPassCount();
      Color color0 = (Color)PeriodAxisLabelInfo.DEFAULT_DIVIDER_PAINT;
      barRenderer3D0.lookupLegendTextPaint(2);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(defaultCategoryItemRenderer0.DEFAULT_PAINT, barRenderer3D0.DEFAULT_PAINT, defaultCategoryItemRenderer0.DEFAULT_PAINT, color0);
      waterfallBarRenderer0.setFirstBarPaint(color0);
      defaultCategoryItemRenderer0.getBaseShapesVisible();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      standardCategoryToolTipGenerator0.equals((Object) null);
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setGroupPaint(barRenderer3D0.DEFAULT_OUTLINE_PAINT);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getStagger();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      levelRenderer0.calculateSeriesWidth((-141.1396), categoryAxis0, 572, 5);
      levelRenderer0.getPassCount();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      Rectangle rectangle0 = new Rectangle(3, 1);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State((PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle0, categoryAxis0, categoryStepRenderer_State0, 0, (-550));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -550
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-867.26089), 4.0);
      barRenderer3D0.getSeriesURLGenerator(0);
      barRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      barRenderer3D0.getXOffset();
      defaultCategoryItemRenderer0.getURLGenerator(3, 1, false);
      defaultCategoryItemRenderer0.setSeriesURLGenerator(3, (CategoryURLGenerator) null, false);
      barRenderer3D0.setShadowXOffset((double) defaultCategoryItemRenderer0.ZERO);
      defaultCategoryItemRenderer0.getPassCount();
      Color color0 = (Color)PeriodAxisLabelInfo.DEFAULT_DIVIDER_PAINT;
      barRenderer3D0.lookupLegendTextPaint(2);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(defaultCategoryItemRenderer0.DEFAULT_PAINT, barRenderer3D0.DEFAULT_PAINT, defaultCategoryItemRenderer0.DEFAULT_PAINT, color0);
      waterfallBarRenderer0.setFirstBarPaint(color0);
      defaultCategoryItemRenderer0.getBaseShapesVisible();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      standardCategoryToolTipGenerator0.equals((Object) null);
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setGroupPaint(barRenderer3D0.DEFAULT_OUTLINE_PAINT);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      boolean boolean0 = categoryStepRenderer0.getStagger();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, (-1), 200);
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis((CategoryPlot) null, slidingCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      boolean boolean0 = true;
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      taskSeriesCollection0.getSeries((Comparable) 3.0);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-593), (-593));
      stackedBarRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0);
      stackedBarRenderer0.setBase((-2346.395));
      stackedBarRenderer0.getPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("", (Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setYOffset(0.0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getMaximumBarWidth();
      boxAndWhiskerRenderer0.getColumnCount();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      lineRenderer3D0.hashCode();
      stackedBarRenderer3D0.setBase((-1409.1931742));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset((String) null, (String) null, "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.menu;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Paint paint0 = ganttRenderer0.getCompletePaint();
      float[] floatArray0 = new float[3];
      floatArray0[0] = 1456.3057F;
      floatArray0[1] = 4432.4F;
      floatArray0[2] = 552.2F;
      systemColor0.getRGBColorComponents(floatArray0);
      ganttRenderer0.setEndPercent(0.0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(systemColor0, systemColor0, systemColor0, paint0);
      CategoryURLGenerator categoryURLGenerator0 = waterfallBarRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      minMaxCategoryRenderer0.equals(ganttRenderer0);
      minMaxCategoryRenderer0.setAutoPopulateSeriesShape(true);
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      minMaxCategoryRenderer0.lookupSeriesShape((-772));
      minMaxCategoryRenderer0.isDrawLines();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BufferedImage bufferedImage0 = null;
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-867.26089), 4.0);
      barRenderer3D0.getXOffset();
      defaultCategoryItemRenderer0.getURLGenerator(3, 1, false);
      defaultCategoryItemRenderer0.setSeriesURLGenerator(3, (CategoryURLGenerator) null, false);
      barRenderer3D0.setShadowXOffset((double) defaultCategoryItemRenderer0.ZERO);
      defaultCategoryItemRenderer0.getPassCount();
      Color color0 = (Color)PeriodAxisLabelInfo.DEFAULT_DIVIDER_PAINT;
      barRenderer3D0.lookupLegendTextPaint(2);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(defaultCategoryItemRenderer0.DEFAULT_PAINT, barRenderer3D0.DEFAULT_PAINT, defaultCategoryItemRenderer0.DEFAULT_PAINT, color0);
      waterfallBarRenderer0.setFirstBarPaint(color0);
      defaultCategoryItemRenderer0.getBaseShapesVisible();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      boolean boolean0 = standardCategoryToolTipGenerator0.equals((Object) null);
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setGroupPaint(barRenderer3D0.DEFAULT_OUTLINE_PAINT);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      boolean boolean1 = categoryStepRenderer0.getStagger();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      lineRenderer3D0.hashCode();
      int int0 = 0;
      JPasswordField jPasswordField0 = new JPasswordField(0);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds(0, 10);
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawBackground((Graphics2D) null, combinedDomainCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LineRenderer3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      boolean boolean0 = false;
      BarRenderer.setDefaultShadowsVisible(false);
      stackedAreaRenderer0.getLegendItemURLGenerator();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Dnl-]pFpx&bP1.=");
      DecimalFormat decimalFormat0 = new DecimalFormat("Null 'stroke' argument.");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Sam (oldman)", decimalFormat0, decimalFormat0);
      standardCategoryURLGenerator0.equals(standardCategoryItemLabelGenerator0);
      stackedBarRenderer0.setSeriesURLGenerator(1026, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("{2}");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, (double) stackedBarRenderer0.ZERO);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D_Double0);
      Comparable<BarRenderer3D>[] comparableArray0 = (Comparable<BarRenderer3D>[]) Array.newInstance(Comparable.class, 1);
      Millisecond millisecond0 = null;
      try {
        millisecond0 = new Millisecond(1, 1, 468, (-879), 1, 10, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'year' argument must be in range 1900 to 9999.
         //
         verifyException("org.jfree.data.time.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getPassCount();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedAreaRenderer0.setBaseLegendTextFont(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getStackValues((CategoryDataset) null, 3198, 869);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.StackedAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      int int0 = 1125;
      lineAndShapeRenderer0.getSeriesURLGenerator(1125);
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      lineAndShapeRenderer0.getLegendItemURLGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseLegendShape(waterfallBarRenderer0.DEFAULT_SHAPE);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemLabelGenerator();
      int int1 = 1137;
      String string0 = "n(h5BJ}CqQ^";
      Locale locale0 = new Locale("n(h5BJ}CqQ^", "n(h5BJ}CqQ^");
      // Undeclared exception!
      try { 
        DateFormat.getDateInstance(3362, locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 3362
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      Object object0 = standardCategorySeriesLabelGenerator0.clone();
      standardCategorySeriesLabelGenerator0.clone();
      standardCategorySeriesLabelGenerator0.clone();
      levelRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getLegendItem(0, 0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMedianVisible(false);
      levelRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      String string0 = "+";
      ImageIcon imageIcon0 = new ImageIcon("+");
      minMaxCategoryRenderer0.setMaxIcon(imageIcon0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LogAxis logAxis0 = new LogAxis("");
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D((-2480.3798327502973), (double) stackedBarRenderer3D0.ZERO, true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, logAxis0, stackedBarRenderer3D1);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField(defaultFormatterFactory0, (Object) null);
      // Undeclared exception!
      try { 
        multiTextUI0.modelToView((JTextComponent) jFormattedTextField0, 500);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = null;
      try {
        standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'format' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }
}
