/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 16 20:16:58 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.DateRange;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      stackedAreaRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, false, 500, 10, 500, 10, 0.0, plotOrientation0);
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, (-3856.8905), stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      JTableHeader jTableHeader0 = new JTableHeader((TableColumnModel) null);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(0);
      Point2D.Double point2D_Double0 = (Point2D.Double)scatterRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle2D_Double0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 2.0E8, 0.05, 2);
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle2D_Double0, dateAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(2.00000003E8, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D_Double0, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-3.0), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";5", stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, fastScatterPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(19, 3, (-538.2418864735), 1.0, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis numberAxis0 = new NumberAxis("!)v^?m.E.\"<h%");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      layeredBarRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 1.0, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, numberAxis0.DEFAULT_TICK_MARK_STROKE);
      assertFalse(numberAxis0.isInverted());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, (double) statisticalBarRenderer0.ZERO, 3.0, 0.2, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boolean boolean0 = stackedAreaRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0, 0, (-669.0416F), 511.92072F, (-669.0416F), 0.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      NumberAxis numberAxis0 = new NumberAxis("y@wy?sOs");
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Layer layer0 = Layer.FOREGROUND;
      stackedBarRenderer3D0.drawAnnotations((Graphics2D) null, rectangle2D0, (CategoryAxis) null, numberAxis0, layer0, plotRenderingInfo0);
      assertTrue(numberAxis0.isAxisLineVisible());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      String[] stringArray0 = new String[3];
      Number[][] numberArray0 = new Number[3][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 2, 2, false);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryURLGenerator categoryURLGenerator0 = categoryStepRenderer0.getSeriesURLGenerator((-2287));
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getSeriesToolTipGenerator((-1453));
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(0.0F, valueAxis0.getMinorTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, levelRenderer0);
      CategoryPlot categoryPlot1 = levelRenderer0.getPlot();
      assertSame(categoryPlot1, categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      LegendItem legendItem0 = stackedBarRenderer3D0.getLegendItem(1, 2032);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)categoryStepRenderer0.getItemLabelGenerator(3, 633, false);
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      DrawingSupplier drawingSupplier0 = categoryStepRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis(",3iQ=b");
      DateRange dateRange0 = DateAxis.DEFAULT_DATE_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis(",3iQ=b", dateRange0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, moduloAxis0, stackedAreaRenderer0);
      CategoryAxis categoryAxis1 = groupedStackedBarRenderer0.getDomainAxis(categoryPlot0, defaultBoxAndWhiskerCategoryDataset0);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)categoryStepRenderer0.getBaseItemLabelGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      statisticalBarRenderer0.setBase(110.723517497);
      defaultKeyedValues2DDataset0.addValue((Number) 0.2, (Comparable) statisticalBarRenderer0.ZERO, (Comparable) statisticalBarRenderer0.ZERO);
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, false);
      assertEquals(110.723517497, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) 0.2, (Comparable) statisticalBarRenderer0.ZERO, (Comparable) statisticalBarRenderer0.ZERO);
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, false);
      assertEquals(0.2, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      double[][] doubleArray0 = new double[1][0];
      double[] doubleArray1 = new double[8];
      doubleArray1[2] = (-1114.2);
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals((-1114.2), range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = lineRenderer3D0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[8];
      doubleArray1[1] = 3.0;
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray0[0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = waterfallBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(1.5, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = statisticalBarRenderer0.equals(defaultCategoryItemRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.createState((PlotRenderingInfo) null);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesURLGenerator((-1631), (CategoryURLGenerator) customCategoryURLGenerator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("ZsYq:mM\"");
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesURLGenerator((-1433), (CategoryURLGenerator) standardCategoryURLGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesToolTipGenerator((-584), (CategoryToolTipGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesItemLabelGenerator((-3194), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesItemLabelGenerator((-200), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, (-2514), (-2514));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, slidingCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      // Undeclared exception!
      try { 
        intervalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("]");
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(1.0F, 1.0E10, graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, subCategoryAxis0, numberAxis0, (CategoryDataset) null, (-2005), 10, true, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("PRINT");
      LogAxis logAxis0 = new LogAxis("ZOOM_OUT_BOTH");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(200, 2.0F, (Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, subCategoryAxis0, logAxis0, defaultCategoryDataset0, (-1533), (-926), true, (CategoryItemRendererState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.getRangeAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("({0}, {1}) = {3} - {4}");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D_Double0, point2D_Double0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        categoryStepRenderer0.getItemMiddle("{2}", "({0}, {1}) = {3} - {4}", defaultMultiValueCategoryDataset0, categoryAxis0, rectangle0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.getDomainAxis((CategoryPlot) null, taskSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.getDomainAxis(combinedDomainCategoryPlot0, taskSeriesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Number[][] numberArray0 = new Number[3][9];
      Number[] numberArray1 = new Number[3];
      numberArray0[1] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-101.3596), (-101.3596));
      double[][] doubleArray0 = new double[8][9];
      double[] doubleArray1 = new double[8];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        barRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, rectangle2D_Double0, 0.0, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(829.321300715, (String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawDomainMarker(graphics2D0, combinedRangeCategoryPlot0, subCategoryAxis0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle(10, 10);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawBackground((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("O>w{sbT)@R");
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, extendedCategoryAxis0, numberAxis0, defaultBoxAndWhiskerCategoryDataset0, 5, (-1), true, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      // Undeclared exception!
      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, 5, 5);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, slidingCategoryDataset0, 5, 5, true, 5, (double) stackedBarRenderer3D0.ZERO);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 0, 1235, false, 5, 5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, (-3696), 2, true, (-3696), (-3696));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addEntity((EntityCollection) null, line2D_Double0, (CategoryDataset) null, 73, 73, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity((EntityCollection) null, categoryStepRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, (-415), 5, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(categoryStepRenderer0.ZERO, 5, 5, 5, categoryStepRenderer0.DEFAULT_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ASG@_QRh~87()");
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, subCategoryAxis0, numberAxis0, defaultBoxAndWhiskerCategoryDataset0, 3109, 500, false, (CategoryItemRendererState) null, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue((Number) statisticalBarRenderer0.ZERO, (Comparable) 3.0, (Comparable) 3.0);
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, false);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(categoryStepRenderer0.ZERO, 5, 5, 5, categoryStepRenderer0.DEFAULT_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      assertFalse(categoryStepRenderer0.getStagger());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesURLGenerator(2072, (CategoryURLGenerator) null, true);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryURLGenerator categoryURLGenerator0 = scatterRenderer0.getURLGenerator(5, (-56), false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      boxAndWhiskerRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(16777215, (CategoryToolTipGenerator) null, true);
      assertEquals(1, stackedBarRenderer3D0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator(4414, 4414, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      assertFalse(scatterRenderer0.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesItemLabelGenerator(274, (CategoryItemLabelGenerator) null, true);
      assertFalse(scatterRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getItemLabelGenerator(0, 0, true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(0.0, 2.0, (Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryAxis) null, numberAxis0, defaultBoxAndWhiskerCategoryDataset0, 10, 17, false, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 17, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("A?]]Rg~87()");
      Rectangle rectangle0 = new Rectangle(10, 10);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, subCategoryAxis0, numberAxis0, defaultBoxAndWhiskerCategoryDataset0, 3109, 500, false, (CategoryItemRendererState) null, rectangle0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addEntity(standardEntityCollection0, groupedStackedBarRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, 22, 13, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 22, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, 5, 5, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItemCollection legendItemCollection0 = scatterRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = categoryStepRenderer0.getRangeAxis(categoryPlot0, 10);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[5] = (ValueAxis) logAxis0;
      combinedRangeCategoryPlot0.setRangeAxes(valueAxisArray0);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 5);
      assertTrue(valueAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = (GroupedStackedBarRenderer)groupedStackedBarRenderer0.clone();
      assertEquals(3, groupedStackedBarRenderer1.getPassCount());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 33, 10, false, (-775.1538984), 0.25, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      stackedAreaRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.05, 12.0, 0.0, 10, 10, 0.0, plotOrientation0);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      stackedAreaRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 10, 3.0, 1.0, 10, 0.5691304218104974, 0.0, plotOrientation0);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 3.0, 3.0, (-1582.3), 11, (-1.5707963267948966), 1805.3580705935408, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.05, 12.0, 0.0, 10, 10, 0.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      categoryStepRenderer0.setPlot(combinedRangeCategoryPlot0);
      DrawingSupplier drawingSupplier0 = categoryStepRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer();
      assertTrue(categoryStepRenderer1.equals((Object)categoryStepRenderer0));
      
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("['9Y2");
      categoryStepRenderer1.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = categoryStepRenderer1.equals(categoryStepRenderer0);
      assertFalse(categoryStepRenderer1.equals((Object)categoryStepRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", decimalFormat0);
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer();
      assertTrue(categoryStepRenderer1.equals((Object)categoryStepRenderer0));
      
      Locale locale0 = Locale.GERMANY;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("", numberFormat0);
      categoryStepRenderer1.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      boolean boolean0 = categoryStepRenderer1.equals(categoryStepRenderer0);
      assertFalse(categoryStepRenderer1.equals((Object)categoryStepRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer1.equals(categoryStepRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Double0, rectangle2D_Float0, fastScatterPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, (-2788.79F), (-669.0416F), 511.92072F, (-669.0416F), 0.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      NumberAxis numberAxis0 = new NumberAxis("y@wy?sOs");
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D0, rectangle2D0, numberAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(5, 5, 5);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 500, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      Rectangle rectangle0 = new Rectangle(3, 10, 10, 10);
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, valueAxis0, intervalMarker0, rectangle0);
      assertEquals(0.8F, intervalMarker0.getAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PeriodAxis periodAxis0 = new PeriodAxis("F_?o:JH{_)\"wc!B)m");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) categoryStepRenderer0.ZERO, 0.0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) categoryStepRenderer0.ZERO, 1.0F);
      stackedBarRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, periodAxis0, intervalMarker0, rectangle2D_Double0);
      assertFalse(periodAxis0.isInverted());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle();
      scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, (ValueAxis) null, (Marker) null, rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.0, categoryStepRenderer0.DEFAULT_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      valueMarker0.setLabel("~_YE]'Ra0mAz{r~");
      BufferedImage bufferedImage0 = new BufferedImage(46, 46, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D_Double0);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      ValueMarker valueMarker0 = new ValueMarker(500);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis0, valueMarker0, rectangle2D_Double0);
      assertTrue(numberAxis0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.0, categoryStepRenderer0.DEFAULT_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(46, 46, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D_Double0);
      assertFalse(scatterRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.05, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, symbolAxis0, defaultCategoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, symbolAxis0.DEFAULT_AXIS_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_STROKE, categoryPlot0.DEFAULT_OUTLINE_PAINT, symbolAxis0.DEFAULT_TICK_MARK_STROKE, 1.0F);
      categoryPlot0.addDomainMarker(categoryMarker0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(3117, 500);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      categoryStepRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, (Rectangle2D) null, (-454.537218), numberAxis0.DEFAULT_AXIS_LINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Double0, 0.0F, numberAxis0.DEFAULT_AXIS_LINE_PAINT, numberAxis0.DEFAULT_AXIS_LINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Double0, (-1176.7332532417017), (Paint) null, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(12.0F, 12.0F, 12, 12.0F);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", multiplePiePlot0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(66, 3420, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, (-764.279144182873), periodAxis0.DEFAULT_TICK_MARK_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Range range0 = categoryStepRenderer0.findRangeBounds((CategoryDataset) null, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(46, 46, 10);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer3D0.initialise(graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(12.0F, 12.0F, 12, 12.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      String[] stringArray0 = new String[3];
      Number[][] numberArray0 = new Number[3][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("({0}, {1}) = {3} - {4}", 5, 947.221);
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      assertEquals(1, categoryStepRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(5, (double) categoryStepRenderer0.ZERO, categoryStepRenderer0.ZERO, (double) categoryStepRenderer0.ZERO, categoryStepRenderer0.DEFAULT_OUTLINE_PAINT, categoryStepRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(false);
      boolean boolean0 = categoryStepRenderer0.equals(categoryStepRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      assertTrue(boxAndWhiskerRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      categoryStepRenderer0.setSeriesURLGenerator(13, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator(">|H_*vtZ/V\"&5Q|{", dateFormat0);
      stackedAreaRenderer0.setSeriesToolTipGenerator(12, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      statisticalBarRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      assertFalse(lineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setSeriesItemLabelGenerator(3, (CategoryItemLabelGenerator) null, false);
      assertTrue(statisticalBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, taskSeriesCollection0, 10, (-467), true, 10, 1.0F, false);
      assertEquals("PlotOrientation.HORIZONTAL", plotOrientation0.toString());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setSeriesURLGenerator(16, (CategoryURLGenerator) null);
      assertFalse(groupedStackedBarRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = categoryStepRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'orientation' argument.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, extendedCategoryAxis0, cyclicNumberAxis0, defaultBoxAndWhiskerCategoryDataset0, 10, 10, true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)categoryStepRenderer0.clone();
      assertTrue(categoryStepRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("({0}, {1}) = {2}");
      groupedStackedBarRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = (GroupedStackedBarRenderer)groupedStackedBarRenderer0.clone();
      assertEquals(1.0, groupedStackedBarRenderer1.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = categoryStepRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineAndShapeRenderer0.getSeriesItemLabelGenerator((-1546));
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = categoryStepRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.removeAnnotations();
      assertEquals(0, categoryStepRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("", "", "");
      groupedStackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      try { 
        groupedStackedBarRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      BufferedImage bufferedImage0 = new BufferedImage(22, 548, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      stackedAreaRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Double0);
      assertTrue(combinedRangeCategoryPlot0.isNotify());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, 5, 5);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, slidingCategoryDataset0, 5, 5, false, 5, (double) stackedBarRenderer3D0.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getItemMiddle("({0}, {1}) = {2}", "({0}, {1}) = {2}", (CategoryDataset) null, categoryAxis3D0, rectangle0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = categoryStepRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = categoryStepRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = groupedStackedBarRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-101.3596), (-101.3596));
      double[][] doubleArray0 = new double[8][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = barRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = groupedStackedBarRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      categoryStepRenderer0.setSeriesItemLabelGenerator(5, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      assertTrue(categoryStepRenderer0.getBaseCreateEntities());
  }
}
