/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 31 13:33:10 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.SimpleTimeZone;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer0.DEFAULT_SHAPE, jDBCCategoryDataset0, 1390, 0, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1390, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("*'U|WMW_lxq+", numberFormat0);
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, taskSeriesCollection0, 10, 10, false, 10, 2257.599, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ganttRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, taskSeriesCollection0, 10, 10, false, 10, 2257.599, true);
      assertEquals(4.0, ganttRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) categoryStepRenderer0.ZERO, (double) boxAndWhiskerRenderer0.ZERO);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, groupedStackedBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4264, 9);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      boxAndWhiskerRenderer0.drawItemLabel(graphics2D0, (PlotOrientation) null, jDBCCategoryDataset0, (-5061), 9, true, 0.0, 0.0, true);
      assertTrue(boxAndWhiskerRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(false);
      statisticalLineAndShapeRenderer0.setPlot(combinedDomainCategoryPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, false, false, 2.5, 10, 10, (-1441.8478337), plotOrientation0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setPlot(combinedDomainCategoryPlot0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, false, categoryStepRenderer0.ZERO, 0.0, 64, 715.5345496, 0.0, plotOrientation0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D.Double point2D_Double0 = (Point2D.Double)boxAndWhiskerRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D0, numberAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(2.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      PolarPlot polarPlot0 = new PolarPlot();
      LabelBlock labelBlock0 = new LabelBlock("", numberAxis3D0.DEFAULT_TICK_LABEL_FONT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      GeneralPath generalPath0 = new GeneralPath(polarPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle rectangle0 = generalPath0.getBounds();
      Point2D.Double point2D_Double0 = (Point2D.Double)categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle0, numberAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(categoryStepRenderer0.ZERO, (double) categoryStepRenderer0.ZERO, categoryStepRenderer0.ZERO, (double) categoryStepRenderer0.ZERO, categoryStepRenderer0.DEFAULT_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boolean boolean0 = categoryStepRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getDomainAxisEdge(74);
      double double0 = ganttRenderer0.getItemMiddle(false, false, taskSeriesCollection0, categoryAxis3D0, rectangle2D0, rectangleEdge0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      defaultKeyedValues2DDataset0.addValue((Number) combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_ALPHA, (Comparable) levelRenderer0.ZERO, (Comparable) false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 0, 0, false, 0.0, 1239.2948);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      AffineTransform affineTransform0 = new AffineTransform((-1.0F), (float) 10, (-1466.658F), 774.2582F, (-1466.658F), 4123.572F);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      Rectangle2D rectangle2D0 = scatterRenderer0.DEFAULT_VALUE_LABEL_FONT.getMaxCharBounds(fontRenderContext0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, areaRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 0.005, (double) (-1466.658F), chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      categoryStepRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, cyclicNumberAxis0, rectangle2D0, 0.0, scatterRenderer0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(1, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      categoryStepRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 10, categoryStepRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      assertEquals(2.0, categoryStepRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      JFreeChart jFreeChart0 = new JFreeChart(";caKil}KDBO{=_", categoryAxis3D0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1445, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      waterfallBarRenderer0.drawBackground(graphics2D0, combinedDomainCategoryPlot0, rectangle2D0);
      assertTrue(waterfallBarRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Number[][] numberArray0 = new Number[5][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      scatterRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, 1, 1, true);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Number[][] numberArray0 = new Number[12][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JScrollPane jScrollPane0 = new JScrollPane();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CompoundBorder compoundBorder0 = new CompoundBorder();
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jScrollPane0, (Border) compoundBorder0, 5, 0, 1, (-351));
      statisticalLineAndShapeRenderer0.initialise(graphics2D0, rectangle0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(12, statisticalLineAndShapeRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(5, 5);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2134, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Number[][] numberArray0 = new Number[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Base item URL generator not cloneable.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, logarithmicAxis0, stackedBarRenderer0);
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise(graphics2D0, rectangle0, categoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator(51, 5, false);
      assertSame(categoryToolTipGenerator0, boxAndWhiskerToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, logAxis0, lineRenderer3D0);
      logAxis0.setRange((-758.61795421), (double) 1.0F);
      ValueAxis valueAxis0 = boxAndWhiskerRenderer0.getRangeAxis(categoryPlot0, (-1084));
      assertTrue(valueAxis0.isVisible());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, logAxis0, lineRenderer3D0);
      logAxis0.setMinorTickMarkInsideLength((-2157.485F));
      boxAndWhiskerRenderer0.getRangeAxis(categoryPlot0, (-1084));
      assertEquals(0.00794328234724282, logAxis0.getLowerBound(), 0.01);
      assertEquals(1.258925411794167, logAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = boxAndWhiskerRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 56);
      assertEquals(0.0, valueAxis0.getFixedDimension(), 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_PAINT, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = waterfallBarRenderer0.getItemLabelGenerator(1, 1283, true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = categoryStepRenderer0.getItemLabelGenerator(360, 5, false);
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0E-8, "c,X*+7/3!Vemk1EmBn");
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) null, cyclicNumberAxis0, ganttRenderer0);
      stackedAreaRenderer0.getDomainAxis(categoryPlot0, defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("\"<&y7RFv)i");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D(" ");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, numberAxis3D0, levelRenderer0);
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      assertEquals(2.0F, categoryAxis0.getMinorTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryURLGenerator categoryURLGenerator0 = ganttRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator1 = (StandardCategoryToolTipGenerator)categoryStepRenderer0.getBaseToolTipGenerator();
      assertEquals("({0}, {1}) = {2}", standardCategoryToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = categoryStepRenderer0.getBaseItemLabelGenerator();
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 9);
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double[][] doubleArray0 = new double[4][1];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 31;
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(31.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Number[][] numberArray0 = new Number[2][0];
      Number[] numberArray1 = new Number[5];
      numberArray1[0] = (Number) areaRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      numberArray0[1] = numberArray0[0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = areaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Number[][] numberArray0 = new Number[2][9];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Range range0 = areaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(3.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][3];
      Number[] numberArray1 = new Number[3];
      Float float0 = new Float((float) (-2208988800000L));
      numberArray1[0] = (Number) float0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals((-2.208988921856E12), range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer0.equals(categoryStepRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState((PlotRenderingInfo) null);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      Rectangle rectangle0 = new Rectangle();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = groupedStackedBarRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = groupedStackedBarRenderer0.createHotSpotBounds(graphics2D0, rectangle0, combinedRangeCategoryPlot0, categoryAxis0, dateAxis0, defaultBoxAndWhiskerCategoryDataset0, 3, 10, true, categoryItemRendererState0, rectangle0);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("%Lx|NE1=Xw9NyR7V_");
      // Undeclared exception!
      try { 
        stackedBarRenderer0.setSeriesURLGenerator((-773), (CategoryURLGenerator) standardCategoryURLGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesToolTipGenerator(Integer.MAX_VALUE, (CategoryToolTipGenerator) null, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesToolTipGenerator((-214), (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesItemLabelGenerator((-1291), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesItemLabelGenerator((-2745), (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Rectangle rectangle0 = new Rectangle(0, 0, (-2786), (-2786));
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D0, (CategoryPlot) null, jDBCCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.hitTest(0.0F, 0.0F, (Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, (CategoryAxis) null, numberAxis3D0, defaultMultiValueCategoryDataset0, 7, 7, false, (CategoryItemRendererState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("c:s[ d}");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.hitTest(3.0, 0.2, (Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis3D0, numberAxis3D0, defaultMultiValueCategoryDataset0, 10, (-1), true, (CategoryItemRendererState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      // Undeclared exception!
      try { 
        areaRenderer0.getRangeAxis((CategoryPlot) null, 2857);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      // Undeclared exception!
      try { 
        categoryStepRenderer0.getItemMiddle(0.05, false, (CategoryDataset) null, categoryAxis3D0, rectangle2D_Float0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(643.093, 643.093);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        barRenderer3D0.getDomainAxis((CategoryPlot) null, defaultKeyedValues2DDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getDomainAxis(combinedDomainCategoryPlot0, defaultKeyedValues2DDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, (-2410), 631);
      // Undeclared exception!
      try { 
        barRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      Number[][] numberArray0 = new Number[3][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, (-2080), 3);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.findRangeBounds((CategoryDataset) slidingCategoryDataset0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): category index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double[][] doubleArray0 = new double[4][2];
      double[] doubleArray1 = new double[7];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ganttRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        areaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Number[][] numberArray0 = new Number[2][3];
      Number[] numberArray1 = new Number[1];
      numberArray0[1] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      ValueMarker valueMarker0 = new ValueMarker(0.0F, color0, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      MockDate mockDate0 = new MockDate();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(976, "C<hVcA\"]dU8r@]b#");
      Locale locale0 = new Locale("");
      Week week0 = new Week(mockDate0, simpleTimeZone0, locale0);
      PeriodAxis periodAxis0 = new PeriodAxis("", week0, week0, simpleTimeZone0, locale0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, valueMarker0, rectangle2D_Float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, rectangle2D_Float0, 0.0F, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Week week0 = new Week();
      PeriodAxis periodAxis0 = new PeriodAxis("Y6VEV,lqhlw>", week0, week0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, rectangle0, 1623.37889893, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, periodAxis0.DEFAULT_AXIS_LINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        ganttRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, categoryAxis0, (CategoryMarker) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, numberAxis3D0, groupedStackedBarRenderer0);
      Color color0 = Color.YELLOW;
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null, color0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, extendedCategoryAxis0, categoryMarker0, rectangle2D_Float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, categoryAxis3D0, (ValueAxis) null, (Layer) null, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4163, 10, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Null 'plot' argument.");
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Number[][] numberArray0 = new Number[2][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.createHotSpotBounds(graphics2D0, rectangle0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis3D0, defaultIntervalCategoryDataset0, 10, 15, true, categoryItemRendererState0, rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Number[][] numberArray0 = new Number[3][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "gs+v^");
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 10, 1.0F, 0.0F);
      // Undeclared exception!
      try { 
        levelRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 10, 3, true, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 3280.4, (-1.0), (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, (RectangleAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultKeyedValues2DDataset0, (-1), 10, false, 1.0F, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 5, 5, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, rectangle2D_Float0, defaultKeyedValues2DDataset0, (-1004), (-1004), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation("({0}, {1}) = {3} - {4}", 1907.410522243, categoryStepRenderer0.ZERO, 1907.410522243, categoryStepRenderer0.DEFAULT_PAINT, categoryStepRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5.0E-5, (-1437.05145073), "PRINT");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(66, 500);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.createHotSpotBounds(graphics2D0, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, (CategoryDataset) null, 500, 736, false, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Layer layer0 = Layer.FOREGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(5, (double) categoryStepRenderer0.ZERO, categoryStepRenderer0.ZERO, (double) categoryStepRenderer0.ZERO, categoryStepRenderer0.DEFAULT_OUTLINE_PAINT, categoryStepRenderer0.DEFAULT_STROKE);
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) null, true);
      assertEquals(1, ganttRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryURLGenerator categoryURLGenerator0 = stackedAreaRenderer0.getURLGenerator(34, 34, true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(517, (CategoryToolTipGenerator) null, true);
      assertEquals(8.0, BarRenderer3D.DEFAULT_Y_OFFSET, 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator(845, 845, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      assertTrue(categoryStepRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("c:s[ d}");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.hitTest(3.0, 0.2, (Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis3D0, numberAxis3D0, defaultMultiValueCategoryDataset0, 10, 10, true, (CategoryItemRendererState) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      BarRenderer barRenderer0 = new BarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Null 'hotspot' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, (double) barRenderer0.ZERO, "Null 'hotspot' argument.");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultStatisticalCategoryDataset0, 9, 9, false, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 9, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[3][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, (-933), (-310), true, (byte)4, (byte)4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 0, 0, false, 0.0, 1239.2948);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 0, 0, false, 0.2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 2733, 2733, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      LegendItemCollection legendItemCollection0 = ganttRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      ganttRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      assertEquals(4.0, ganttRenderer1.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)categoryStepRenderer0.clone();
      assertEquals(0, categoryStepRenderer1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      try { 
        categoryStepRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = new Range(0.0F, 0.0F);
      ModuloAxis moduloAxis0 = new ModuloAxis("The 'data' array must contain six arrays with equal length.", range0);
      Layer layer0 = Layer.FOREGROUND;
      boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis3D0, moduloAxis0, layer0, (PlotRenderingInfo) null);
      assertNull(moduloAxis0.getLabelURL());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, categoryAxis3D0, (ValueAxis) null, layer0, (PlotRenderingInfo) null);
      assertTrue(boxAndWhiskerRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      statisticalLineAndShapeRenderer0.setPlot(combinedDomainCategoryPlot0);
      statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, categoryStepRenderer0.ZERO, 5, (-1461.1165579530498), 5, 5, 5, plotOrientation0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(false);
      statisticalLineAndShapeRenderer0.setPlot(combinedDomainCategoryPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, 10, false, 10, 10, 1.0F, 1.0F, plotOrientation0);
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, categoryStepRenderer0.ZERO, 5, (-1461.1165579530498), 5, 5, 5, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.updateCrosshairValues(categoryCrosshairState0, 10, false, 10, 4227, (-1.0), (-1.0), (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.updateCrosshairValues((CategoryCrosshairState) null, categoryStepRenderer0.ZERO, 5, (-1461.1165579530498), 5, 5, 5, plotOrientation0);
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2586.2550269643));
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, cyclicNumberAxis0, statisticalBarRenderer0);
      DrawingSupplier drawingSupplier0 = statisticalBarRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DrawingSupplier drawingSupplier0 = statisticalBarRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, lineAndShapeRenderer0.ZERO, (double) lineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      boolean boolean0 = lineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StackedBarRenderer stackedBarRenderer1 = (StackedBarRenderer)stackedBarRenderer0.clone();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = (StandardCategorySeriesLabelGenerator)stackedBarRenderer1.getLegendItemLabelGenerator();
      assertTrue(stackedBarRenderer1.equals((Object)stackedBarRenderer0));
      
      stackedBarRenderer1.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = stackedBarRenderer0.equals(stackedBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StackedBarRenderer stackedBarRenderer1 = (StackedBarRenderer)stackedBarRenderer0.clone();
      assertTrue(stackedBarRenderer1.equals((Object)stackedBarRenderer0));
      
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = (StandardCategorySeriesLabelGenerator)statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedBarRenderer1.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = stackedBarRenderer0.equals(stackedBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StackedBarRenderer stackedBarRenderer1 = (StackedBarRenderer)stackedBarRenderer0.clone();
      assertTrue(stackedBarRenderer1.equals((Object)stackedBarRenderer0));
      
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      stackedBarRenderer1.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = stackedBarRenderer0.equals(stackedBarRenderer1);
      assertFalse(stackedBarRenderer1.equals((Object)stackedBarRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer0.equals(categoryStepRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StackedBarRenderer stackedBarRenderer1 = (StackedBarRenderer)stackedBarRenderer0.clone();
      assertTrue(stackedBarRenderer1.equals((Object)stackedBarRenderer0));
      
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = (StandardCategoryItemLabelGenerator)spiderWebPlot0.getLabelGenerator();
      stackedBarRenderer1.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      boolean boolean0 = stackedBarRenderer0.equals(stackedBarRenderer1);
      assertFalse(stackedBarRenderer1.equals((Object)stackedBarRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      Object object0 = stackedBarRenderer0.clone();
      boolean boolean0 = stackedBarRenderer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem((-6347), 15);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("({0}, {1}) = {2}");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("({0}, {1}) = {3} - {4}");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, numberAxis3D0, levelRenderer0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem(500, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Float0, rectangle2D_Float0, numberAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Point point0 = new Point(10, 10);
      Dimension dimension0 = new Dimension(10, 10);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainCategoryPlot0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
      try { 
        categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle2D0, categoryAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      Rectangle rectangle0 = new Rectangle();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1322.55706), 2324.8065808);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle0);
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      BufferedImage bufferedImage0 = new BufferedImage(1, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Base item URL generator not cloneable.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-100, 1.0E-100);
      Rectangle rectangle0 = new Rectangle(10, 15);
      stackedBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logarithmicAxis0, intervalMarker0, rectangle0);
      assertFalse(rectangle0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryMarker categoryMarker0 = new CategoryMarker(true, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      stackedBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, categoryMarker0, rectangle2D_Float0);
      assertEquals(0, stackedBarRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis("n5()");
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      valueMarker0.setLabel("n5()");
      groupedStackedBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, valueMarker0, rectangle0);
      assertTrue(groupedStackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      Rectangle rectangle0 = new Rectangle(3, 3);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.05);
      groupedStackedBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, valueMarker0, rectangle0);
      assertTrue(combinedRangeCategoryPlot0.isNotify());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      ValueMarker valueMarker0 = new ValueMarker(10, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
      groupedStackedBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, numberAxis3D0, valueMarker0, rectangle2D_Float0);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ValueMarker valueMarker0 = new ValueMarker((double) categoryStepRenderer0.ZERO, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(860.0, 0.0, "4;nX,}P%o-k");
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, cyclicNumberAxis0, valueMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(5, 5, 10.0);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2134, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Number[][] numberArray0 = new Number[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Base item URL generator not cloneable.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, logarithmicAxis0, stackedBarRenderer0);
      DateAxis dateAxis0 = new DateAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.302585092994046, 10.0, categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      stackedBarRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, dateAxis0, intervalMarker0, rectangle0);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(5, 5, 10.0);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2134, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Number[][] numberArray0 = new Number[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Base item URL generator not cloneable.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, logarithmicAxis0, stackedBarRenderer0);
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      stackedBarRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle0);
      assertEquals(2.0, stackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(1, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      AffineTransform affineTransform0 = AffineTransform.getShearInstance(0.2, (-893.7821136082));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, false, false);
      Rectangle2D rectangle2D0 = categoryAxis3D0.DEFAULT_AXIS_LABEL_FONT.getMaxCharBounds(fontRenderContext0);
      CategoryPlot categoryPlot0 = categoryStepRenderer0.getPlot();
      LogAxis logAxis0 = new LogAxis();
      categoryStepRenderer0.drawRangeLine(graphics2D0, (CategoryPlot) null, logAxis0, rectangle2D0, 2.0F, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      assertNull(categoryAxis3D0.getLabelURL());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(17, 396, (-1.0), (double) 5, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0));
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeLine(graphics2D0, categoryPlot0, cyclicNumberAxis0, rectangle2D_Float0, 0.0F, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0, 0.0F, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0, (-9.18723990143689), (Paint) null, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0, 0.0F, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double[][] doubleArray0 = new double[4][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Number[][] numberArray0 = new Number[4][0];
      areaRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = areaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle rectangle0 = new Rectangle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(5, (-1));
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise(graphics2D0, rectangle0, combinedRangeCategoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setSeriesURLGenerator(552, (CategoryURLGenerator) null);
      assertTrue(stackedBarRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setSeriesURLGenerator(273, (CategoryURLGenerator) null, false);
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)categoryStepRenderer0.clone();
      assertEquals(3, categoryStepRenderer1.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      stackedAreaRenderer0.setSeriesToolTipGenerator(5, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(3245, (CategoryToolTipGenerator) null, false);
      assertTrue(stackedBarRenderer3D0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      assertTrue(categoryStepRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer0.setSeriesItemLabelGenerator(39, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      assertTrue(stackedBarRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesURLGenerator((-5641), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryURLGenerator categoryURLGenerator0 = minMaxCategoryRenderer0.getSeriesURLGenerator(21);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = categoryStepRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.createState((PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D_Float0, (CategoryPlot) null, categoryAxis3D0, (ValueAxis) null, defaultBoxAndWhiskerCategoryDataset0, 10, 10, false, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)categoryStepRenderer0.clone();
      assertEquals(1, categoryStepRenderer1.getPassCount());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = categoryStepRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesToolTipGenerator((-3164), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      assertEquals("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", boxAndWhiskerToolTipGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawBackground((Graphics2D) null, (CategoryPlot) null, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineRenderer3D0.getSeriesItemLabelGenerator(0);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = categoryStepRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.removeAnnotations();
      assertTrue(categoryStepRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      assertFalse(lineAndShapeRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = boxAndWhiskerRenderer0.getSeriesToolTipGenerator(35);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(5, 5);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2134, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Number[][] numberArray0 = new Number[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Base item URL generator not cloneable.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, logarithmicAxis0, stackedBarRenderer0);
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.drawOutline(graphics2D0, categoryPlot0, rectangle0);
      assertEquals(4.0, ganttRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("PTn$#a9i");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getItemMiddle(true, 0.0F, defaultBoxAndWhiskerCategoryDataset0, extendedCategoryAxis0, rectangle2D_Float0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      int int0 = areaRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = categoryStepRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)categoryStepRenderer0.clone();
      assertEquals(1, categoryStepRenderer1.getPassCount());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, numberAxis3D0, categoryStepRenderer0);
      CategoryPlot categoryPlot1 = categoryStepRenderer0.getPlot();
      assertTrue(categoryPlot1.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(3, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      assertFalse(minMaxCategoryRenderer0.getBaseItemLabelsVisible());
  }
}
