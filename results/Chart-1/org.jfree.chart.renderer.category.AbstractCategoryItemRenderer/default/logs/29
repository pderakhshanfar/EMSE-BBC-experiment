* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Starting Client-0
* Connecting to master process on port 3724
* Analyzing classpath: 
  - subjects/buggy-versions/Chart-1/build
  - subjects/buggy-versions/Chart-1/lib/servlet.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2320
* Using seed 1724513720
* Starting evolution
* Initial Number of Goals in DynaMOSA = 786 / 2320
[MASTER] 15:19:51.953 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$1
[MASTER] 15:19:54.507 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.addAnnotation(Lorg/jfree/chart/annotations/CategoryAnnotation;Lorg/jfree/chart/util/Layer;)V: I29 Branch 12 IFEQ L671 - false
[MASTER] 15:19:54.636 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot()Lorg/jfree/chart/plot/CategoryPlot;
[MASTER] 15:19:54.636 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot()Lorg/jfree/chart/plot/CategoryPlot;
[MASTER] 15:20:16.870 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$2
[MASTER] 15:20:18.987 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 15:20:49.793 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.ListCellRenderer<E> : Type points to itself
[MASTER] 15:25:45.962 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 603s and 918 generations, 483273 statements, best individual has fitness: 867.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 519
* Number of covered goals: 387
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 71%
* Total number of goals: 274
* Number of covered goals: 194
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 783
* Number of covered goals: 467
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 340
* Number of covered goals: 130
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 65
* Number of covered goals: 62
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 274
* Number of covered goals: 194
* Generated 159 tests with total length 839
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.io.FilePermission: 
         write /tmp/+~JT1440133905466289707.tmp: 1
         write /tmp/+~JT2824481854925674640.tmp: 1
         write /tmp/+~JT896773986846340664.tmp: 1
         write /experiment/?/.java/fonts: 1
  - java.net.URLPermission: 
         *:* http://www.someFakeButWellFormedURL.org/fooExample: 1
* Writing tests to file
* Writing JUnit test case 'AbstractCategoryItemRenderer_ESTest' to results/Chart-1/org.jfree.chart.renderer.category.AbstractCategoryItemRenderer/default/tests/29
* Done!

* Computation finished
