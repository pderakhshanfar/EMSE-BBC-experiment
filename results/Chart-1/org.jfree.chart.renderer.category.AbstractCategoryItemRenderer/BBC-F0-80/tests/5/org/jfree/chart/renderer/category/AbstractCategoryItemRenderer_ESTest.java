/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 14:49:43 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Scrollbar;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.IndexColorModel;
import java.awt.image.RescaleOp;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Date;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.DebugGraphics;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFormattedTextField;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.plaf.basic.BasicTextPaneUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.synth.SynthTabbedPaneUI;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.JTextComponent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.GradientPaintTransformType;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5, "({0}, {1}) = {2}");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, cyclicNumberAxis0, categoryStepRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      rectangle2D_Double0.createUnion(rectangle2D_Double1);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(5, 1451, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis((-2629.087778257));
      minMaxCategoryRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, cyclicNumberAxis1, valueMarker0, rectangle2D_Double1);
      minMaxCategoryRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State((PlotRenderingInfo) null);
      Number[][] numberArray0 = new Number[3][7];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = (Number) 0;
      numberArray1[1] = (Number) 0.2;
      numberArray1[2] = combinedRangeCategoryPlot0.ZERO;
      numberArray0[0] = numberArray1;
      numberArray0[1] = numberArray1;
      Number[] numberArray2 = new Number[7];
      numberArray2[0] = (Number) 0;
      numberArray2[1] = (Number) 0;
      numberArray2[2] = (Number) 1.0F;
      numberArray2[3] = (Number) 2.0F;
      numberArray2[4] = (Number) 1.0F;
      numberArray2[5] = (Number) 1.0E-8;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      numberArray2[6] = (Number) 5;
      numberArray0[2] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        ganttRenderer0.hitTest(1.0F, (-1598.3321001006), (Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryAxis) null, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 17, 1, false, categoryStepRenderer_State0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 0.2, 3.0, 3.0, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      CategoryAxis categoryAxis0 = null;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      int int0 = (-1899);
      ganttRenderer0.getRangeAxis(combinedRangeCategoryPlot0, (-1899));
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State((PlotRenderingInfo) null);
      double double0 = 1.0E10;
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(1408.441889814, 0.2, 0.05, (double) ganttRenderer0.ZERO);
      JFreeChart jFreeChart0 = new JFreeChart("= 82VYFTNa", valueAxis0.DEFAULT_TICK_LABEL_FONT, thermometerPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      int int1 = (-1);
      int[] intArray0 = new int[2];
      intArray0[0] = 10;
      intArray0[1] = (-564);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), 15, intArray0, (-208), true, 10, 1160);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[21][0];
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("|)_=`!_{(kwcOl u^");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "|)_=`!_{(kwcOl u^";
      stringArray0[1] = "|)_=`!_{(kwcOl u^";
      SymbolAxis symbolAxis0 = new SymbolAxis("|)_=`!_{(kwcOl u^", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, categoryStepRenderer0);
      categoryStepRenderer0.getRangeAxis(categoryPlot0, 500);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State((PlotRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = 0.0;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 1, (-564), chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -564
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItem(0, 0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      Comparable<BoxAndWhiskerRenderer>[] comparableArray0 = (Comparable<BoxAndWhiskerRenderer>[]) Array.newInstance(Comparable.class, 3);
      Day day0 = new Day();
      comparableArray0[0] = (Comparable<BoxAndWhiskerRenderer>) day0;
      DateAxis dateAxis0 = new DateAxis();
      Date date0 = dateAxis0.getMaximumDate();
      Quarter quarter0 = new Quarter(date0);
      comparableArray0[1] = (Comparable<BoxAndWhiskerRenderer>) quarter0;
      Millisecond millisecond0 = new Millisecond();
      comparableArray0[2] = (Comparable<BoxAndWhiskerRenderer>) millisecond0;
      Comparable<Object>[] comparableArray1 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray1, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      levelRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, defaultCaret0, (-1703.31955), periodAxis0.DEFAULT_TICK_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      levelRenderer0.lookupSeriesPaint((-1178));
      levelRenderer0.getLegendItem(0, 0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      combinedRangeCategoryPlot0.setOutlinePaint(lineRenderer3D0.DEFAULT_PAINT);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      lineRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      fastScatterPlot0.getOrientation();
      int int0 = 69;
      // Undeclared exception!
      try { 
        lineRenderer3D0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      lineRenderer3D0.setItemLabelAnchorOffset(3.0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "5ubP>H=F");
      groupedStackedBarRenderer0.getShadowsVisible();
      lineRenderer3D0.getUseOutlinePaint();
      groupedStackedBarRenderer0.getLegendItemToolTipGenerator();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItem((-1014), (-1014));
      levelRenderer0.setItemMargin(0.0);
      lineRenderer3D0.getItemLineVisible(1326, 1326);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getLegendItem(0, 2534);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.setPlot(combinedRangeCategoryPlot0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      lineRenderer3D1.updateCrosshairValues(categoryCrosshairState0, 0, 1.0F, 8.0, 10, (double) lineRenderer3D0.ZERO, 2500.0, plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      lineRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, true, true, (double) scatterRenderer0.ZERO, 10, 1.0E-5, 0.0, plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "/2,");
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryAxis categoryAxis0 = null;
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 5);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      BarRenderer.setDefaultShadowsVisible(true);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer0.createState(plotRenderingInfo0);
      ganttRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryAxis) null, valueAxis0, taskSeriesCollection0, (-1298), 10, false, categoryItemRendererState0, defaultCaret0);
      // Undeclared exception!
      try { 
        defaultCaret0.setFrame((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 5);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createIntersection(defaultCaret0);
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      rectangle2D_Double1.createUnion(defaultCaret0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1152.4606417246, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE, 0.0F);
      minMaxCategoryRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, valueAxis0, valueMarker0, rectangle2D0);
      minMaxCategoryRenderer0.getMinIcon();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setItemMargin(2249.785867);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.LineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", 0.2, (double) stackedBarRenderer0.ZERO, 2172.306100365356);
      stackedBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      categoryPointerAnnotation0.setLabelOffset(0.2);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      stackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 1, 1231);
      slidingGanttCategoryDataset0.setMaximumCategoryCount(1231);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 0, 0, false, (-2781.476563), 2, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Number[][] numberArray0 = new Number[2][5];
      Number[] numberArray1 = new Number[7];
      Float float0 = new Float((-1.0F));
      numberArray1[2] = (Number) float0;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray1[3] = (Number) integer0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[3];
      Integer integer1 = new Integer((-1221));
      numberArray2[0] = (Number) integer1;
      numberArray2[1] = (Number) float0;
      numberArray2[2] = (Number) integer0;
      numberArray0[1] = numberArray2;
      Number[][] numberArray3 = new Number[2][9];
      numberArray3[0] = numberArray1;
      numberArray3[1] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray3);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("-pJ6ARNYm0_:d9MJ");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-pJ6ARNYm0_:d9MJ";
      stringArray0[2] = "Null 'orientation' argument.";
      stringArray0[3] = "Null 'orientation' argument.";
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'orientation' argument.", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, extendedCategoryAxis0, symbolAxis0, waterfallBarRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultBoxAndWhiskerCategoryDataset0, tableOrder0, 10);
      PiePlot3D piePlot3D0 = new PiePlot3D(categoryToPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", piePlot3D0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      Graphics2D graphics2D0 = null;
      plotRenderingInfo0.getPlotArea();
      int int0 = 3092;
      statisticalLineAndShapeRenderer0.getSeriesLinesVisible(1);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, extendedCategoryAxis0, symbolAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 0.2, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Not implemented.");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 1.0F, 2.0F);
      // Undeclared exception!
      try { 
        ganttRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, numberAxis3D0, rectangle2D_Float0, 1.0F, statisticalLineAndShapeRenderer0.DEFAULT_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Locale locale0 = Locale.JAPAN;
      NumberFormat.getPercentInstance(locale0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Z");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Z");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, numberAxis3D0, ganttRenderer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.setSeriesOutlineStroke(categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 12, 10, 15, 500, 10, 15, false, true, true, true, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise(graphics2D0, rectangle2D_Float0, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      ganttRenderer0.hitTest(0.25, 0.5F, graphics2D0, rectangle2D_Float0, categoryPlot0, categoryAxis3D0, numberAxis3D0, defaultKeyedValues2DDataset0, 15, 15, false, categoryItemRendererState0);
      ganttRenderer0.getDrawingSupplier();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[17][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      categoryStepRenderer1.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 5, 5, false, (double) categoryStepRenderer0.ZERO, 653.7984623752444);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[17][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ganttRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 5, 5, false);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Number[][] numberArray0 = new Number[5][6];
      Number[] numberArray1 = new Number[2];
      numberArray1[0] = (Number) 0.2;
      int int0 = (-3872);
      Integer integer0 = new Integer((-3872));
      numberArray1[1] = (Number) integer0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) 3.0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      numberArray2[1] = (Number) integer1;
      numberArray2[2] = (Number) 0.2;
      numberArray2[3] = (Number) 3.0;
      numberArray2[4] = (Number) 0.2;
      numberArray2[5] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[3];
      numberArray3[0] = (Number) 0.2;
      numberArray3[1] = (Number) ganttRenderer0.ZERO;
      numberArray3[2] = (Number) integer1;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[6];
      numberArray4[0] = (Number) integer1;
      numberArray4[1] = (Number) integer1;
      numberArray4[2] = (Number) integer1;
      numberArray4[3] = (Number) 3.0;
      numberArray4[4] = (Number) ganttRenderer0.ZERO;
      numberArray4[5] = (Number) integer0;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[3];
      numberArray5[0] = (Number) 3.0;
      numberArray5[1] = (Number) ganttRenderer0.ZERO;
      numberArray5[2] = (Number) 3.0;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {3} - {4}", meterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Graphics2D graphics2D0 = null;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(true);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer1.createState(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Point point0 = new Point();
      plotRenderingInfo0.getSubplotIndex(point0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(948L);
      defaultStatisticalCategoryDataset0.add(0.0, 2666.9, (Comparable) 0, (Comparable) 0.05);
      boolean boolean0 = true;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(true, true);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer1.createHotSpotBounds((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, valueAxis0, defaultStatisticalCategoryDataset0, 1, 0, true, categoryItemRendererState0, defaultCaret0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      Number[][] numberArray0 = new Number[1][0];
      Number[] numberArray1 = new Number[6];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray1[0] = (Number) integer0;
      Float float0 = new Float(250000.0);
      numberArray1[1] = (Number) float0;
      double double0 = BarRenderer3D.DEFAULT_X_OFFSET;
      numberArray1[2] = (Number) 12.0;
      double double1 = LineRenderer3D.DEFAULT_Y_OFFSET;
      numberArray1[3] = (Number) 8.0;
      double double2 = LineRenderer3D.DEFAULT_X_OFFSET;
      numberArray1[5] = (Number) 12.0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      defaultIntervalCategoryDataset0.clone();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      intervalCategoryToolTipGenerator0.clone();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)categoryStepRenderer0.clone();
      categoryStepRenderer1.getBaseToolTipGenerator();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 10);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Point point0 = new Point();
      plotRenderingInfo0.getSubplotIndex(point0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
      defaultStatisticalCategoryDataset0.add(0.05, (double) 1, (Comparable) 0, (Comparable) fixedMillisecond0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, valueAxis0, defaultStatisticalCategoryDataset0, 0, 0, true, categoryItemRendererState0, defaultCaret0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Locale locale0 = Locale.ENGLISH;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Unknown layer.", numberFormat0);
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, numberAxis3D0, ganttRenderer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.setSeriesOutlineStroke(categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(28, 12);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 1097.2);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = barRenderer3D0.initialise(graphics2D0, rectangle2D_Float0, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      ganttRenderer0.hitTest(14.0, 2529.58897639, graphics2D0, rectangle2D_Float0, categoryPlot0, categoryAxis3D0, numberAxis3D0, defaultKeyedValues2DDataset0, 15, 26, false, categoryItemRendererState0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      Object object0 = ganttRenderer0.clone();
      object0.equals(ganttRenderer0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.equals(intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[19][9];
      categoryStepRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setSeriesURLGenerator(3648, (CategoryURLGenerator) standardCategoryURLGenerator0);
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity((EntityCollection) null, categoryStepRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, 3648, 3, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3648, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[19][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity((EntityCollection) null, categoryStepRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 5, 5, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      ganttRenderer0.setSeriesItemLabelGenerator(40, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ganttRenderer0.setSeriesURLGenerator(3, (CategoryURLGenerator) standardCategoryURLGenerator0);
      ganttRenderer0.getURLGenerator(3, 29, true);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[1][0];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) categoryStepRenderer0.ZERO;
      numberArray1[1] = (Number) 5;
      numberArray1[2] = (Number) 5;
      numberArray1[3] = (Number) categoryStepRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      categoryStepRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      categoryStepRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[19][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(true);
      // Undeclared exception!
      try { 
        categoryStepRenderer1.addEntity((EntityCollection) null, categoryStepRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 181, 3, true, 181, 3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ganttRenderer0.setSeriesURLGenerator(3, (CategoryURLGenerator) standardCategoryURLGenerator0);
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity((EntityCollection) null, ganttRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, 3, 3, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 1.0E-8, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      lineRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D0.clone();
      bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      LineRenderer3D lineRenderer3D2 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D2.hitTest(0.0F, 4.0, graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis0, numberAxis3D0, (CategoryDataset) null, 500, 642, false, categoryStepRenderer_State0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {3} - {4}");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("({0}, {1}) = {3} - {4}");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, numberAxis0, categoryStepRenderer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity((EntityCollection) null, categoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultKeyedValues2DDataset0, 10, 76, false, 0.0, 1.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      categoryItemRendererState0.getEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      categoryItemRendererState0.setBarWidth(0.0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity((EntityCollection) null, (Shape) null, defaultKeyedValues2DDataset0, 3169, (-1546), true, (-3010.6044317858), 3169);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker((double) lineRenderer3D0.ZERO, 0.05);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      lineRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D0.clone();
      bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = null;
      try {
        categoryTextAnnotation0 = new CategoryTextAnnotation((String) null, false, (-3345.71350505909));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double[][] doubleArray0 = new double[8][2];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray1[1] = (double) levelRenderer0.ZERO;
      doubleArray1[2] = (double) levelRenderer0.ZERO;
      doubleArray1[3] = 0.2;
      doubleArray1[4] = (double) levelRenderer0.ZERO;
      doubleArray1[5] = (double) levelRenderer0.ZERO;
      doubleArray1[6] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = 0.2;
      doubleArray2[1] = 0.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (double) levelRenderer0.ZERO;
      doubleArray3[1] = (double) levelRenderer0.ZERO;
      doubleArray3[2] = (double) levelRenderer0.ZERO;
      doubleArray3[3] = 0.0;
      doubleArray3[4] = (double) levelRenderer0.ZERO;
      doubleArray3[5] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[6] = (double) levelRenderer0.ZERO;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[0];
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[3];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray5[2] = 1297.282;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = 981.4968077895912;
      doubleArray6[1] = (double) levelRenderer0.ZERO;
      doubleArray6[2] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray6[3] = 0.2;
      doubleArray6[4] = 1297.282;
      doubleArray6[5] = 0.0;
      doubleArray6[6] = 0.2;
      doubleArray6[7] = 0.2;
      doubleArray6[8] = 0.2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[1];
      doubleArray7[0] = (double) levelRenderer0.ZERO;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[8];
      doubleArray8[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray8[1] = (double) levelRenderer0.ZERO;
      doubleArray8[2] = 981.4968077895912;
      doubleArray8[3] = 981.4968077895912;
      doubleArray8[4] = 200000.0;
      doubleArray8[5] = 1297.282;
      doubleArray8[6] = 981.4968077895912;
      doubleArray8[7] = 0.2;
      doubleArray0[7] = doubleArray8;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 1.0E-8, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      lineRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.clone();
      Graphics2D graphics2D1 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection1);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("({0}, {1}) = {2}");
      // Undeclared exception!
      try { 
        lineRenderer3D0.hitTest(0.0, 2721.0, graphics2D1, rectangle2D0, combinedRangeCategoryPlot0, extendedCategoryAxis0, numberAxis3D0, defaultKeyedValues2DDataset0, 58, (-1582), true, categoryStepRenderer_State0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 1.0E-8, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      lineRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D0.clone();
      Graphics2D graphics2D1 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        lineRenderer3D1.hitTest(10, 3301.9241394, graphics2D1, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis0, numberAxis3D0, defaultKeyedValues2DDataset0, 500, 500, true, categoryStepRenderer_State0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) null, cyclicNumberAxis0, minMaxCategoryRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(154.5, 10, (-883.102), 234.98);
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double1.createIntersection(rectangle2D_Double0);
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createUnion(rectangle2D0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, (-2323.2), "Null 'negativeBarPaint' argument");
      IntervalMarker intervalMarker0 = new IntervalMarker((-2323.2), 0);
      scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, intervalMarker0, defaultCaret0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      Number[][] numberArray0 = new Number[1][6];
      Number[] numberArray1 = new Number[8];
      double double0 = LineRenderer3D.DEFAULT_X_OFFSET;
      numberArray1[0] = (Number) 12.0;
      double double1 = BarRenderer3D.DEFAULT_Y_OFFSET;
      numberArray1[1] = (Number) 8.0;
      double double2 = BarRenderer3D.DEFAULT_X_OFFSET;
      numberArray1[2] = (Number) 12.0;
      BigInteger bigInteger0 = BigInteger.TEN;
      numberArray1[3] = (Number) bigInteger0;
      Integer integer0 = new Integer(6);
      numberArray1[4] = (Number) integer0;
      BigInteger bigInteger1 = BigInteger.ZERO;
      numberArray1[5] = (Number) bigInteger1;
      double double3 = BarRenderer3D.DEFAULT_Y_OFFSET;
      numberArray1[6] = (Number) 8.0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      numberArray1[7] = (Number) integer1;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      categoryStepRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      double[][] doubleArray0 = new double[2][4];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 0.2;
      doubleArray1[1] = 3.0;
      doubleArray1[2] = 0.2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[] numberArray0 = new Number[1];
      numberArray0[0] = (Number) 5;
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      categoryStepRenderer0.clone();
      ganttRenderer0.getBaseItemLabelGenerator();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[1][5];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) categoryStepRenderer0.ZERO;
      numberArray1[1] = (Number) ganttRenderer0.ZERO;
      numberArray1[2] = (Number) ganttRenderer0.ZERO;
      numberArray1[3] = (Number) categoryStepRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getToolTipGenerator(5, 5, false);
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      ganttRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ganttRenderer0.clone();
      CategoryDataset categoryDataset0 = null;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setFixedDimension((-262.98846));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ganttRenderer0.setPlot(categoryPlot0);
      int int0 = (-116);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-116), "({0}, {1}) = {3} - {4}");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DateAxis dateAxis0 = new DateAxis("{2}", simpleTimeZone0, locale0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      CategoryPlot categoryPlot1 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, dateAxis0, lineAndShapeRenderer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = lineAndShapeRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        ganttRenderer0.createHotSpotShape((Graphics2D) null, (Rectangle2D) null, categoryPlot1, (CategoryAxis) null, dateAxis0, (CategoryDataset) null, 500, 10, false, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[1][9];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) 5;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      categoryStepRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(ganttRenderer0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_PAINT, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.lookupSeriesStroke((-43));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      String string0 = "Sk90nHJ_ZE<94o";
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Sk90nHJ_ZE<94o", ringPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 15);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jFormattedTextField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds(53, 10);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      // Undeclared exception!
      try { 
        ganttRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, ringPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[8][1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) ganttRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = 8.0;
      doubleArray2[1] = 3.0;
      doubleArray2[2] = 0.2;
      doubleArray2[3] = (-4061.3157178356);
      doubleArray2[4] = 3.0;
      doubleArray2[5] = (double) lineRenderer3D0.ZERO;
      doubleArray2[6] = 8.0;
      doubleArray2[7] = 12.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (-10.0);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (double) ganttRenderer0.ZERO;
      doubleArray4[1] = (double) lineRenderer3D0.ZERO;
      doubleArray4[2] = 8.0;
      doubleArray4[3] = (-4061.3157178356);
      doubleArray4[4] = (double) lineRenderer3D0.ZERO;
      doubleArray4[5] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[1];
      doubleArray5[0] = 12.0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = 8.0;
      doubleArray6[1] = (-4061.3157178356);
      doubleArray6[2] = (double) ganttRenderer0.ZERO;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[4];
      doubleArray7[0] = (-4061.3157178356);
      doubleArray7[1] = 790.0483101;
      doubleArray7[2] = 0.2;
      doubleArray7[3] = 12.0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[6];
      doubleArray8[0] = 8.0;
      doubleArray8[1] = (double) lineRenderer3D0.ZERO;
      doubleArray8[2] = 12.0;
      doubleArray8[3] = 790.0483101;
      doubleArray8[4] = 3.0;
      doubleArray8[5] = (double) ganttRenderer0.ZERO;
      doubleArray0[7] = doubleArray8;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      lineRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      lineRenderer3D0.removeAnnotation((CategoryAnnotation) null);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle rectangle0 = new Rectangle();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      NumberAxis numberAxis0 = new NumberAxis("");
      Vector<ObjectList> vector0 = new Vector<ObjectList>();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.clone();
      NumberAxis numberAxis0 = new NumberAxis();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, numberAxis0, waterfallBarRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("7Pyt1Hb@xa+7^C", categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      plotRenderingInfo0.getPlotArea();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis3D0, numberAxis0, defaultMultiValueCategoryDataset0, 3, (-1), true, categoryStepRenderer_State0, defaultCaret0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {3} - {4}");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("({0}, {1}) = {3} - {4}");
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("({0}, {1}) = {3} - {4}");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, numberAxis0, categoryStepRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      int int0 = 2340;
      int int1 = 6907;
      CategoryMarker categoryMarker0 = new CategoryMarker(15);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.2, 0.0F, (-1463.833386195), 500);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis0, categoryMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ganttRenderer0.clone();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesShapesFilled(180, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      TableOrder tableOrder1 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder1);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {3} - {4}", multiplePiePlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(72, 10, chartRenderingInfo0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 228, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItemLabel(graphics2D0, (PlotOrientation) null, (CategoryDataset) null, 10, 89, false, 0.01, 228, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis("");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0, lineRenderer3D0.DEFAULT_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 73, 2);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(true, numberAxis0.DEFAULT_AXIS_LINE_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_STROKE);
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis0, categoryMarker0, rectangle2D0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      ganttRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      ganttRenderer1.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      GanttRenderer ganttRenderer2 = new GanttRenderer();
      ganttRenderer1.clone();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ganttRenderer0.getItemLabelGenerator(0, 0, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 3.0);
      stackedBarRenderer3D0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      statisticalLineAndShapeRenderer0.equals(standardCategorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalLineAndShapeRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      scatterRenderer0.findRangeBounds((CategoryDataset) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(false, true);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      Number[][] numberArray0 = new Number[7][3];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = (Number) 0.2;
      numberArray1[1] = (Number) ganttRenderer1.ZERO;
      numberArray1[2] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[9];
      numberArray2[0] = (Number) 3.0;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) 0.2;
      numberArray2[3] = (Number) 3.0;
      numberArray2[4] = (Number) 0.2;
      numberArray2[5] = (Number) 3.0;
      Long long0 = new Long(1008L);
      numberArray2[6] = (Number) long0;
      numberArray2[7] = (Number) 3.0;
      numberArray2[8] = (Number) ganttRenderer1.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[5];
      numberArray3[0] = (Number) ganttRenderer1.ZERO;
      numberArray3[1] = (Number) 3.0;
      numberArray3[2] = (Number) ganttRenderer0.ZERO;
      numberArray3[3] = (Number) 0.2;
      numberArray3[4] = (Number) 3.0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[0];
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[8];
      numberArray5[0] = (Number) 3.0;
      numberArray5[1] = (Number) 3.0;
      numberArray5[2] = (Number) 3.0;
      ganttRenderer0.getPassCount();
      numberArray5[3] = (Number) 1;
      Float float0 = new Float((float) 1);
      numberArray5[4] = (Number) float0;
      numberArray5[5] = (Number) 3.0;
      numberArray5[6] = (Number) 0.2;
      numberArray5[7] = (Number) ganttRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[3];
      numberArray6[0] = (Number) 0.2;
      numberArray6[1] = (Number) 0.2;
      numberArray6[2] = (Number) 0.2;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[6];
      numberArray7[0] = (Number) long0;
      numberArray7[1] = (Number) 3.0;
      numberArray7[2] = (Number) long0;
      numberArray7[3] = (Number) 0.2;
      numberArray7[4] = (Number) long0;
      numberArray7[5] = (Number) 3.0;
      numberArray0[6] = numberArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("({0}, {1}) = {3} - {4}");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float1 = (Rectangle2D.Float)rectangle2D_Float0.getBounds2D();
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.createIntersection(rectangle2D_Float1);
      ganttRenderer1.getItemMiddle(0.2, 0.2, defaultIntervalCategoryDataset0, subCategoryAxis0, rectangle2D_Double1, (RectangleEdge) null);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)categoryStepRenderer0.clone();
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {2}");
      Vector<ObjectList> vector0 = new Vector<ObjectList>();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      defaultMultiValueCategoryDataset0.add(vector0, 0.05, 2.0F);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, numberAxis0, categoryStepRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      plotRenderingInfo0.getPlotArea();
      CategoryStepRenderer.State categoryStepRenderer_State1 = (CategoryStepRenderer.State)categoryStepRenderer1.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis3D0, numberAxis0, jDBCCategoryDataset0, 15, 10, false, categoryStepRenderer_State1, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getBarPainter();
      ganttRenderer0.removeAnnotation((CategoryAnnotation) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(5.0E8, 5.0E8);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Object object0 = defaultCategoryItemRenderer0.clone();
      stackedBarRenderer3D0.equals(object0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(27, 27, ganttRenderer0.ZERO);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("", waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 2650, (double) 1.0F, 0.0, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 10, 0.05);
      bufferedImageRenderingSource0.createGraphics2D();
      waferMapDataset0.setChipSpace(3279.3);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      affineTransform0.shear(27, 0.0);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      stackedBarRenderer3D0.drawRangeLine(graphics2D0, categoryPlot0, numberAxis0, rectangle2D0, (-615.7), numberAxis0.DEFAULT_TICK_LABEL_PAINT, waferMapPlot0.DEFAULT_GRIDLINE_STROKE);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Scrollbar scrollbar0 = null;
      try {
        scrollbar0 = new Scrollbar();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      Layer layer0 = Layer.BACKGROUND;
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      JTree jTree0 = new JTree(defaultMutableTreeNode0, false);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainCrosshairStroke();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle rectangle0 = new Rectangle(defaultCaret0);
      Rectangle2D rectangle2D0 = defaultCaret0.createIntersection(rectangle0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, rectangle2D0, (CategoryDataset) null, (-1657), 10, false, 0, 1.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Base item URL generator not cloneable.");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.US;
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.renderer.xy.XYBubbleRenderer", simpleTimeZone0, locale0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, dateAxis0, layeredBarRenderer0);
      CategoryAxis categoryAxis1 = layeredBarRenderer0.getDomainAxis(categoryPlot0, jDBCCategoryDataset0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis1);
      SynthTabbedPaneUI synthTabbedPaneUI0 = new SynthTabbedPaneUI();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      // Undeclared exception!
      try { 
        synthTabbedPaneUI0.getTabBounds(jTabbedPane0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("-pJ6ARNYm0_:d9MJ");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-pJ6ARNYm0_:d9MJ";
      stringArray0[2] = "Null 'orientation' argument.";
      stringArray0[3] = "Null 'orientation' argument.";
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'orientation' argument.", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, extendedCategoryAxis0, symbolAxis0, waterfallBarRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultBoxAndWhiskerCategoryDataset0, tableOrder0, 10);
      PiePlot3D piePlot3D0 = new PiePlot3D(categoryToPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", piePlot3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      plotRenderingInfo0.getPlotArea();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, categoryPlot0, extendedCategoryAxis0, symbolAxis0, defaultBoxAndWhiskerCategoryDataset0, 3092, 3092, true, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3092, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Color color0 = Color.yellow;
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      defaultCategoryDataset0.setSelectionState(defaultCategoryDataset1);
      defaultCategoryDataset0.setValue(3.0, (Comparable) 0.2, (Comparable) groupedStackedBarRenderer0.ZERO);
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, false);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, (double) groupedStackedBarRenderer0.ZERO, groupedStackedBarRenderer0.ZERO, 3.0, groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 3, 0.2, (double) 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, extendedCategoryAxis0, numberAxis3D0, defaultCategoryDataset0, 956, (-330), true, categoryStepRenderer_State0, rectangle2D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("(~6faTdU9F_", 0.0, (-382.4), 0.0);
      xYPointerAnnotation0.getBackgroundPaint();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, (Rectangle2D) null, 10, (Paint) null, categoryStepRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, 0.2, 3.0, (double) statisticalLineAndShapeRenderer0.ZERO, waterfallBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, waterfallBarRenderer0.DEFAULT_OUTLINE_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(3.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.getOrientation();
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Kk(pMHy");
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Base tool tip generator not cloneable.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float(2035.8F, 0.0F);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D_Float0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      int int0 = 3;
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 3, 0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.initialise((Graphics2D) null, rectangle0, (CategoryPlot) null, slidingCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("org.jfree.chart.annotations.AbstractXYAnnotation");
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      try { 
        waterfallBarRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      statisticalLineAndShapeRenderer0.clone();
      Boolean boolean0 = new Boolean("");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-944));
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      waterfallBarRenderer0.clone();
      waterfallBarRenderer0.getToolTipGenerator((-944), (-944), false);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      GanttRenderer ganttRenderer2 = new GanttRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)ganttRenderer1.lookupSeriesShape(50);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(rectangle2D_Double0);
      ganttRenderer1.notifyListeners(rendererChangeEvent0);
      ganttRenderer2.equals(ganttRenderer1);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(213, false);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_PAINT, ganttRenderer0.DEFAULT_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(categoryLineAnnotation0, false);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, (double) stackedAreaRenderer0.ZERO, "({0}, {1}) = {2}");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, defaultStatisticalCategoryDataset0, (PlotRenderingInfo) null);
      CategoryAxis categoryAxis0 = new CategoryAxis("Base tool tip generator not cloneable.");
      ValueAxis valueAxis0 = groupedStackedBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 3657);
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis0, valueAxis0, (CategoryDataset) null, 500, 1600, true, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, 2040, 2040);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 1.0E-8, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      scatterRenderer1.findRangeBounds(defaultKeyedValues2DDataset0);
      lineRenderer3D0.getDrawingSupplier();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      GanttRenderer ganttRenderer2 = new GanttRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = ganttRenderer2.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(entityCollection0, ganttRenderer2.DEFAULT_SHAPE, (CategoryDataset) null, 1, (-1072), false, (-1072), 1.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {3} - {4}");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("({0}, {1}) = {3} - {4}");
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("({0}, {1}) = {3} - {4}");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, numberAxis0, categoryStepRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(6907, 2325);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      NumberAxis numberAxis0 = new NumberAxis("LYy ");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis(".bjH<\"* L");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, numberAxis0, categoryStepRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 2325);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, numberAxis0, categoryStepRenderer0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, (Rectangle2D) null, categoryPlot1, defaultKeyedValues2DDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      NumberAxis numberAxis0 = new NumberAxis("LYy ");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis(".bjH<\"* L");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, numberAxis0, categoryStepRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 2325);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D rectangle2D0 = null;
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, numberAxis0, categoryStepRenderer0);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      roundRectangle2D_Float0.getBounds2D();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F);
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LineRenderer3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      PlotRenderingInfo plotRenderingInfo0 = null;
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      categoryItemRendererState0.getEntityCollection();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      Shape shape0 = defaultXYItemRenderer0.getLegendLine();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity((EntityCollection) null, shape0, defaultIntervalCategoryDataset0, 63, 63, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        lineRenderer3D1.updateCrosshairValues(categoryCrosshairState0, 12.0, 12.0, (-98.0), (-1), (double) lineRenderer3D0.ZERO, 181.32, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", spiderWebPlot1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      JFreeChart jFreeChart1 = new JFreeChart("({0}, {1}) = {3} - {4}", spiderWebPlot0);
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 281, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        ganttRenderer1.drawItemLabel(graphics2D0, (PlotOrientation) null, defaultBoxAndWhiskerCategoryDataset0, (-434), (-434), false, (-4618.0), 0.5F, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, spiderWebPlot1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        ganttRenderer1.drawItemLabel(graphics2D0, (PlotOrientation) null, defaultBoxAndWhiskerCategoryDataset0, 10, 10, true, (-83.989050061741), (-1.0), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryStepRenderer0.setPlot(categoryPlot0);
      statisticalBarRenderer0.getShadowYOffset();
      int int0 = 0;
      boolean boolean0 = true;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.clear();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(entityCollection0, categoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultBoxAndWhiskerCategoryDataset0, 10, 373, false, 1.0F, 1.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D rectangle2D0 = null;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getInsets();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 2300.142F, 1717.0F, 1873.0F);
      Rectangle2D rectangle2D1 = rectangle2D_Float0.getBounds2D();
      IntervalMarker intervalMarker0 = new IntervalMarker(10.0F, 10);
      RectangleAnchor rectangleAnchor1 = intervalMarker0.getLabelAnchor();
      boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle2D1, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor1);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getPassCount();
      GanttRenderer ganttRenderer2 = new GanttRenderer();
      statisticalLineAndShapeRenderer0.getItemLineVisible(1, (-853));
      statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = thermometerPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Float0, true, true);
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createUnion(rectangle2D0);
      Point2D.Double point2D_Double0 = (Point2D.Double)ganttRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D1, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ganttRenderer0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{2}";
      stringArray0[1] = "Unrecognised exception.";
      stringArray0[2] = "";
      stringArray0[3] = "({0}, {1}) = {3} - {4}";
      stringArray0[4] = "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", stringArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.drawAnnotations(graphics2D0, (Rectangle2D) null, (CategoryAxis) null, symbolAxis0, layer0, plotRenderingInfo0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Graphics2D graphics2D1 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItemLabel(graphics2D1, (PlotOrientation) null, defaultBoxAndWhiskerCategoryDataset0, 1, 500, true, 5.0E-6, 2.0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 1.0E-8, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("({0}, {1}) = {2}");
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Layer layer0 = Layer.BACKGROUND;
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Point2D.Double point2D_Double0 = (Point2D.Double)ganttRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RectangleInsets rectangleInsets0 = combinedRangeCategoryPlot0.getInsets();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ganttRenderer0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer";
      stringArray0[1] = "Unrecognised exception.";
      stringArray0[2] = "";
      stringArray0[3] = "({0}, {1}) = {3} - {4}";
      stringArray0[4] = "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", stringArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.drawAnnotations(graphics2D0, (Rectangle2D) null, (CategoryAxis) null, symbolAxis0, layer0, plotRenderingInfo0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      // Undeclared exception!
      try { 
        ganttRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, spiderWebPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ganttRenderer0.getEndPercent();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
      piePlot3D0.getLegendItemShape();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 3, 3);
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, slidingCategoryDataset0, 3, 10, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle rectangle0 = new Rectangle();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = metalTreeUI0.new NodeDimensionsHandler();
      CategoryPointerAnnotation categoryPointerAnnotation1 = new CategoryPointerAnnotation("eT", boxAndWhiskerRenderer0.ZERO, 0.2, 9.0);
      basicTreeUI_NodeDimensionsHandler0.getNodeDimensions(categoryPointerAnnotation1, 0, 0, true, rectangle0);
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, 2, 423, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        ganttRenderer1.drawItemLabel(graphics2D0, (PlotOrientation) null, defaultBoxAndWhiskerCategoryDataset0, 15, 15, true, 0.0, 15, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, (double) ganttRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_PAINT, groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_PAINT, ganttRenderer0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = new Locale("|");
      DateAxis dateAxis0 = new DateAxis((String) null, simpleTimeZone0, locale0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, dateAxis0, defaultKeyedValues2DDataset0, (-1), 10, false, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getBaseToolTipGenerator();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      Paint paint0 = lineRenderer3D0.getWallPaint();
      assertEquals(1, paint0.getTransparency());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      categoryStepRenderer0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer0 = Layer.FOREGROUND;
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      ScatterRenderer scatterRenderer2 = (ScatterRenderer)scatterRenderer1.clone();
      assertFalse(scatterRenderer2.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity(standardEntityCollection0, rectangle0, defaultCategoryDataset0, 1, 1, false, 1, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(30.0);
      Layer layer0 = Layer.FOREGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2.0F, (-1.0F), 500, 2828.4705F);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("xOs");
      boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, extendedCategoryAxis0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      extendedCategoryAxis0.setTickMarksVisible(false);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)ganttRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, extendedCategoryAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(1.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalLineAndShapeRenderer0.setPlot(combinedRangeCategoryPlot0);
      statisticalLineAndShapeRenderer0.lookupSeriesOutlineStroke(724);
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Color color0 = (Color)ganttRenderer0.getCompletePaint();
      assertEquals((-16711936), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-3510));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      scatterRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, (-141), 1773, false, (-3112.20557621097), (-141));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryStepRenderer0.setPlot(categoryPlot0);
      statisticalBarRenderer0.getShadowYOffset();
      categoryStepRenderer0.getToolTipGenerator(0, 0, true);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.getLegendItem(10, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'hotspot' argument.", ganttRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot3D0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation1 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_LEFT;
      Point2D.Double point2D_Double0 = (Point2D.Double)boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation1, rectangle2D_Float0, rectangle2D_Float0, piePlot3D0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      assertEquals(8.0, point2D_Double0.x, 0.01);
      
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.lookupSeriesOutlinePaint(10);
      categoryStepRenderer0.getStagger();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2500000.0);
      Layer layer0 = Layer.FOREGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection1);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, subCategoryAxis0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      Point2D.Double point2D_Double1 = (Point2D.Double)ganttRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-3.0), point2D_Double1.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'hotspot' argument.", ganttRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot3D0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation1 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_LEFT;
      boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation1, rectangle2D_Float0, rectangle2D_Float0, piePlot3D0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.lookupSeriesOutlinePaint(0);
      categoryStepRenderer0.getStagger();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'hotspot' argument.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-532.746492));
      Layer layer0 = Layer.FOREGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, subCategoryAxis0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        areaRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'hotspot' argument.", ganttRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot3D0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation1 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_LEFT;
      boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation1, rectangle2D_Float0, rectangle2D_Float0, piePlot3D0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      statisticalBarRenderer0.setItemLabelAnchorOffset(336.2);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.lookupSeriesOutlinePaint(0);
      categoryStepRenderer0.getStagger();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'hotspot' argument.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-532.746492));
      Layer layer0 = Layer.FOREGROUND;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      scatterRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.2, 2.0F);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'hotspot' argument.", ganttRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot3D0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation1 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_LEFT;
      boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation1, rectangle2D_Float0, rectangle2D_Float0, piePlot3D0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      boolean boolean0 = categoryStepRenderer0.getStagger();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-5064));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(304, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      waterfallBarRenderer0.clone();
      JFreeChart jFreeChart1 = new JFreeChart("ZOOM_RANGE_BOTH", jFreeChart0.DEFAULT_TITLE_FONT, combinedRangeCategoryPlot0, true);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart1, (-5064), 300, 15, 1024, 680, 10, true, false, false, false, false, false, false);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D rectangle2D0 = chartPanel1.getScreenDataArea();
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.CONTRACT;
      boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D_Float0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType1, rectangleAnchor0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.getStagger();
      Graphics2D graphics2D1 = null;
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = metalTreeUI0.new NodeDimensionsHandler();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      basicTreeUI_NodeDimensionsHandler0.getNodeDimensions(groupedStackedBarRenderer0, (-5064), 3, true, (Rectangle) null);
      CategoryAxis categoryAxis0 = null;
      ValueAxis valueAxis0 = null;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      int int0 = 1;
      boolean boolean0 = true;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(304);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 304, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 201);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JFreeChart jFreeChart1 = new JFreeChart("Null 'hotspot' argument.", jFreeChart0.DEFAULT_TITLE_FONT, multiplePiePlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1);
      bufferedImageRenderingSource0.getSelectionState(defaultKeyedValues2DDataset0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean0 = categoryStepRenderer0.getStagger();
      scatterRenderer1.hashCode();
      boolean boolean1 = scatterRenderer0.getSeriesShapesFilled(2369);
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 201);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JFreeChart jFreeChart1 = new JFreeChart("Null 'hotspot' argument.", jFreeChart0.DEFAULT_TITLE_FONT, multiplePiePlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1);
      chartPanel0.getOrientation();
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CompoundBorder compoundBorder0 = new CompoundBorder();
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) chartPanel0, (Border) compoundBorder0, 201, 1, 1, (-1179));
      scatterRenderer0.drawBackground(graphics2D0, categoryPlot0, rectangle0);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart1, false, false, false, false, false);
      // Undeclared exception!
      try { 
        chartPanel1.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke(0);
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      chartPanel0.getChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(200, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JFreeChart jFreeChart2 = new JFreeChart("ZOOM_RESET_BOTH", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart1);
      chartPanel1.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle2D_Float0, rectangle2D_Float0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-5064));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(304, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      waterfallBarRenderer0.clone();
      Object[] objectArray0 = new Object[2];
      Object object0 = waterfallBarRenderer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) chartPanel0;
      JTree jTree0 = new JTree(objectArray0);
      metalTreeUI0.getClosestPathForLocation(jTree0, 304, 680);
      metalTreeUI0.getPathBounds(jTree0, (TreePath) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot1, (Rectangle2D) null, 0.2, waterfallBarRenderer0.DEFAULT_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke(0);
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      waterfallBarRenderer0.clone();
      waterfallBarRenderer0.clone();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) chartPanel0;
      objectArray0[1] = (Object) metalTreeUI0;
      objectArray0[2] = (Object) chartRenderingInfo0;
      objectArray0[0] = (Object) combinedRangeCategoryPlot0;
      objectArray0[4] = (Object) waterfallBarRenderer0;
      objectArray0[5] = (Object) jFreeChart0;
      JTree jTree0 = new JTree(objectArray0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getClosestPathForLocation(jTree0, 768, 2486);
      basicTreeUI0.getPathBounds(jTree0, (TreePath) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer1.drawBackground(graphics2D0, combinedRangeCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, 2040, 2040);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 1.0E-8, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("({0}, {1}) = {2}");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, numberAxis0, lineRenderer3D0);
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis0, intervalMarker0, rectangle2D0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset1 = new DefaultKeyedValues2DDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setItemMargin(12.0);
      boxAndWhiskerRenderer0.removeAnnotation((CategoryAnnotation) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getObjectIcon();
      minMaxCategoryRenderer0.setMinIcon(icon0);
      minMaxCategoryRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupLegendShape(128);
      boxAndWhiskerRenderer0.getItemLabelGenerator((-3161), 128, true);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesURLGenerator((-3161));
      // Undeclared exception!
      try { 
        ganttRenderer1.setSeriesURLGenerator((-3161), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-5064));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(304, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      waterfallBarRenderer0.clone();
      Object[] objectArray0 = new Object[2];
      Object object0 = waterfallBarRenderer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) chartPanel0;
      JTree jTree0 = new JTree(objectArray0);
      metalTreeUI0.getClosestPathForLocation(jTree0, 0, 680);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      scatterRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle0, 0.2, waterfallBarRenderer0.DEFAULT_PAINT, basicStroke0);
      scatterRenderer0.getSeriesVisibleInLegend(10);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      assertTrue(ganttRenderer1.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemURLGenerator();
      barRenderer3D0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oMoLU3K? UVrCcs5p");
      barRenderer3D0.lookupLegendShape(3);
      int int0 = barRenderer3D0.getRowCount();
      assertEquals(0, int0);
      
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      defaultCategoryItemRenderer0.setSeriesURLGenerator(95, (CategoryURLGenerator) null, false);
      defaultCategoryItemRenderer0.getUseOutlinePaint();
      barRenderer3D0.getNegativeItemLabelPositionFallback();
      statisticalBarRenderer0.equals((Object) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getItemMargin();
      assertEquals(0, boxAndWhiskerRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, 2040, 2040);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 1.0E-8, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("({0}, {1}) = {2}");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, numberAxis0, lineRenderer3D0);
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis0, intervalMarker0, rectangle2D0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset1 = new DefaultKeyedValues2DDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setItemMargin(12.0);
      boxAndWhiskerRenderer0.removeAnnotation((CategoryAnnotation) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getObjectIcon();
      minMaxCategoryRenderer0.setMinIcon(icon0);
      assertFalse(minMaxCategoryRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      waterfallBarRenderer0.getLegendItems();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, (-1756), 1040);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis("$bUH8{>)?LE5Nd!9&");
      IntervalMarker intervalMarker0 = new IntervalMarker(1040, 12.0, ganttRenderer0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D2 = new LineRenderer3D();
      lineRenderer3D0.equals(lineRenderer3D1);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("$bUH8{>)?LE5Nd!9&");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      waterfallBarRenderer0.getRangeAxis(categoryPlot0, 500);
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, (ValueAxis) null, (CategoryItemRenderer) null);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot1, slidingCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      Shape shape0 = stackedBarRenderer0.lookupLegendShape((-94));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)1;
      stackedBarRenderer0.setBaseLegendShape(shape0);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)60;
      byteArray0[5] = (byte)106;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      stackedBarRenderer0.setRenderAsPercentages(false);
      stackedBarRenderer0.equals((Object) null);
      stackedBarRenderer0.getSeriesItemLabelGenerator((-94));
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, (byte)1, 2000, 326, 400, (byte) (-52), 0, true, false, false, true, true, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis("3a;9i!YJ{<+ ");
      Vector<ObjectList> vector0 = new Vector<ObjectList>();
      defaultMultiValueCategoryDataset0.add(vector0, 0.05, 0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, numberAxis0, boxAndWhiskerRenderer0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) metalTreeUI0;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection1);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'hotspot' argument.", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, spiderWebPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 201);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, spiderWebPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      waterfallBarRenderer0.getLegendItems();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, (-1756), 1040);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis("$bUH8{>)?LE5Nd!9&");
      IntervalMarker intervalMarker0 = new IntervalMarker(1040, 12.0, ganttRenderer0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, rectangle2D0);
      LineRenderer3D lineRenderer3D2 = new LineRenderer3D();
      lineRenderer3D0.equals(lineRenderer3D1);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      scatterRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      // Undeclared exception!
      try { 
        scatterRenderer0.setItemMargin(3443.4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.ScatterRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Color color0 = Color.yellow;
      groupedStackedBarRenderer0.setBaseLegendTextPaint(color0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      defaultCategoryDataset0.setSelectionState(defaultCategoryDataset1);
      defaultCategoryDataset0.setValue(3.0, (Comparable) 0.2, (Comparable) groupedStackedBarRenderer0.ZERO);
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, false);
      groupedStackedBarRenderer0.setRenderAsPercentages(true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Paint paint0 = statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle rectangle0 = new Rectangle();
      NumberAxis numberAxis0 = new NumberAxis("$bUH8{>)?LE5Nd!9&");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 0.0, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, categoryPlot0, numberAxis0, intervalMarker0, rectangle0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-532.71225423), 0.0, 0.0, 0.0);
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createIntersection(rectangle2D0);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawOutline((Graphics2D) null, categoryPlot0, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      waterfallBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1370.364808761));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, cyclicNumberAxis0);
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      PaintScaleLegend paintScaleLegend1 = new PaintScaleLegend(lookupPaintScale0, valueAxis0);
      paintScaleLegend1.getBounds();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      assertTrue(ganttRenderer1.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-5064));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(304, 1024);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      waterfallBarRenderer0.clone();
      Object[] objectArray0 = new Object[2];
      Object object0 = waterfallBarRenderer0.clone();
      objectArray0[0] = object0;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BasicTextPaneUI basicTextPaneUI0 = new BasicTextPaneUI();
      JTextPane jTextPane0 = new JTextPane();
      chartPanel0.getVisibleRect();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      scatterRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, defaultCaret0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.findRangeBounds(defaultStatisticalCategoryDataset0);
      // Undeclared exception!
      try { 
        scatterRenderer1.setItemMargin(3.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.ScatterRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      waterfallBarRenderer0.getLegendItems();
      Graphics2D graphics2D0 = null;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, (-1756), 1040);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D rectangle2D0 = null;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis("$bUH8{>)?LE5Nd!9&");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 1.0F, ganttRenderer0.DEFAULT_OUTLINE_PAINT);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D1 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(12.0, 0.0, 8.0, (-1013.7118916), waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      lineRenderer3D0.removeAnnotation(categoryLineAnnotation0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, numberAxis0, boxAndWhiskerRenderer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D rectangle2D0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        scatterRenderer0.getItemMiddle(10, 1.0F, defaultCategoryDataset0, categoryAxis3D0, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("*", 3.0, 3.0, 3.0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getSeriesToolTipGenerator((-1531));
      categoryStepRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setBaseShapesFilled(false);
      waterfallBarRenderer0.setNegativeBarPaint(categoryStepRenderer1.DEFAULT_PAINT);
      categoryStepRenderer0.setStagger(false);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      double double0 = layeredBarRenderer0.getSeriesBarWidth(5);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-835));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, meterPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(10, 49, chartRenderingInfo0);
      waterfallBarRenderer0.setPositiveItemLabelPositionFallback((ItemLabelPosition) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-5.0));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, cyclicNumberAxis0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(3.0, "");
      ModuloAxis moduloAxis0 = new ModuloAxis("", cyclicNumberAxis1.DEFAULT_RANGE);
      PaintScaleLegend paintScaleLegend1 = new PaintScaleLegend(lookupPaintScale0, moduloAxis0);
      paintScaleLegend0.getBounds();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      boolean boolean1 = categoryStepRenderer0.equals(stackedAreaRenderer0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("e5T", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis("q(Q{.pd1LP");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, numberAxis0, (CategoryItemRenderer) null);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo1.equals("e5T");
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo1);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, (double) boxAndWhiskerRenderer0.ZERO, lineRenderer3D0.DEFAULT_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis("3a;9i!YJ{<+ ");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, numberAxis0, boxAndWhiskerRenderer0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, 0, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 862, 1100);
      ganttRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, (CategoryDataset) null, 862, (-748), true, 3.0, (-1255.95387122924), false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(2785);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2785, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("b46a'j\"", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, meterPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(541, 2874, chartRenderingInfo0);
      waterfallBarRenderer0.setPositiveItemLabelPositionFallback((ItemLabelPosition) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2406.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, cyclicNumberAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot1, (-1909));
      ModuloAxis moduloAxis0 = new ModuloAxis("", valueAxis0.DEFAULT_RANGE);
      PaintScaleLegend paintScaleLegend1 = new PaintScaleLegend(lookupPaintScale0, cyclicNumberAxis0);
      PaintScaleLegend paintScaleLegend2 = new PaintScaleLegend(lookupPaintScale0, valueAxis0);
      paintScaleLegend2.getBounds();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      assertTrue(ganttRenderer1.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-5064));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(304, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      waterfallBarRenderer0.clone();
      Object[] objectArray0 = new Object[2];
      Object object0 = waterfallBarRenderer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) chartPanel0;
      JTree jTree0 = new JTree(objectArray0);
      metalTreeUI0.getClosestPathForLocation(jTree0, 0, 680);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale(0.0, 304, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      DateAxis dateAxis0 = new DateAxis("org.jfree.data.time.TimePeriodAnchor");
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, dateAxis0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getRangeAxis((CategoryPlot) null, 1547);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Locale locale0 = new Locale("Null 'hotspot' argument.");
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Null 'hotspot' argument.", numberFormat0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      standardCategoryToolTipGenerator0.equals(defaultCategoryItemRenderer0);
      stackedAreaRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      LegendItem legendItem0 = stackedAreaRenderer0.getLegendItem(1, 1);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-5064));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, meterPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(10, 49, chartRenderingInfo0);
      waterfallBarRenderer0.setPositiveItemLabelPositionFallback((ItemLabelPosition) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-6.876496686724643));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1547);
      ModuloAxis moduloAxis0 = new ModuloAxis("", valueAxis0.DEFAULT_RANGE);
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, moduloAxis0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getEndPercent();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      assertFalse(defaultCategoryItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-5064));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(304, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      waterfallBarRenderer0.clone();
      Object[] objectArray0 = new Object[2];
      Object object0 = waterfallBarRenderer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) chartPanel0;
      JTree jTree0 = new JTree(objectArray0);
      metalTreeUI0.getClosestPathForLocation(jTree0, 0, 680);
      metalTreeUI0.getPathBounds(jTree0, (TreePath) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, (Rectangle2D) null, 0.2, waterfallBarRenderer0.DEFAULT_PAINT, basicStroke0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, (-1751), (-542));
      slidingCategoryDataset0.clone();
      ganttRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, slidingCategoryDataset0, 75, 0, false, 4.0, 8.0, false);
      ganttRenderer0.createState(plotRenderingInfo0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      lineRenderer3D0.setSeriesShapesVisible(1053, true);
      assertFalse(lineRenderer3D0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-5064));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, meterPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(10, 49, chartRenderingInfo0);
      waterfallBarRenderer0.setPositiveItemLabelPositionFallback((ItemLabelPosition) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-5.0));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, cyclicNumberAxis0);
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1547);
      ModuloAxis moduloAxis0 = new ModuloAxis("", valueAxis0.DEFAULT_RANGE);
      PaintScaleLegend paintScaleLegend1 = new PaintScaleLegend(lookupPaintScale0, moduloAxis0);
      Rectangle2D rectangle2D0 = paintScaleLegend0.getBounds();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      boolean boolean0 = true;
      lineRenderer3D0.setBaseShapesFilled(true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      Shape shape0 = xYDifferenceRenderer0.getLegendLine();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, shape0, taskSeriesCollection0, 0, 3, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      CategoryPlot categoryPlot0 = null;
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      ganttRenderer0.clone();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) metalTreeUI0;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        defaultKeyedValues2DDataset0.setSelected((-663), 0, false, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(425, 425, chartRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(425, 10, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setSeriesItemLabelGenerator(1661, (CategoryItemLabelGenerator) null);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getItemLabelPaint(1784, 1661, false);
      waterfallBarRenderer0.setLastBarPaint(multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(500.0, true);
      clusteredXYBarRenderer0.getPositiveItemLabelPositionFallback();
      waterfallBarRenderer0.setPositiveItemLabelPositionFallback((ItemLabelPosition) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.65);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, cyclicNumberAxis0);
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 500);
      PaintScaleLegend paintScaleLegend1 = new PaintScaleLegend(lookupPaintScale0, valueAxis0);
      Rectangle2D rectangle2D0 = paintScaleLegend1.getBounds();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setBaseShapesFilled(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      Vector<IntervalCategoryItemLabelGenerator> vector0 = new Vector<IntervalCategoryItemLabelGenerator>();
      DefaultComboBoxModel<IntervalCategoryItemLabelGenerator> defaultComboBoxModel0 = new DefaultComboBoxModel<IntervalCategoryItemLabelGenerator>(vector0);
      JList<IntervalCategoryItemLabelGenerator> jList0 = new JList<IntervalCategoryItemLabelGenerator>(defaultComboBoxModel0);
      jList0.getSelectedValuesList();
      Graphics2D graphics2D0 = null;
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(5);
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("({0}, {1}) = {2}", timeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D1.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      ganttRenderer0.clone();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) metalTreeUI0;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getDomainAxis((CategoryPlot) null, defaultKeyedValues2DDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, (-1751), 1063);
      ganttRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, slidingCategoryDataset0, (-2315), (-2315), false, (-1751), (-2304.5174248024), false);
      ganttRenderer0.createState(plotRenderingInfo0);
      ganttRenderer0.getEndPercent();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      assertTrue(defaultCategoryItemRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setAutoPopulateSeriesStroke(true);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseFillPaint(ganttRenderer0.DEFAULT_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = 0;
      boolean boolean0 = false;
      statisticalBarRenderer0.getItemLabelGenerator(1, 0, false);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      int int1 = (-1224);
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      // Undeclared exception!
      try { 
        waterfallBarRenderer1.setSeriesItemLabelGenerator((-1224), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      standardCategorySeriesLabelGenerator0.clone();
      lineAndShapeRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      lineAndShapeRenderer0.setSeriesLinesVisible(3, true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getBaseShapesFilled();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO);
      stackedBarRenderer3D0.setDrawBarOutline(true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      scatterRenderer0.removeAnnotations();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      boxAndWhiskerRenderer0.equals(intervalCategoryToolTipGenerator0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setErrorIndicatorPaint(boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      stackedBarRenderer3D0.setItemMargin((double) statisticalBarRenderer0.ZERO);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.2, false, standardXYToolTipGenerator0);
      Paint paint0 = candlestickRenderer0.getVolumePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, paint0, boxAndWhiskerRenderer0.DEFAULT_PAINT);
      Color color0 = (Color)waterfallBarRenderer0.getPositiveBarPaint();
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setAutoPopulateSeriesStroke(true);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setBaseFillPaint(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(1164, (-1437), true);
      waterfallBarRenderer0.setSeriesItemLabelGenerator(1164, (CategoryItemLabelGenerator) null);
      Paint paint0 = defaultPolarItemRenderer0.getItemLabelPaint((-1437), (-1437), false);
      waterfallBarRenderer0.setLastBarPaint(paint0);
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      clusteredXYBarRenderer0.getPositiveItemLabelPositionFallback();
      waterfallBarRenderer0.setPositiveItemLabelPositionFallback((ItemLabelPosition) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) defaultPolarItemRenderer0.ZERO);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, cyclicNumberAxis0);
      Rectangle2D rectangle2D0 = paintScaleLegend0.getBounds();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(425, 425, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      ganttRenderer0.clone();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) metalTreeUI0;
      JTree jTree0 = new JTree(objectArray0);
      metalTreeUI0.getClosestPathForLocation(jTree0, 15, (-1918));
      metalTreeUI0.getPathBounds(jTree0, (TreePath) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine(graphics2D0, (CategoryPlot) null, (Rectangle2D) null, 2.0, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", lineRenderer3D0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.getOrientation();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("ZOOM_RANGE_BOTH", 420, (double) statisticalLineAndShapeRenderer0.ZERO);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 1356;
      int int1 = 33;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(1356, 1356, chartRenderingInfo0);
      CategoryDataset categoryDataset0 = null;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      Rectangle rectangle0 = new Rectangle((-806), 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        scatterRenderer0.getItemMiddle(1.0F, 0.5F, (CategoryDataset) null, categoryAxis3D0, rectangle0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-3510));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      boolean boolean0 = false;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, meterPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(54, 49, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      scatterRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      int int0 = (-1636);
      boolean boolean0 = false;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 39, (-226), 5, 10, (-1636), 10, false, false, false, false, false, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1349, 1349, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) jFreeChart0;
      objectArray0[1] = (Object) scatterRenderer0;
      Object object0 = scatterRenderer0.clone();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) bufferedImage0;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("AZJAc~x", numberFormat0);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator((-4370), 2885, false);
      scatterRenderer0.setSeriesToolTipGenerator(1, categoryToolTipGenerator0, false);
      assertFalse(scatterRenderer0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(scatterRenderer0.ZERO, (double) stackedBarRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, 0.0, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      CategoryPlot categoryPlot0 = scatterRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1349, 1349, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) jFreeChart0;
      objectArray0[1] = (Object) scatterRenderer0;
      Object object0 = scatterRenderer0.clone();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) bufferedImage0;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("AZJAc~x", numberFormat0);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.getToolTipGenerator((-4370), 2885, false);
      scatterRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null, false);
      assertFalse(scatterRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart1 = new JFreeChart("", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, multiplePiePlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      SegmentedTimeline segmentedTimeline0 = new SegmentedTimeline(5505L, 3, 0);
      Date date0 = segmentedTimeline0.getDate((-3029L));
      Day day0 = new Day(date0);
      lineRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, true, day0, 0.5F, 300, 1.0, 10, plotOrientation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(680);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      assertEquals(0, defaultCategoryItemRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-3510));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      scatterRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 4.0, "n;TH;Su(Ruu4A6\"");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, cyclicNumberAxis0, waterfallBarRenderer0);
      scatterRenderer0.getDomainAxis(categoryPlot0, defaultStatisticalCategoryDataset0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getMinIcon();
      boolean boolean0 = scatterRenderer0.getItemShapeFilled((-1), 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ganttRenderer1.getEndPercent();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator(2265, 2265, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getToolTipGenerator(2265, 2265, true);
      categoryStepRenderer0.getSeriesItemLabelsVisible(2265);
      lineRenderer3D0.setSeriesShapesFilled(5, (Boolean) null);
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator(1141);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getToolTipGenerator(3, (-2895), true);
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesToolTipGenerator((-2895), (CategoryToolTipGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.lookupSeriesStroke((-3510));
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      scatterRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      scatterRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalLineAndShapeRenderer0.equals(statisticalBarRenderer0);
      statisticalLineAndShapeRenderer0.getItemLabelGenerator((-995), (-995), false);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("7BPeGmZ?", statisticalBarRenderer0.ZERO, 4.0);
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      scatterRenderer0.findRangeBounds(defaultCategoryDataset0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setFirstBarPaint(scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      assertFalse(scatterRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 1356;
      int int1 = 33;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1356, 1356, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) jFreeChart0;
      objectArray0[1] = (Object) scatterRenderer0;
      Object object0 = scatterRenderer0.clone();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) bufferedImage0;
      JTree jTree0 = new JTree(objectArray0);
      metalTreeUI0.getClosestPathForLocation(jTree0, 1129, (-1918));
      metalTreeUI0.getPathBounds(jTree0, (TreePath) null);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine(graphics2D0, (CategoryPlot) null, (Rectangle2D) null, 4350.202539, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      ganttRenderer0.createState(plotRenderingInfo0);
      ganttRenderer0.getEndPercent();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      scatterRenderer0.hasListener(taskSeriesCollection0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertEquals(3, scatterRenderer1.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ganttRenderer1.getEndPercent();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, ganttRenderer1.DEFAULT_SHAPE, taskSeriesCollection0, 1, (-2680), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 835;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      boolean boolean0 = true;
      JFreeChart jFreeChart0 = new JFreeChart("", lineRenderer3D0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      // Undeclared exception!
      try { 
        lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, fixedMillisecond0, fixedMillisecond0, (-334.2528235), 838, 838, (-334.2528235), plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getMaximumBarWidth();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(1, 319, false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Unknown layer.");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setSeriesURLGenerator(319, (CategoryURLGenerator) null);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(false);
      categoryStepRenderer1.getToolTipGenerator(319, 1, false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Unknown layer.", 0.2, 1.0, (-1574.222));
      boolean boolean0 = levelRenderer0.removeAnnotation(categoryPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("q5/ ZhB0*w4_uW", scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO, 1.0);
      categoryPointerAnnotation0.setLabelOffset(12.0);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      Paint paint0 = statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setBaseShapesFilled(false);
      int int0 = stackedBarRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("g@=-gDG0;");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, (-1712));
      // Undeclared exception!
      try { 
        stackedBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, slidingGanttCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ganttRenderer1.getEndPercent();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, ganttRenderer1.DEFAULT_SHAPE, taskSeriesCollection0, (-2680), (-1), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      lineRenderer3D0.findRangeBounds(defaultCategoryDataset0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(835);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setSeriesItemLabelGenerator(1499, (CategoryItemLabelGenerator) null, true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      boolean boolean0 = ganttRenderer0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      Double double0 = new Double((double) intervalBarRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getEndPercent();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("C$1x;\rP'L(!#");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryStepRenderer0.setPlot(combinedDomainCategoryPlot0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator(1, 1, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = 0;
      statisticalBarRenderer0.getURLGenerator(319, (-146), false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Unknown layer.");
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesURLGenerator((-146), (CategoryURLGenerator) standardCategoryURLGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("", "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
        fail("Expecting exception: SQLException");
      
      } catch(Throwable e) {
         //
         // No suitable driver found for 
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setDrawLines(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "eT";
      stringArray0[3] = "eT";
      stringArray0[2] = "eT";
      stringArray0[3] = "eT";
      CategoryPointerAnnotation categoryPointerAnnotation1 = new CategoryPointerAnnotation("org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer", "eT", (-205.22945309483566), 5000000.0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(statisticalBarRenderer0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.notifyListeners(rendererChangeEvent0);
      categoryPointerAnnotation0.setLabelOffset(8.0);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation1);
      statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getBaseURLGenerator();
      scatterRenderer1.setSeriesURLGenerator(1, (CategoryURLGenerator) null, true);
      assertTrue(scatterRenderer1.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getMaximumBarWidth();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getEndPercent();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      intervalCategoryToolTipGenerator0.clone();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      intervalCategoryToolTipGenerator0.equals(levelRenderer0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      lineRenderer3D0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      lineRenderer3D0.setItemMargin((double) ganttRenderer0.ZERO);
      ganttRenderer0.clone();
      lineRenderer3D0.setYOffset((-2693.75723));
      assertEquals((-2693.75723), lineRenderer3D0.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getMaximumBarWidth();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getEndPercent();
      boolean boolean0 = false;
      ganttRenderer0.getItemLabelGenerator((-995), (-995), false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setSeriesItemLabelGenerator((-1239), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      categoryStepRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getStartPercent();
      assertEquals(0.35, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("sV'!P");
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      minMaxCategoryRenderer0.setDrawLines(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "eT";
      stringArray0[1] = "eT";
      stringArray0[2] = "eT";
      stringArray0[3] = "eT";
      stringArray0[4] = "eT";
      stringArray0[5] = "eT";
      Number[][] numberArray0 = new Number[3][9];
      Number[] numberArray1 = new Number[6];
      numberArray1[0] = (Number) 12.0;
      numberArray1[1] = (Number) 8.0;
      numberArray1[2] = (Number) 5.0;
      statisticalBarRenderer0.setErrorIndicatorPaint(lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT);
      numberArray1[3] = (Number) statisticalBarRenderer0.ZERO;
      numberArray1[4] = (Number) 5.0;
      numberArray1[5] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[9];
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      numberArray2[0] = (Number) 0.2;
      numberArray2[1] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray2[2] = (Number) 0.2;
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYIntervalSeriesCollection0);
      // Undeclared exception!
      try { 
        intervalXYDelegate0.getStartX(1649, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1649, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setDrawLines(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "eT";
      stringArray0[1] = "eT";
      stringArray0[2] = "eT";
      stringArray0[3] = "eT";
      CategoryPointerAnnotation categoryPointerAnnotation1 = new CategoryPointerAnnotation("org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer", "eT", (-205.22945309483566), 5000000.0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(statisticalBarRenderer0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.notifyListeners(rendererChangeEvent0);
      categoryPointerAnnotation0.setLabelOffset(8.0);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation1);
      statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
      scatterRenderer0.setSeriesURLGenerator(42, (CategoryURLGenerator) null, false);
      assertFalse(scatterRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMedianVisible();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Object object0 = defaultCategoryItemRenderer0.clone();
      levelRenderer0.equals(object0);
      defaultCategoryItemRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalLineAndShapeRenderer0.equals(statisticalBarRenderer0);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      statisticalLineAndShapeRenderer0.getURLGenerator(0, (-1), false);
      statisticalLineAndShapeRenderer0.getBaseItemLabelGenerator();
      statisticalLineAndShapeRenderer0.getLegendItemLabelGenerator();
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot0, false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.clearSeriesPaints(false);
      waterfallBarRenderer0.getShadowsVisible();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1356, 1356, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) jFreeChart0;
      objectArray0[1] = (Object) scatterRenderer0;
      Object object0 = scatterRenderer0.clone();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) bufferedImage0;
      JTree jTree0 = new JTree(objectArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      ganttRenderer0.getLegendTextPaint(1272);
      ganttRenderer0.setStartPercent((double) lineRenderer3D0.ZERO);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Base tool tip generator not cloneable.", decimalFormat0);
      statisticalBarRenderer0.setSeriesToolTipGenerator(1272, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      URL uRL0 = MockURL.getFileExample();
      ganttRenderer0.getItemLabelGenerator(573, 573, false);
      statisticalBarRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null, true);
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon(uRL0, " BZm");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      int int0 = 1272;
      ganttRenderer0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        ganttRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (-632.9357), false);
      stackedBarRenderer3D0.getRenderAsPercentages();
      stackedBarRenderer3D0.getLegendItemURLGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-5626), 1, 0, 1, 0, 3, false, false, false, true, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator((-1), 0, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      ganttRenderer0.getLegendTextPaint(1272);
      ganttRenderer0.setStartPercent(0.0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", decimalFormat0);
      statisticalBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      URL uRL0 = MockURL.getFileExample();
      statisticalBarRenderer0.getItemLabelGenerator(1272, 0, false);
      statisticalBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, false);
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon(uRL0, "i*u|19nd{>s96'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(835);
      boolean boolean0 = false;
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      intervalCategoryToolTipGenerator0.clone();
      intervalCategoryToolTipGenerator0.equals(lineRenderer3D0);
      lineRenderer3D0.setSeriesToolTipGenerator(835, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.setItemMargin((-741.584866464));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.LineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesFilled(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("eT", 12.0, 12.0, 8.0);
      lineRenderer3D0.removeAnnotation(categoryPointerAnnotation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setDrawLines(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "eT";
      stringArray0[1] = "eT";
      stringArray0[2] = "eT";
      stringArray0[3] = "eT";
      stringArray0[4] = "eT";
      stringArray0[5] = "eT";
      Number[][] numberArray0 = new Number[3][9];
      Number[] numberArray1 = new Number[6];
      numberArray1[0] = (Number) 12.0;
      numberArray1[1] = (Number) 8.0;
      numberArray1[2] = (Number) 5.0;
      numberArray1[3] = (Number) statisticalBarRenderer0.ZERO;
      numberArray1[4] = (Number) 5.0;
      numberArray1[5] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[9];
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      numberArray2[0] = (Number) 0.2;
      numberArray2[1] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray2[2] = (Number) 0.2;
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYIntervalSeriesCollection0);
      // Undeclared exception!
      try { 
        intervalXYDelegate0.getStartX(1649, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1649, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      int int0 = 3;
      int[] intArray0 = new int[0];
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)17;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-897), 3, intArray0, 3, 16777215, bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 0;
      scatterRenderer0.setSeriesShapesFilled(0, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      minMaxCategoryRenderer0.setBaseLegendTextFont(font0);
      scatterRenderer0.equals(minMaxCategoryRenderer0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      standardCategoryItemLabelGenerator0.equals(stackedAreaRenderer0);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Bg", stackedAreaRenderer0.ZERO, 3239.663380972);
      minMaxCategoryRenderer0.equals(categoryTextAnnotation0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      BufferedImage bufferedImage0 = null;
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendTextPaint(0);
      barRenderer0.getPositiveItemLabelPositionFallback();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin((-2014.782012476));
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean0 = false;
      groupedStackedBarRenderer0.setRenderAsPercentages(false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setEndPercent(0.0);
      int int0 = 102;
      String string0 = "Null 'plot' argument.";
      Locale locale0 = Locale.TAIWAN;
      DateFormat dateFormat0 = DateFormat.getTimeInstance(0, locale0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Null 'plot' argument.", dateFormat0);
      ganttRenderer0.setSeriesItemLabelGenerator(102, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = basicTreeUI0.new NodeDimensionsHandler();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      int int1 = (-1);
      boolean boolean1 = true;
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      int int2 = (-411);
      JOptionPane jOptionPane0 = null;
      try {
        jOptionPane0 = new JOptionPane(groupedStackedBarRenderer0, 0, (-411), (Icon) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JOptionPane: option type must be one of JOptionPane.DEFAULT_OPTION, JOptionPane.YES_NO_OPTION, JOptionPane.YES_NO_CANCEL_OPTION or JOptionPane.OK_CANCEL_OPTION
         //
         verifyException("javax.swing.JOptionPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getMaximumBarWidth();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = intervalBarRenderer0.getLegendItemLabelGenerator();
      intervalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.lookupSeriesShape((-3305));
      ganttRenderer0.getEndPercent();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.getIgnoreZeroValues();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object0 = scatterRenderer0.clone();
      boolean boolean1 = statisticalLineAndShapeRenderer0.equals(object0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator((-1336));
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesToolTipGenerator((-1912), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator(0, 0, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-67.013401960962), (-67.013401960962));
      int int0 = stackedBarRenderer3D0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.getShadowYOffset();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalLineAndShapeRenderer0.equals(statisticalBarRenderer0);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      statisticalLineAndShapeRenderer0.getURLGenerator(0, (-1), false);
      statisticalLineAndShapeRenderer0.getBaseItemLabelGenerator();
      statisticalLineAndShapeRenderer0.getLegendItemLabelGenerator();
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot0, false);
      boolean boolean0 = false;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1), 1704, (-1), 1704, 0, 10, false, false, false, false, true, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      waterfallBarRenderer0.clearSeriesPaints(false);
      waterfallBarRenderer0.getShadowsVisible();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      boolean boolean0 = true;
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      ganttRenderer0.setStartPercent(0.0);
      int int0 = 0;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", decimalFormat0);
      statisticalBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      URL uRL0 = MockURL.getFileExample();
      String string0 = "i*u|19nd{\\>s96'\\";
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon(uRL0, "i*u|19nd{>s96'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      GradientPaintTransformType gradientPaintTransformType0 = GradientPaintTransformType.CENTER_HORIZONTAL;
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer(gradientPaintTransformType0);
      standardGradientPaintTransformer0.clone();
      groupedStackedBarRenderer0.setGradientPaintTransformer(standardGradientPaintTransformer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getLegendItem(0, 0);
      boolean boolean0 = false;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 0;
      floatArray0[1] = 0.0F;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", multiplePiePlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(10, (byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getMaximumBarWidth();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0);
      layeredBarRenderer0.getBaseToolTipGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.equals((Object) null);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = 67;
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp((AffineTransform) null, 67);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesShapesVisible(43, true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Month month0 = new Month();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", month0, 2.0, 0.0);
      ganttRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      ganttRenderer0.equals(defaultCategoryItemRenderer0);
      ganttRenderer0.setGradientPaintTransformer((GradientPaintTransformer) null);
      assertEquals(0.0, ganttRenderer0.getMinimumBarLength(), 0.01);
  }
}
