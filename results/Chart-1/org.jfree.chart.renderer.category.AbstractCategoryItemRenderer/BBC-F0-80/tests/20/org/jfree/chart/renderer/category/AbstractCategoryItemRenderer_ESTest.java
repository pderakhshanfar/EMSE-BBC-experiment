/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 14:50:39 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.AffineTransform;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.Instant;
import java.util.Date;
import java.util.Locale;
import java.util.Stack;
import java.util.TimeZone;
import javax.swing.DebugGraphics;
import javax.swing.JLayeredPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.javax.swing.MockDefaultListSelectionModel;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.GradientPaintTransformType;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.SimpleHistogramBin;
import org.jfree.data.time.Day;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesTableModel;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LogAxis logAxis0 = new LogAxis();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Hj1GBN-Gd?i)P@", "X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", 2293.9);
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer1 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer1);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      logAxis0.centerRange((-1506.0));
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 2.0F, (double) 2.0F, (Comparable) 500, (Comparable) 1.0E-8);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      ganttRenderer0.clone();
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      assertNotNull(range0);
      assertEquals(2.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getLegendItem((-2671), 1);
      Number[][] numberArray0 = new Number[6][0];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) areaRenderer0.ZERO;
      numberArray1[1] = (Number) areaRenderer0.ZERO;
      numberArray1[2] = (Number) areaRenderer0.ZERO;
      numberArray1[3] = (Number) areaRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[0];
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[0];
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[1];
      numberArray4[0] = (Number) areaRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[3];
      numberArray5[0] = (Number) areaRenderer0.ZERO;
      numberArray5[1] = (Number) areaRenderer0.ZERO;
      numberArray5[2] = (Number) areaRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[2];
      numberArray6[0] = (Number) areaRenderer0.ZERO;
      numberArray6[1] = (Number) areaRenderer0.ZERO;
      numberArray0[5] = numberArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        areaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, logAxis0, stackedAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE, logAxis0.DEFAULT_AXIS_LABEL_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE, 0.0F);
      LabelBlock labelBlock0 = new LabelBlock("Null 'plot' argument.", logAxis0.DEFAULT_TICK_LABEL_FONT, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1024, 0.2, 2.0F, 0.05);
      stackedAreaRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D_Double0, categoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      defaultTreeSelectionModel0.getLeadSelectionPath();
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(categoryMarker0);
      JTree jTree0 = new JTree(defaultMutableTreeNode0);
      // Undeclared exception!
      try { 
        multiTreeUI0.getPathBounds(jTree0, (TreePath) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Day day0 = new Day();
      Hour hour0 = new Hour(0, day0);
      RegularTimePeriod regularTimePeriod0 = hour0.previous();
      defaultStatisticalCategoryDataset0.add((double) stackedBarRenderer3D0.ZERO, 0.2, (Comparable) stackedBarRenderer3D0.ZERO, (Comparable) regularTimePeriod0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      BarRenderer barRenderer0 = new BarRenderer();
      ganttRenderer0.clone();
      Range range0 = lineAndShapeRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertNotNull(range0);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      stackedBarRenderer3D0.equals(standardEntityCollection0);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedBarRenderer3D0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      stackedBarRenderer3D0.clone();
      boolean boolean0 = false;
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((String) null, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, (Plot) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesURLGenerator(1);
      lineRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity((EntityCollection) null, stackedBarRenderer3D0.DEFAULT_SHAPE, taskSeriesCollection0, 1450, (-10), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1450, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity((EntityCollection) null, defaultCategoryItemRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, 1, 1, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 23, (-1));
      // Undeclared exception!
      try { 
        ganttRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[1][0];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = (Number) 0;
      numberArray1[1] = (Number) 1.0F;
      numberArray1[2] = (Number) 0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, groupedStackedBarRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 0, 0, false);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "n&aiFg:R<y'5");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(jDBCCategoryDataset0, tableOrder0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 90.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset1 = new JDBCCategoryDataset(connection1);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, jDBCCategoryDataset1, 3588, 500, true, 90.0, 0.01, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "X2YD)cB");
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.4);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, jDBCCategoryDataset0, 0, 0, false, 0, 10, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x,M5]4i9", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0, 0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, ".x,M5]4i9");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.2);
      intervalMarker0.setLabel("org.jfree.chart.plot.XYCrosshairState");
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, cyclicNumberAxis0, intervalMarker0, defaultCaret0);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertEquals(4.0, stackedBarRenderer3D1.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      jFreeChart0.setPadding(combinedDomainXYPlot0.DEFAULT_INSETS);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, jFreeChart0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = new Rectangle(15, 10, 15, 10);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      valueMarker0.setLabel("HH:mm");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot1, logAxis0, valueMarker0, rectangle0);
      StatisticalBarRenderer statisticalBarRenderer1 = (StatisticalBarRenderer)statisticalBarRenderer0.clone();
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(0.05, 99.7440989195336, (Comparable) 0.05, (Comparable) true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ganttRenderer1.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      ganttRenderer1.clone();
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer.setDefaultBarPainter(gradientBarPainter0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.equals(ganttRenderer1);
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      assertNotNull(range0);
      assertEquals(99.7940989195336, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getURLGenerator();
      intervalBarRenderer0.setSeriesURLGenerator(45, (CategoryURLGenerator) null, true);
      intervalBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      intervalBarRenderer0.getMinimumBarLength();
      CategoryAxis categoryAxis0 = new CategoryAxis("Not implemented.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-315.7030682), 0.25);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, intervalBarRenderer0);
      intervalBarRenderer0.getRangeAxis(categoryPlot0, 1);
      assertEquals(0.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals((-331.69822161), cyclicNumberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      defaultStatisticalCategoryDataset0.add(0.05, 1282.624, (Comparable) true, (Comparable) true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.clone();
      Range range0 = lineAndShapeRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertEquals(0.05, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.clone();
      lineRenderer3D0.getToolTipGenerator((-4452), 3, true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      assertTrue(levelRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 2.0F, (double) 2.0F, (Comparable) 500, (Comparable) 1.0E-8);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, logAxis0, stackedAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      int int0 = 4752;
      int int1 = 6;
      // Undeclared exception!
      jFreeChart0.createBufferedImage(int0, int0, int1, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(3.0, 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".xa,M5]Yin9", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2677.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1150.66), 0.05);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot1, cyclicNumberAxis0, intervalMarker0, defaultCaret0);
      intervalBarRenderer0.clone();
      // Undeclared exception!
      try { 
        intervalBarRenderer0.getDomainAxis(combinedDomainCategoryPlot1, defaultStatisticalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 2.0F, (double) 2.0F, (Comparable) 500, (Comparable) 1.0E-8);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, logAxis0, stackedAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(52, 500, 1.0E-8, (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE, logAxis0.DEFAULT_AXIS_LABEL_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE, 0.0F);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.setInheritsPopupMenu(true);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      stackedAreaRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D0);
      stackedAreaRenderer0.getLegendItems();
      stackedAreaRenderer0.clone();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      double double0 = waterfallBarRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Number[][] numberArray0 = new Number[1][4];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) 0.05;
      numberArray1[1] = (Number) 0.05;
      numberArray1[2] = (Number) 0.05;
      numberArray1[3] = (Number) 10;
      numberArray1[4] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray1[5] = (Number) 3.0;
      numberArray1[6] = (Number) 1.0F;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesShapesVisible(500, (Boolean) false);
      Range range0 = lineRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      double[][] doubleArray0 = new double[5][9];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray1[1] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray1[2] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray1[3] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray1[4] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray1[5] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray1[6] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray2[2] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = 0.0;
      doubleArray4[1] = 0.0;
      doubleArray4[2] = 0.0;
      doubleArray4[3] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray4[4] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[6];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = 0.0;
      doubleArray5[2] = 2.0;
      doubleArray5[3] = 0.0;
      doubleArray5[4] = 0.0;
      doubleArray5[5] = 0.0;
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO, (Comparable) ganttRenderer0.ZERO, (Comparable) 0.2);
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", ganttRenderer0.ZERO, 0.0);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.createState(plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("", "", "");
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      try { 
        stackedAreaRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x,M5]4i9", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, ".x,M5]4i9");
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(".x,M5]4i9");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(0.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0, 10, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot2, cyclicNumberAxis1, intervalMarker0, defaultCaret0);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertEquals(2.0, stackedBarRenderer3D1.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      groupedStackedBarRenderer0.setSeriesURLGenerator(500, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      CategoryURLGenerator categoryURLGenerator0 = groupedStackedBarRenderer0.getURLGenerator(500, 500, true);
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      lineRenderer3D0.clone();
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineRenderer3D0.getBaseToolTipGenerator();
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesShapesVisible(500, false);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("", decimalFormat0);
      intervalCategoryItemLabelGenerator0.clone();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)lineRenderer3D0.getBaseItemLabelGenerator();
      assertEquals("", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-287.40469871186235), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, (double) 1.0F, (double) 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainXYPlot0);
      double double0 = 0.0;
      JFreeChart jFreeChart2 = null;
      boolean boolean0 = true;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(".x>,M5]Yin9");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(".x>,M5]Yin9");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        intervalBarRenderer0.createHotSpotShape(graphics2D0, defaultCaret0, combinedDomainCategoryPlot0, subCategoryAxis0, logarithmicAxis0, defaultStatisticalCategoryDataset0, 10, 1, true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getStagger();
      BufferedImage bufferedImage0 = new BufferedImage(5, 5, 8);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 10, 1.0F, 0.0F);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, 0.5F, (-1159.96F), 0.0F, 6.0F, 1.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createIntersection(rectangle2D0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawBackground(graphics2D0, (CategoryPlot) null, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      SystemColor systemColor0 = SystemColor.window;
      logAxis0.setTickMarkPaint(systemColor0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      lineRenderer3D0.clone();
      lineRenderer3D0.equals("<KX^\u0004~#");
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineRenderer3D0.getItemLabelGenerator(487, (-647), false);
      assertSame(categoryItemLabelGenerator0, standardCategoryItemLabelGenerator0);
      assertNotNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getURLGenerator();
      intervalBarRenderer0.setSeriesURLGenerator(45, (CategoryURLGenerator) null, true);
      intervalBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      intervalBarRenderer0.getMinimumBarLength();
      CategoryAxis categoryAxis0 = new CategoryAxis("Not implemented.");
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, numberAxis0, intervalBarRenderer0);
      intervalBarRenderer0.getRangeAxis(categoryPlot0, 1);
      assertEquals(0.0, numberAxis0.getUpperBound(), 0.01);
      assertEquals((-331.69822161), numberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      SystemColor systemColor0 = SystemColor.window;
      logAxis0.setTickMarkPaint(systemColor0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("<KX^\u0004~#", numberFormat0, numberFormat0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      lineRenderer3D0.clone();
      boolean boolean0 = lineRenderer3D0.equals("<KX^\u0004~#");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("fY#^z4~#", decimalFormat0, decimalFormat0);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("fY#^z4~#", numberFormat0, numberFormat0);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      Object object0 = lineRenderer3D0.clone();
      boolean boolean0 = lineRenderer3D0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(dateTickUnit0, "%,HW*_5>RFJsDf", "%,HW*_5>RFJsDf");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      timePeriodValuesCollection0.getDomainBounds(true);
      Range range0 = Range.combine((Range) null, logAxis0.DEFAULT_RANGE);
      logAxis0.setRangeWithMargins(range0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("&", "&", 0.05);
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, logAxis0, stackedAreaRenderer0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.getRenderAsPercentages();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      standardEntityCollection0.getEntities();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 43, 43);
      int int0 = (-1784);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, slidingGanttCategoryDataset0, (-1784), 43, false, 43, 43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-345.108580491455), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      NumberAxis numberAxis0 = new NumberAxis();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis0, valueMarker0, rectangle0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.setCrosshairState((CategoryCrosshairState) null);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawVerticalItem(graphics2D0, categoryItemRendererState0, rectangle0, combinedDomainCategoryPlot0, (CategoryAxis) null, numberAxis0, defaultStatisticalCategoryDataset0, 1, 10, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-345.108580491455), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = intervalBarRenderer0.createState(plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      boolean boolean0 = stackedBarRenderer3D0.hitTest((-1.0), 1.0F, graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis3D0, (ValueAxis) null, defaultStatisticalCategoryDataset0, 10, 10, true, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1038.8149536);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.hitTest(0.2, 0, graphics2D0, defaultCaret0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultStatisticalCategoryDataset0, 10, 0, true, categoryStepRenderer_State0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, piePlot3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 3010);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      combinedDomainCategoryPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(90.0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 830.8046779);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, cyclicNumberAxis0, intervalMarker0, defaultCaret0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setWallPaint(piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(":}+dRiu{7gzO6Nf>");
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItem(graphics2D1, categoryItemRendererState0, defaultCaret0, combinedDomainCategoryPlot0, subCategoryAxis0, cyclicNumberAxis0, taskSeriesCollection0, 772, 1852, true, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 772, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      defaultCategoryItemRenderer0.setSeriesURLGenerator(500, (CategoryURLGenerator) standardCategoryURLGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, taskSeriesCollection0, 500, 10, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      combinedDomainCategoryPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      bufferedImage0.createGraphics();
      intervalBarRenderer0.getPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(15);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.2);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, cyclicNumberAxis0, intervalMarker0, defaultCaret0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, (-315.7030682), ".x>,M5]Yin9");
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(1.0E11, (-5056.2821463), graphics2D0, defaultCaret0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultStatisticalCategoryDataset0, 0, 0, false, categoryStepRenderer_State0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 1.0F);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      categoryPlot0.setRangeCrosshairLockedOnData(false);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, true, false, 10, 10, 0.05, 10, plotOrientation0);
      BarRenderer.setDefaultShadowsVisible(true);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      LogAxis logAxis1 = new LogAxis();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, logAxis1, groupedStackedBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(true, 1.0E-8, true, 0.05, jFreeChart0.DEFAULT_BACKGROUND_PAINT, groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(500, 772);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Number[][] numberArray0 = new Number[5][0];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) 1.0F;
      numberArray1[1] = (Number) 1.0F;
      numberArray1[2] = (Number) 1.0F;
      numberArray1[3] = (Number) 1.0F;
      numberArray1[4] = (Number) stackedAreaRenderer0.ZERO;
      numberArray1[5] = (Number) 10;
      numberArray1[6] = (Number) stackedAreaRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[2];
      numberArray2[0] = combinedRangeCategoryPlot0.ZERO;
      numberArray2[1] = (Number) 1.0F;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[1];
      numberArray3[0] = (Number) 1.0F;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[0];
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[5];
      numberArray5[0] = (Number) 10;
      numberArray5[1] = (Number) 1.0F;
      numberArray5[2] = (Number) stackedAreaRenderer0.ZERO;
      numberArray5[3] = (Number) stackedAreaRenderer0.ZERO;
      numberArray5[4] = (Number) 1.0F;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity((EntityCollection) null, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultIntervalCategoryDataset0, 1827, 1827, false, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(1.0E-8, (Comparable) 1.0E-8, (Comparable) true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 500, 500, true, 500, 1.0E-8, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertNull(valueAxis0.getLabelURL());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("uc+3qToFl\")7=Svx3");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      groupedStackedBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.hitTest(0.0, (double) groupedStackedBarRenderer0.ZERO, (Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, categoryAxis3D0, logAxis0, (CategoryDataset) null, 10, 5, true, categoryStepRenderer_State0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0.2);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedAreaRenderer0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2218);
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, true, false, 10, 10, 0.05, 10, plotOrientation0);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(categoryPlot0, 6);
      assertEquals(1.0, valueAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle(10, 10, 10, 10);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer1.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, (Rectangle2D) null, 10, levelRenderer0.DEFAULT_VALUE_LABEL_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      stackedAreaRenderer0.createState((PlotRenderingInfo) null);
      stackedAreaRenderer0.clone();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 6, 10, chartRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Size2D size2D0 = new Size2D(805.812045, 1.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0, 0.0, rectangleAnchor0);
      groupedStackedBarRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0, 399.0, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.RIGHT;
      groupedStackedBarRenderer0.setItemMargin(523.3857018242);
      Rectangle2D rectangle2D1 = combinedDomainXYPlot0.DEFAULT_INSETS.createAdjustedRectangle(rectangle2D0, lengthAdjustmentType0, lengthAdjustmentType0);
      groupedStackedBarRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, rectangle2D1);
      assertTrue(groupedStackedBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      SystemColor systemColor0 = SystemColor.scrollbar;
      statisticalBarRenderer0.setErrorIndicatorPaint(systemColor0);
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart(":Pc5m;r\";aZ}", statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis(",P:&,#");
      Point point0 = new Point();
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D rectangle2D0 = ringPlot0.DEFAULT_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      statisticalBarRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, rectangle2D0, 0.5F, ringPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 2.0F);
      Rectangle2D rectangle2D0 = null;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(3470.70626541085, "pCO[6POaYicyij");
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Graphics2D graphics2D0 = null;
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, (Rectangle2D) null, 3470.70626541085, (Paint) null, cyclicNumberAxis1.DEFAULT_ADVANCE_LINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      String string0 = null;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      LogAxis logAxis0 = new LogAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, subCategoryAxis0, logAxis0, groupedStackedBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(10, 3632, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.initialise(graphics2D0, defaultCaret0, combinedDomainCategoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 2.0F);
      cyclicNumberAxis0.getRange();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedAreaRenderer0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset1 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getLegendItems();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(categoryPlot0, 10);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      areaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      areaRenderer0.clone();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 0.2, 0.0, (-1570.54));
      boolean boolean0 = scatterRenderer0.equals(categoryPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Graphics2D graphics2D0 = null;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clone();
      Layer layer0 = Layer.BACKGROUND;
      LogAxis logAxis0 = new LogAxis();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      JTree jTree0 = new JTree();
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getPathClosestTo(83, 1);
      basicTreeUI0.getPathBounds(jTree0, (TreePath) null);
      plotRenderingInfo0.setPlotArea((Rectangle2D) null);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis3D0, logAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      lineRenderer3D1.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, categoryAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("?tV]7WR", numberFormat0);
      CategoryPlot categoryPlot0 = minMaxCategoryRenderer0.getPlot();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, (ValueAxis) null, rectangle2D0, (-2370.7429354304), categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      areaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      try { 
        areaRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Base item URL generator not cloneable.", stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      stackedAreaRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultCategoryDataset0, 1277, 1, true, 1536.3, (-77.3904), false);
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getMinimumBarLength();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double(0.0, 0.0, (double) levelRenderer0.ZERO, 3.0);
      LogAxis logAxis0 = new LogAxis();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double1, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 6, 10, chartRenderingInfo0);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      bufferedImage1.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation(" Close=", false, 0.5F, (-627.13737421));
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.findRangeBounds((CategoryDataset) null, false);
      intervalBarRenderer0.getMinimumBarLength();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      intervalBarRenderer0.setBaseLegendShape(scatterRenderer0.DEFAULT_SHAPE);
      // Undeclared exception!
      try { 
        intervalBarRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 3, 1, false, 0.0, (double) stackedAreaRenderer0.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".x>,M5]Yin9", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 6, 10, chartRenderingInfo0);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(15, 10, false);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      intervalBarRenderer0.getMinimumBarLength();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.setNoDataMessageFont(statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      levelRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultStatisticalCategoryDataset0, 6, 0, false, 1.0F, 0.0, false);
      assertFalse(levelRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("0");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest((-796.701), 0.05, (Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultKeyedValues2DDataset0, 500, (-2305), true, categoryStepRenderer_State0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":hSAB;$zJznsKBY[0N");
      ValueMarker valueMarker0 = new ValueMarker(10, statisticalBarRenderer0.DEFAULT_PAINT, valueAxis0.DEFAULT_TICK_MARK_STROKE, valueAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot1.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      int[] intArray0 = new int[1];
      intArray0[0] = 3;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      Rectangle rectangle0 = polygon0.getBounds();
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot1, valueAxis0, valueMarker0, rectangle0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, polygon0, defaultKeyedValues2DDataset0, (-2029), 10, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("0");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(0.05, 10, (Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultKeyedValues2DDataset0, 1, 10, true, categoryStepRenderer_State0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double(0.0, 0.0, (double) levelRenderer0.ZERO, 3.0);
      Layer layer0 = Layer.FOREGROUND;
      LogAxis logAxis0 = new LogAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, logAxis0.DEFAULT_TICK_MARK_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDataset();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, logAxis0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      groupedStackedBarRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultIntervalCategoryDataset0, 10, 10, true, 2.0, 0.0, true);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      double double0 = (-212.330517);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Base item URL generator not cloneable.");
      Comparable<ObjectList>[] comparableArray0 = (Comparable<ObjectList>[]) Array.newInstance(Comparable.class, 1);
      Minute.parseMinute("TimePeriodAnchor.END");
      comparableArray0[0] = (Comparable<ObjectList>) null;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, (Number[][]) null, (Number[][]) null);
      boolean boolean0 = false;
      BufferedImage bufferedImage0 = new BufferedImage(3, 59, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(58);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 58, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      intervalBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      intervalBarRenderer0.getMinimumBarLength();
      intervalBarRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.clone();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setFillBox(true);
      assertEquals(0, boxAndWhiskerRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (double) scatterRenderer0.ZERO);
      categoryTextAnnotation0.equals("");
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(2, (-1973), false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesURLGenerator((-1973), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, valueAxis0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryPlot categoryPlot1 = new CategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 3, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      NumberAxis numberAxis0 = new NumberAxis();
      statisticalBarRenderer0.drawRangeLine(graphics2D0, categoryPlot1, numberAxis0, rectangle2D0, 5.0E-8, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot1.DEFAULT_OUTLINE_STROKE);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      assertEquals(0, stackedAreaRenderer1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, valueAxis0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryPlot categoryPlot1 = new CategoryPlot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":hSAB;$zJznsKBY[0N");
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = null;
      int int0 = 3;
      int int1 = 1396;
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      int[] intArray0 = new int[1];
      intArray0[0] = 3;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot1, valueAxis0, valueMarker0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      LogAxis logAxis0 = new LogAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getOrientation();
      DateAxis dateAxis0 = new DateAxis("Null 'stroke' argument.");
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Unknown layer.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      SubCategoryAxis subCategoryAxis1 = new SubCategoryAxis("Null 'stroke' argument.");
      // Undeclared exception!
      try { 
        categoryStepRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, subCategoryAxis1, dateAxis0, defaultStatisticalCategoryDataset0, 47, 6, false, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (double) scatterRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      int int0 = 13;
      scatterRenderer0.setSeriesShapesFilled(13, false);
      BarRenderer.getDefaultShadowsVisible();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int[] intArray0 = new int[6];
      intArray0[0] = 13;
      intArray0[1] = 13;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 13;
      intArray0[5] = 13;
      int int1 = 51;
      BigInteger bigInteger0 = BigInteger.TEN;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(13, 1, intArray0, 51, 13, bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // transferType must be eitherDataBuffer.TYPE_BYTE or DataBuffer.TYPE_USHORT
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((-315.7030682), 0.2, (Comparable) 0.2, (Comparable) 0.2);
      intervalBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      intervalBarRenderer0.getMinimumBarLength();
      Class<IntervalMarker> class0 = IntervalMarker.class;
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      PeriodAxisLabelInfo periodAxisLabelInfo0 = new PeriodAxisLabelInfo(class0, dateFormat0);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("O)I(leg] Q\"Gz'{xl6", zoneInfo0);
      DateTickUnit dateTickUnit0 = dateAxis0.getTickUnit();
      Date date0 = dateTickUnit0.rollDate(dateAxis0.DEFAULT_ANCHOR_DATE, (TimeZone) zoneInfo0);
      Locale locale0 = Locale.JAPANESE;
      periodAxisLabelInfo0.createInstance(date0, zoneInfo0, locale0);
      Year year0 = new Year(date0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle rectangle0 = new Rectangle((-2873), (-9999), (-9999), 9999);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createIntersection(rectangle2D0);
      DateAxis dateAxis1 = new DateAxis("O)I(leg] Q\"Gz'{xl6", zoneInfo0, locale0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis1);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        intervalBarRenderer0.getItemMiddle((Comparable) null, year0, defaultStatisticalCategoryDataset0, categoryAxis3D0, rectangle2D1, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertNotNull(valueAxis0);
      
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, valueAxis0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryPlot categoryPlot1 = new CategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3306, 10, 3, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      statisticalBarRenderer0.drawRangeLine(graphics2D0, categoryPlot0, valueAxis0, rectangle2D0, 0.0, categoryPlot1.DEFAULT_OUTLINE_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      statisticalBarRenderer0.getPlot();
      int int0 = statisticalBarRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Layer layer0 = Layer.FOREGROUND;
      LogAxis logAxis0 = new LogAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, logAxis0.DEFAULT_TICK_MARK_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        statisticalBarRenderer1.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, logAxis0, rectangle2D_Double1, 0.0, logAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      LogAxis logAxis0 = new LogAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 10, 500);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.findRangeBounds((CategoryDataset) slidingCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      LogAxis logAxis0 = new LogAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double1, combinedRangeCategoryPlot0, (CategoryAxis) null, logAxis0, defaultIntervalCategoryDataset0, 5, 10, false, categoryStepRenderer_State0, rectangle2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Y-Tqvpq\"jF7~`q-", scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (double) scatterRenderer0.ZERO, "Y-Tqvpq\"jF7~`q-");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(31, (-935));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 65, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1256.4525798562), (-1310.59287), (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      minMaxCategoryRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(65, 65);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      LogAxis logAxis0 = new LogAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(500, groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_STROKE);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      statisticalBarRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, logAxis0, rectangle2D_Double1, (-1675.1), scatterRenderer0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_STROKE);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      statisticalBarRenderer0.getPlot();
      int int0 = statisticalBarRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-548.454F), 0.0F, 1.0F, (-1546.2F));
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createUnion(rectangle2D_Float1);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis("E");
      NumberAxis numberAxis0 = new NumberAxis("3 2,{Kx`N/=_((>) G");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1.0, 500);
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis0, barRenderer3D0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 32);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.createHotSpotBounds(graphics2D0, rectangle2D0, categoryPlot0, categoryAxis3D0, dateAxis0, defaultKeyedValues2DDataset0, 1616, 7, true, (CategoryItemRendererState) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("6;T;\"n!=:Mi%a|[", "6;T;\"n!=:Mi%a|[", 0.0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesURLGenerator((-1015), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      BufferedImage bufferedImage0 = new BufferedImage(3, 1, 3);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-1.0F), 411.8506F, 411.8506F, 351.8F);
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      rectangle2D_Float0.createUnion(rectangle2D_Float1);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis("x9U>q:7w{odbY03RLj");
      dateAxis0.setVerticalTickLabels(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, (ValueAxis) null, groupedStackedBarRenderer0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor.coordinates(rectangle2D_Double0, rectangleAnchor0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float1, dateAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      statisticalBarRenderer0.getShadowYOffset();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setLastBarPaint(groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, valueAxis0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      thermometerPlot1.setSubrangePaint(1, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT);
      thermometerPlot0.getOrientation();
      CategoryPlot categoryPlot1 = stackedAreaRenderer0.getPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryAxis3D0.DEFAULT_TICK_LABEL_FONT, categoryPlot1, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2, 0, 146, 3, 1539, 10, true, true, true, false, true, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.calculateBarL0L1(10, 1.0F, 2);
      stackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      stackedAreaRenderer0.getLegendItems();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getToolTipGenerator();
      stackedBarRenderer0.setSeriesToolTipGenerator(500, (CategoryToolTipGenerator) null, false);
      stackedBarRenderer0.getGradientPaintTransformer();
      stackedAreaRenderer0.equals(defaultValueDataset0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      assertEquals(2.0, categoryStepRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DateAxis dateAxis0 = new DateAxis("");
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, dateAxis0, intervalBarRenderer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      Point point0 = new Point((-1775), 5);
      Point point1 = new Point(point0);
      Line2D.Float line2D_Float0 = new Line2D.Float(point1, point1);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangleInsets0.createOutsetRectangle(rectangle2D0, false, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = intervalBarRenderer0.createState(plotRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D2 = chartPanel0.getScreenDataArea();
      statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D1, categoryPlot0, categoryAxis0, dateAxis0, defaultStatisticalCategoryDataset0, 2657, 10, true, categoryItemRendererState0, rectangle2D2);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle2D1, categoryPlot0, categoryAxis0, dateAxis0, defaultStatisticalCategoryDataset0, 5, 5, false, 768);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 65, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      BufferedImage bufferedImage0 = new BufferedImage(6, 6, 3);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(3, 3, 65, (-1.0F));
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      rectangle2D_Float0.createUnion(rectangle2D_Float1);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis("E");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, dateAxis0, stackedAreaRenderer0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      double double0 = statisticalBarRenderer0.getShadowYOffset();
      assertEquals(4.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      statisticalLineAndShapeRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("w'`");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, (ValueAxis) null, statisticalLineAndShapeRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      stackedAreaRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0.0, statisticalLineAndShapeRenderer0.ZERO, 500, 2549, 0.0, 2, plotOrientation0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      LogAxis logAxis0 = new LogAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
      try { 
        statisticalBarRenderer1.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType1, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = 65;
      statisticalBarRenderer0.getItemLabelGenerator(65, 65, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      double double0 = 0.0;
      int int1 = 6;
      int int2 = 3;
      BufferedImage bufferedImage0 = new BufferedImage(6, 6, 3);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryItemRendererState categoryItemRendererState0 = null;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(3, 3, 65, (-1.0F));
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createUnion(rectangle2D_Float1);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis("E");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, dateAxis0, stackedAreaRenderer0);
      // Undeclared exception!
      try { 
        levelRenderer0.createHotSpotBounds(graphics2D0, rectangle2D0, categoryPlot0, categoryAxis3D0, dateAxis0, defaultBoxAndWhiskerCategoryDataset0, 1, 5, true, (CategoryItemRendererState) null, rectangle2D_Float1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      LogAxis logAxis0 = new LogAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getOrientation();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getCompletePaint();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(5, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, intervalBarRenderer0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, ganttRenderer0.DEFAULT_STROKE, 0.0F);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawDomainMarker((Graphics2D) null, (CategoryPlot) null, categoryAxis0, categoryMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 7);
      assertNotNull(valueAxis0);
      
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, valueAxis0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(thermometerPlot0.ZERO);
      combinedRangeCategoryPlot0.setInsets(valueAxis0.DEFAULT_TICK_LABEL_INSETS, false);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      thermometerPlot1.setSubrangePaint(2, valueAxis0.DEFAULT_TICK_LABEL_PAINT);
      thermometerPlot1.getOrientation();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedAreaRenderer0.getLegendItems();
      int int0 = stackedBarRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      LogAxis logAxis0 = new LogAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      CategoryAxis categoryAxis0 = null;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      int int0 = (-457);
      boolean boolean0 = false;
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-457), 0, 0, 0, (-1373), 6, true, true, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LogAxis logAxis0 = new LogAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, stackedAreaRenderer0.DEFAULT_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(">_", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 4079, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, logAxis0.DEFAULT_RANGE);
      statisticalBarRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, moduloAxis0, (Rectangle2D) null, 5, moduloAxis0.DEFAULT_AXIS_LINE_PAINT, moduloAxis0.DEFAULT_TICK_MARK_STROKE);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      statisticalBarRenderer0.getPlot();
      intervalBarRenderer0.getMinimumBarLength();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Locale locale0 = Locale.JAPAN;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", locale0);
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("Null 'annotation' argument.", numberFormat0);
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      statisticalBarRenderer0.getItemLabelGenerator(65, 65, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double double0 = LineRenderer3D.DEFAULT_X_OFFSET;
      statisticalBarRenderer0.getColumnCount();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "Null 'annotation' argument.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 65, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      Number[][] numberArray0 = new Number[6][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      cyclicXYItemRenderer0.getSeriesShapesFilled((-4360));
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(65, (Boolean) null);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setLastBarPaint(cyclicXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      chartRenderingInfo0.clone();
      Layer layer0 = Layer.BACKGROUND;
      LogAxis logAxis0 = new LogAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(true, logAxis0.DEFAULT_TICK_LABEL_PAINT, groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryMarker0.equals(categoryStepRenderer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, defaultCaret0, rectangle2D_Double0, logAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawDomainMarker((Graphics2D) null, (CategoryPlot) null, (CategoryAxis) null, categoryMarker0, rectangle2D_Double1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Z3`6: #&9l2?w$q");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Object object0 = lineRenderer3D0.clone();
      boolean boolean0 = lineRenderer3D0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      Graphics2D graphics2D0 = null;
      BarRenderer barRenderer0 = new BarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.2, (double) statisticalLineAndShapeRenderer0.ZERO, 0.0, 0.2);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle2D_Double0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 7);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, valueAxis0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) stackedAreaRenderer0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.setInsets(categoryPlot0.DEFAULT_INSETS);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "DK-R%Tx0-izPJT");
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, ((NumberAxis) valueAxis0).DEFAULT_TICK_UNIT, 1, 1, (-2.068549151823802), 0, plotOrientation0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      JFreeChart jFreeChart0 = new JFreeChart(">yYhh&%^7~", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 1, (double) 1.0F, 285.22563175, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      TimeSeries timeSeries0 = new TimeSeries(false);
      TimeSeriesTableModel timeSeriesTableModel0 = new TimeSeriesTableModel(timeSeries0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      MockDefaultListSelectionModel mockDefaultListSelectionModel0 = new MockDefaultListSelectionModel();
      JTable jTable0 = new JTable(timeSeriesTableModel0, defaultTableColumnModel0, mockDefaultListSelectionModel0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(3);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle0, combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = chartPanel0.getLocation();
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LabelBlock labelBlock0 = new LabelBlock("gxsHk^(L", jFreeChart0.DEFAULT_TITLE_FONT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("PRINT");
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawHorizontalItem((Graphics2D) null, (CategoryItemRendererState) null, rectangle2D0, categoryPlot0, categoryAxis3D0, (ValueAxis) null, defaultBoxAndWhiskerCategoryDataset0, 10, (-1668), false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[6][9];
      Number[] numberArray1 = new Number[9];
      numberArray1[2] = (Number) 0.2;
      numberArray1[5] = (Number) 0.2;
      numberArray1[7] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[8] = (Number) 3.0;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      defaultIntervalCategoryDataset0.indexOf(0.2);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      double double0 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("IB1w|RU6o", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 82, 6, chartRenderingInfo0);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setItemMargin((double) statisticalBarRenderer0.ZERO);
      groupedStackedBarRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, defaultCaret0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("IB1w|RU6o");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "IB1w|RU6o");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) (-1));
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise(graphics2D0, defaultCaret0, categoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      statisticalBarRenderer0.calculateBarW0(categoryPlot0, plotOrientation0, defaultCaret0, subCategoryAxis0, categoryItemRendererState0, 15, 0);
      assertEquals(9, statisticalBarRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      levelRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      int int0 = 9;
      BufferedImage bufferedImage0 = new BufferedImage(10, 9, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      int int1 = 4;
      boolean boolean0 = false;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise(graphics2D0, defaultCaret0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(65, "org.jfree.chart.urls.StandardXYURLGenerator");
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(defaultCaret0);
      Layer layer1 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, (CategoryAxis) null, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      Color color0 = defaultStyledDocument0.getForeground(styleContext_NamedStyle0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0, 2.0F, color0, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("TY86B@ER}H`cp2?");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "Z&_yo)l");
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      groupedStackedBarRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(481.6, "org.jfree.chart.urls.StandardXYURLGenerator");
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(defaultCaret0);
      Layer layer1 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.drawAnnotations((Graphics2D) null, rectangle2D0, (CategoryAxis) null, cyclicNumberAxis0, layer1, plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0, 1.0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("TY86B@ER}H`cp2?");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) groupedStackedBarRenderer0.ZERO, "TY86B@ER}H`cp2?");
      String string0 = "";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "Z&_yol";
      stringArray0[2] = "";
      stringArray0[3] = "Z&_yol";
      stringArray0[4] = ") < domainValueStart (";
      stringArray0[5] = "Z&_yol";
      stringArray0[6] = "Z&_yol";
      stringArray0[7] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      Paint paint0 = symbolAxis0.getGridBandAlternatePaint();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, (Rectangle2D) null, 1.0E11, paint0, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(481.6, "org.jfree.chart.urls.StandardXYURLGenerator");
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(defaultCaret0);
      Layer layer1 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.drawAnnotations((Graphics2D) null, rectangle2D0, (CategoryAxis) null, cyclicNumberAxis0, layer1, plotRenderingInfo0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F);
      Layer layer2 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Stack<CategoryPointerAnnotation> stack0 = new Stack<CategoryPointerAnnotation>();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToRangeAxes(0, stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = 0;
      Layer layer0 = Layer.FOREGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("TY86B@ER}H`cp2?");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, defaultCaret0, defaultCaret0, categoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      groupedStackedBarRenderer0.setItemMargin(0.05);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("TY86B@ER}H`cp2?");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "Z&_yo)l");
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, (Rectangle2D) null, 805.812045, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, (CategoryAxis) null, valueAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
      DrawingSupplier drawingSupplier0 = stackedAreaRenderer0.getDrawingSupplier();
      combinedRangeCategoryPlot0.setDrawingSupplier(drawingSupplier0);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(valueAxis0);
      CategoryAxis categoryAxis1 = new CategoryAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedRangeCategoryPlot1.DEFAULT_OUTLINE_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      double[][] doubleArray0 = new double[1][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 10;
      doubleArray1[1] = (double) 10;
      doubleArray1[2] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double(1.0F, (-1.0), 449.2223166307845, (-1.0));
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.2, 0.0F, 1.0F, 1.0F);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot1, subCategoryAxis0, numberAxis0, defaultIntervalCategoryDataset0, 10, 100, true, categoryItemRendererState0, rectangle2D_Double0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 100
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, valueAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      Paint paint0 = candlestickRenderer0.getBaseFillPaint();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10, 704.58687781509, 10, (-1368.357), paint0, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      minMaxCategoryRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      minMaxCategoryRenderer0.getLegendItem(0, 0);
      minMaxCategoryRenderer0.getObjectIcon();
      // Undeclared exception!
      try { 
        defaultKeyedValues2DDataset0.setSelected(0, (-1809), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("TY86B@ER}H`cp2?");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "Z&_yo)l");
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      groupedStackedBarRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      CategoryMarker categoryMarker0 = new CategoryMarker(3.0);
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.removeDomainMarker(4434, (Marker) categoryMarker0, layer1);
      combinedDomainCategoryPlot0.getOrientation();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      groupedStackedBarRenderer0.setItemMargin(0.05);
      assertTrue(groupedStackedBarRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      String string0 = "Null 'labelFormat' argument.";
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'labelFormat' argument.", categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, 0.0, (-1183.49715), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0);
      Rectangle rectangle0 = new Rectangle(15, 15, 10, 5);
      Rectangle rectangle1 = debugGraphics0.getClipBounds(rectangle0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, rectangle1, categoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, (CategoryAxis) null, valueAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1.0));
      defaultValueDataset0.validateObject();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset(1.0E-8);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset1);
      thermometerPlot1.getOrientation();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 2, 10, 1, 10, 0, 0.0, plotOrientation0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getLegendItem(7, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = (-1930);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesItemLabelGenerator((-1930), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("6;T;\"n!=:Mi%a|[", 0.2, 1.0F);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      // Undeclared exception!
      try { 
        levelRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.lookupSeriesPaint(61);
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      jFreeChart0.getLegend(0);
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.2, 4.0, 0.0F, 0.4);
      IntervalMarker intervalMarker0 = new IntervalMarker((-3346.0), 1717.847443115138);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, (CategoryAxis) null, valueAxis0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1.0));
      defaultValueDataset0.clone();
      defaultValueDataset0.validateObject();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset(1.0E-8);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset1);
      thermometerPlot1.getOrientation();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 2, 10, 1, 10, 0, 28.528909367134567, plotOrientation0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.findRangeBounds((CategoryDataset) null);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getLegendItem(244, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.equals(stackedAreaRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      stackedAreaRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryDataset categoryDataset0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, (CategoryAxis) null, valueAxis0, stackedAreaRenderer0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      defaultValueDataset0.validateObject();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset(1.0E-8);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset1);
      thermometerPlot1.getOrientation();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("`uW");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) null, true);
      ModuloAxis moduloAxis0 = new ModuloAxis("", (Range) null);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      minMaxCategoryRenderer0.getLegendItem(1, (-2805));
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.lookupSeriesPaint(151);
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = categoryPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) defaultCaret0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, defaultCaret0, categoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-8.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = chartPanel0.getLocation();
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LabelBlock labelBlock0 = new LabelBlock("gxsHk^(L", jFreeChart0.DEFAULT_TITLE_FONT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setTickMarkStroke(minMaxCategoryRenderer0.DEFAULT_STROKE);
      categoryAxis0.setLowerMargin((double) barRenderer0.ZERO);
      barRenderer0.calculateSeriesWidth(617.445, categoryAxis0, 1, 1);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMedianVisible();
      minMaxCategoryRenderer0.getLegendItem(1, (-2805));
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      lineAndShapeRenderer0.getItemShapeFilled((-2737), (-1609));
      minMaxCategoryRenderer0.getGroupStroke();
      int int0 = lineAndShapeRenderer0.getColumnCount();
      assertEquals(0, int0);
      
      boxAndWhiskerRenderer0.setFillBox(true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1725.9824, 463.08375, false);
      stackedBarRenderer3D0.getXOffset();
      assertEquals(0, stackedBarRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot1, (CategoryDataset) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 2.0F, 0.05, 2000.0, (-1678), 2, 0, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      layeredBarRenderer0.setBaseLegendShape(rectangle2D0);
      layeredBarRenderer0.getSeriesBarWidth(46);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.equals(chartRenderingInfo0);
      defaultCategoryItemRenderer0.setSeriesShapesFilled(83, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      minMaxCategoryRenderer0.getLegendItemToolTipGenerator();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("%Ao}J0c");
      double[][] doubleArray0 = new double[3][7];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) defaultCategoryItemRenderer0.ZERO;
      doubleArray1[1] = 3.0;
      doubleArray1[2] = (double) 46;
      doubleArray1[3] = (double) 0.0F;
      doubleArray1[4] = (double) 0.0F;
      doubleArray1[5] = Double.NaN;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = Double.NaN;
      doubleArray2[1] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[2] = 0.2;
      doubleArray2[3] = 3.0;
      doubleArray2[4] = (double) 500;
      doubleArray2[5] = 0.2;
      doubleArray2[6] = (double) 1.0F;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo1);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, extendedCategoryAxis0, numberAxis3D0, defaultIntervalCategoryDataset0, 46, 10, true, categoryItemRendererState0, rectangle2D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("J+Fo>3reN+'*+!kHwx", spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      groupedStackedBarRenderer0.getPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1598.465);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, (CategoryPlot) null, cyclicNumberAxis0, intervalMarker0, rectangle2D0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      boolean boolean0 = statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      int int0 = 151;
      groupedStackedBarRenderer0.lookupSeriesPaint(151);
      CategoryDataset categoryDataset0 = null;
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getOrientation();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getItemMiddle(3.0, 0.2, (CategoryDataset) null, categoryAxis0, defaultCaret0, (RectangleEdge) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("6;T;\"n!=:Mi%a|[", 0.2, 1.0F);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      levelRenderer0.removeAnnotations();
      assertTrue(levelRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      GeneralPath generalPath0 = new GeneralPath(groupedStackedBarRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("J+Fo>3reN+'*+!kHwx", spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      groupedStackedBarRenderer0.getPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1598.465);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 4415.7);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawRangeMarker(graphics2D0, (CategoryPlot) null, cyclicNumberAxis0, intervalMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[6][9];
      Number[] numberArray1 = new Number[9];
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) 0.2;
      numberArray1[7] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[8] = (Number) 3.0;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      defaultIntervalCategoryDataset0.indexOf(0.2);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer1.findRangeBounds(defaultIntervalCategoryDataset0);
      double double0 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("IB1w|RU6o", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 82, 6, chartRenderingInfo0);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      bufferedImage1.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1.0F, 0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage1);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        barRenderer3D0.initialise(graphics2D0, defaultCaret0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getMaximumBarWidth();
      intervalBarRenderer0.getSeriesItemLabelGenerator(3077);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getUseFillPaint();
      Graphics2D graphics2D0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.0, (double) lineRenderer3D0.ZERO);
      JFreeChart jFreeChart0 = new JFreeChart("br{JrM[2.WPKt[86", categoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      // Undeclared exception!
      try { 
        affineTransformOp0.getBounds2D((Raster) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[6][9];
      Number[] numberArray1 = new Number[9];
      numberArray1[3] = (Number) 0.2;
      numberArray1[4] = (Number) 3.0;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) 0.2;
      numberArray1[7] = (Number) 3.0;
      NumberAxis numberAxis0 = new NumberAxis("?");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, levelRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberArray1[6]);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      Rectangle rectangle0 = chartPanel0.getBounds();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawDomainMarker((Graphics2D) null, combinedRangeCategoryPlot0, categoryAxis0, categoryMarker0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot1, (CategoryDataset) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      stackedAreaRenderer0.getSeriesURLGenerator((-3932));
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      statisticalBarRenderer0.getLegendItem(0, 2720);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1.0), (-1.0), true);
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(1031.343F, 2, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(1334, 0, 0.0, (double) 0, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (1334) and height (0) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Boolean boolean0 = new Boolean(true);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      stackedBarRenderer3D0.getBarPainter();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setBaseLegendTextFont(lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT);
      stackedBarRenderer0.calculateBarL0L1(6.0, 837.67603884, (-0.051979341454560575));
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getLegendItems();
      int int0 = stackedBarRenderer3D0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0, false);
      stackedBarRenderer3D0.getIncludeBaseInRange();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      BarPainter barPainter0 = stackedBarRenderer3D0.getBarPainter();
      stackedBarRenderer3D0.setBarPainter(barPainter0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItem(296, 0);
      CompassPlot compassPlot0 = new CompassPlot((ValueDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'serialDate' argument.", compassPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(7, 372, (double) 7, (double) lineAndShapeRenderer0.ZERO, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, compassPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      GeneralPath generalPath0 = new GeneralPath(stackedBarRenderer3D0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, cyclicNumberAxis0, categoryMarker0, rectangle2D0);
      assertFalse(categoryPlot0.isDomainPannable());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, (CategoryAxis) null, valueAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1.0));
      defaultValueDataset0.validateObject();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset(1.0E-8);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset1);
      thermometerPlot1.getOrientation();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.calculateBarL0L1(1.0F, 4.0, 4.0);
      LegendItemCollection legendItemCollection0 = stackedAreaRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[] numberArray0 = new Number[9];
      numberArray0[2] = (Number) 0.2;
      numberArray0[3] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray0[4] = (Number) 3.0;
      numberArray0[5] = (Number) 0.2;
      BarPainter barPainter0 = statisticalBarRenderer0.getBarPainter();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (-1.0));
      stackedBarRenderer3D0.setBarPainter(barPainter0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, rectangle2D0, defaultMultiValueCategoryDataset0, (-1591), (-1591), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(80);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Point point0 = new Point(413, 80);
      Dimension dimension0 = new Dimension(3, 3);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      rectangle2D_Double0.createUnion(rectangle0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3, (-3299.0));
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      stackedBarRenderer3D1.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      boolean boolean0 = stackedBarRenderer3D1.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
      
      int int0 = stackedBarRenderer3D0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, (CategoryAxis) null, valueAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1.0));
      defaultValueDataset0.validateObject();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset(1.0E-8);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset1);
      thermometerPlot1.getOrientation();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 2, 10, 1, 10, 0, 0.0, plotOrientation0);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      GradientPaintTransformer gradientPaintTransformer0 = intervalBarRenderer0.getGradientPaintTransformer();
      intervalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      assertTrue(intervalBarRenderer0.getDefaultShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.calculateBarL0L1(10, 1.0F, 2);
      stackedAreaRenderer0.getLegendItems();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getToolTipGenerator();
      stackedBarRenderer0.setSeriesToolTipGenerator(500, (CategoryToolTipGenerator) null, false);
      GradientPaintTransformer gradientPaintTransformer0 = stackedBarRenderer0.getGradientPaintTransformer();
      assertNotNull(gradientPaintTransformer0);
      
      boolean boolean0 = stackedAreaRenderer0.equals(defaultValueDataset0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      multiplePiePlot0.getPieChart();
      stackedBarRenderer3D0.setSeriesToolTipGenerator(3, (CategoryToolTipGenerator) null, true);
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StackedBarRenderer stackedBarRenderer1 = new StackedBarRenderer(true);
      stackedBarRenderer1.calculateBarL0L1((-1.0), (double) scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getLegendItems();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot();
      spiderWebPlot1.getToolTipGenerator();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.setSeriesToolTipGenerator((-2351), (CategoryToolTipGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 0, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[6][9];
      Number[] numberArray1 = new Number[9];
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[4] = (Number) 3.0;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) 0.2;
      numberArray1[7] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[8] = (Number) 3.0;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      defaultIntervalCategoryDataset0.indexOf(0.2);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer1.findRangeBounds(defaultIntervalCategoryDataset0);
      levelRenderer0.getItemMargin();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("IB1w|RU6o", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 82, 6, chartRenderingInfo0);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      CategoryAxis categoryAxis0 = new CategoryAxis("IB1w|RU6o");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalLineAndShapeRenderer1.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, defaultCaret0, defaultCaret0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-8.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setSeriesToolTipGenerator(3, (CategoryToolTipGenerator) null);
      StackedBarRenderer stackedBarRenderer1 = new StackedBarRenderer(true);
      stackedBarRenderer1.calculateBarL0L1(0.2, 331.00858, 3.0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getLegendItems();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("8rhAUT[*BPziV", statisticalBarRenderer0.ZERO, (-9.0));
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      levelRenderer0.setItemMargin(3.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      areaRenderer0.setPlot(combinedDomainCategoryPlot0);
      assertFalse(combinedDomainCategoryPlot0.isRangePannable());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(80);
      minMaxCategoryRenderer0.setDrawLines(false);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Invalid sql generated.  PieDataSet requires 2 columns only", minMaxCategoryRenderer0.ZERO, (-3299.0));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
      
      int int0 = stackedBarRenderer3D0.getColumnCount();
      assertEquals(0, int0);
      
      stackedBarRenderer3D0.getLegendItem(6, 6);
      assertEquals(0, stackedBarRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 1864;
      scatterRenderer0.getLegendItem(1864, 3580);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.setSeriesToolTipGenerator(1864, (CategoryToolTipGenerator) null);
      StackedBarRenderer stackedBarRenderer1 = new StackedBarRenderer(false);
      stackedBarRenderer0.calculateBarL0L1(0.2, 0.0, 3.0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getLegendItems();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("8rhAUT[*BPziV", "8rhAUT[*BPziV", (-1129.47302981485));
      // Undeclared exception!
      try { 
        levelRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(10, (-371), true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      boolean boolean0 = true;
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      String string0 = "";
      SimpleHistogramBin simpleHistogramBin0 = null;
      try {
        simpleHistogramBin0 = new SimpleHistogramBin(3.0, 2.0F, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid bounds; 3.0 to 2.0
         //
         verifyException("org.jfree.data.statistics.SimpleHistogramBin", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(80);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Point point0 = new Point(413, 80);
      Dimension dimension0 = new Dimension(3, 3);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      stackedBarRenderer3D0.createState(plotRenderingInfo1);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LogAxis logAxis0 = new LogAxis("rn6p\"b4[f^M,");
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(1.0F, 804.7552539329, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE, (-1330.0F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(80);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      minMaxCategoryRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      ValueAxis valueAxis0 = minMaxCategoryRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1139);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, valueAxis0, minMaxCategoryRenderer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 2.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, true, 0.05, 0.0, 51, 1.0E10, 0.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      boolean boolean0 = true;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      int int0 = (-3197);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesToolTipGenerator((-3197), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      scatterRenderer0.setAutoPopulateSeriesShape(false);
      scatterRenderer0.getSeriesToolTipGenerator(2547);
      boolean boolean0 = false;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      String string0 = "\\)(~l";
      // Undeclared exception!
      try { 
        Date.from((Instant) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Date", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getPlot();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getDomainAxis((CategoryPlot) null, (CategoryDataset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-4840.7129), (double) scatterRenderer0.ZERO);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedBarRenderer3D0);
      stackedBarRenderer3D0.getRangeAxis(categoryPlot0, 0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot1, defaultKeyedValues2DDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemLabelGenerator(500, 2073, false);
      stackedAreaRenderer0.clone();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(985, axisLocation0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      stackedBarRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, true);
      Range range0 = stackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(80);
      minMaxCategoryRenderer0.setDrawLines(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      multiplePiePlot0.getPieChart();
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset(863.137138528);
      defaultValueDataset1.hasListener(multiplePiePlot0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset1);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setSeriesToolTipGenerator(2, (CategoryToolTipGenerator) null);
      stackedBarRenderer0.calculateBarL0L1(0, 4767.31801496, 331.00858);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getLegendItems();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("8rhAUT[*BPziV", 15, (double) statisticalBarRenderer0.ZERO);
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      levelRenderer0.setItemMargin(10);
      assertEquals(0, levelRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Paint paint0 = candlestickRenderer0.getUpPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, candlestickRenderer0.DEFAULT_VALUE_LABEL_PAINT, candlestickRenderer0.DEFAULT_VALUE_LABEL_PAINT, candlestickRenderer0.DEFAULT_PAINT);
      waterfallBarRenderer0.getDrawingSupplier();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMeanVisible();
      boxAndWhiskerRenderer0.getPlot();
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0);
      DecimalFormat decimalFormat0 = jSpinner_NumberEditor0.getFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("_yY;?[^ac}z9bY", decimalFormat0);
      waterfallBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.clone();
      int int0 = 6;
      String string0 = "u+YN+n";
      int int1 = 4;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.getBaseItemLabelGenerator();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      int int2 = 1956;
      Locale locale0 = Locale.UK;
      // Undeclared exception!
      try { 
        MockDateFormat.getDateTimeInstance(4, 1956, locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal time style 1956
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.hashCode();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot1, (CategoryDataset) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.calculateBarL0L1(10, 1.0F, 2);
      LegendItemCollection legendItemCollection0 = stackedAreaRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      defaultValueDataset0.hasListener(jFreeChart0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setSeriesToolTipGenerator(5, (CategoryToolTipGenerator) null);
      stackedBarRenderer0.calculateBarL0L1((-2705.7664362), 0.0, 0.0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getLegendItems();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(936.9453815735);
      assertEquals(1.0, levelRenderer0.getMaximumItemWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0, 0.2);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = (-7);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 6, (-7));
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(slidingGanttCategoryDataset0, (-59), 4);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 82);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.getOrientation();
      boolean boolean0 = false;
      statisticalBarRenderer0.getSeriesURLGenerator(0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setSeriesURLGenerator((-1108), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainAxis((CategoryAxis) categoryAxis3D0);
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot1, (CategoryDataset) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.calculateBarL0L1(10, 1.0F, 2);
      LegendItemCollection legendItemCollection0 = stackedAreaRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("1;B`%2T-bLBWnihG^_G", dateFormat0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = (-5977);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 65, (-5977));
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("{2}");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) statisticalBarRenderer0.ZERO, (-5977), " n");
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, levelRenderer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getDomainAxis(categoryPlot0, taskSeriesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      minMaxCategoryRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "w~49C^9J?e";
      stringArray0[1] = "|1TqHJzMa?'-\"=M5G";
      String string0 = "lRHSx1k";
      stackedAreaRenderer0.getURLGenerator(500, 500, false);
      minMaxCategoryRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) null);
      stringArray0[2] = "lRHSx1k";
      Number[][] numberArray0 = new Number[1][5];
      Number[] numberArray1 = new Number[3];
      BigInteger bigInteger0 = BigInteger.ZERO;
      numberArray1[0] = (Number) bigInteger0;
      numberArray1[1] = (Number) 10;
      numberArray1[2] = (Number) 0.05;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 3);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      multiplePiePlot0.getPieChart();
      LegendItem legendItem0 = scatterRenderer0.getLegendItem(15, 15);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryDataset categoryDataset0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot1, (CategoryDataset) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      int int0 = 72;
      int int1 = (-343);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, (CategoryDataset) null, 72, (-343), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(80);
      minMaxCategoryRenderer0.setDrawLines(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Point point0 = new Point(413, 80);
      Dimension dimension0 = new Dimension(3, 3);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(rectangle0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, (CategoryPlot) null, defaultKeyedValues2DDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      stackedAreaRenderer0.getPassCount();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Number[][] numberArray0 = new Number[6][9];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) 0.05;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[9];
      double double0 = BarRenderer3D.DEFAULT_Y_OFFSET;
      numberArray2[0] = (Number) 8.0;
      numberArray2[1] = (Number) 0.05;
      numberArray2[2] = (Number) 10;
      numberArray2[3] = (Number) 0.0F;
      numberArray2[4] = (Number) 2.0F;
      numberArray2[5] = (Number) 500;
      numberArray2[6] = (Number) 2.0F;
      numberArray2[7] = (Number) 500;
      numberArray2[8] = combinedRangeCategoryPlot0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[1];
      numberArray3[0] = (Number) 1.0F;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) stackedAreaRenderer0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      stackedAreaRenderer1.updateCrosshairValues((CategoryCrosshairState) null, 10, false, 3, 743, (-3556.3334497949586), 207.74203, plotOrientation0);
      assertNotSame(stackedAreaRenderer0, stackedAreaRenderer1);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[6][9];
      Number[] numberArray1 = new Number[9];
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) 0.2;
      numberArray1[4] = (Number) 3.0;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) 0.2;
      numberArray1[7] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[8] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      numberArray2[0] = (Number) statisticalBarRenderer0.ZERO;
      statisticalLineAndShapeRenderer0.setLegendTextPaint(82, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      numberArray2[1] = (Number) statisticalBarRenderer0.ZERO;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setArtifactPaint(statisticalLineAndShapeRenderer0.DEFAULT_PAINT);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItem((-1799), 164);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      TextTitle textTitle0 = jFreeChart0.getTitle();
      jFreeChart0.addSubtitle((Title) textTitle0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1753), 1673, (-1295), 5, (-1061), (-3760), false, false, true, true, false, false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.equals(jFreeChart0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = levelRenderer0.getToolTipGenerator(0, 227, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("on6aWZ9ckD>?", dateFormat0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesItemLabelGenerator((-637), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      DateFormat.getDateInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      areaRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      areaRenderer0.clone();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      GradientPaintTransformType gradientPaintTransformType0 = GradientPaintTransformType.CENTER_HORIZONTAL;
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer(gradientPaintTransformType0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(standardGradientPaintTransformer0);
      stackedBarRenderer0.notifyListeners(rendererChangeEvent0);
      stackedBarRenderer0.calculateBarL0L1(1551.74583803, (double) areaRenderer0.ZERO, (double) areaRenderer0.ZERO);
      LegendItemCollection legendItemCollection0 = areaRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
      
      CategoryToolTipGenerator categoryToolTipGenerator0 = areaRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getLegendTextPaint(823);
      defaultCategoryItemRenderer0.setUseSeriesOffset(true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.clone();
      boxAndWhiskerRenderer0.getMaximumBarWidth();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      boxAndWhiskerRenderer0.getLegendItemURLGenerator();
      scatterRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      scatterRenderer0.clone();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      lineRenderer3D0.equals(stackedBarRenderer3D0);
      stackedBarRenderer3D0.getWallPaint();
      SystemColor systemColor0 = SystemColor.activeCaptionText;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(systemColor0, boxAndWhiskerRenderer0.DEFAULT_PAINT, scatterRenderer0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_PAINT);
      waterfallBarRenderer0.getFirstBarPaint();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setRenderAsPercentages(true);
      assertEquals(4.0, stackedBarRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(",:#|-lGajCZ#Hn", 12.0, (-1.7976931348623157E308));
      boolean boolean0 = stackedBarRenderer3D0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
      
      int int0 = stackedBarRenderer3D0.getColumnCount();
      assertEquals(0, int0);
      
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Line2D.Float line2D_Float0 = new Line2D.Float(0.5F, 0.0F, 0.0F, 1.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, rectangle2D0, taskSeriesCollection0, 413, 3, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 413, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      DateFormat.getDateInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      areaRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      AreaRenderer areaRenderer1 = (AreaRenderer)areaRenderer0.clone();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.calculateBarL0L1(1551.74583803, (double) areaRenderer0.ZERO, (double) areaRenderer0.ZERO);
      CategoryURLGenerator categoryURLGenerator0 = areaRenderer1.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(1);
      minMaxCategoryRenderer0.setDrawLines(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      BarRenderer.getDefaultShadowsVisible();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-92.0328), (double) scatterRenderer0.ZERO);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1, 1);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(slidingGanttCategoryDataset0, 1, 1);
      int int0 = 0;
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity((EntityCollection) null, stackedBarRenderer3D0.DEFAULT_SHAPE, slidingGanttCategoryDataset0, (-1319), (-227), false, (-227), (-2411.045));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(1);
      minMaxCategoryRenderer0.setDrawLines(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      BarRenderer.getDefaultShadowsVisible();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-92.0328), (double) scatterRenderer0.ZERO);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1, 1);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(slidingGanttCategoryDataset0, 1, 1);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(3.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 1, 12.0, (-939.3), 0, (-939.3), (-1101.51213520599), plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("1;B`%2T-bLBWnihG^_G", dateFormat0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemLabelGenerator(73, 65, false);
      areaRenderer0.clone();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      double[] doubleArray0 = stackedBarRenderer0.calculateBarL0L1(511.0355915126, 1, 2950.12512411);
      assertEquals(2, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("1;B`%2T-bLBWnihG^_G", mockSimpleDateFormat0);
      areaRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      areaRenderer0.clone();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      double[] doubleArray0 = stackedBarRenderer0.calculateBarL0L1(3, (double) areaRenderer0.ZERO, 2.5E7);
      assertEquals(2, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      scatterRenderer0.getLegendItem(3, 0);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      scatterRenderer0.getLegendItem((-2761), 3);
      scatterRenderer0.setItemMargin((double) stackedBarRenderer3D0.ZERO);
      scatterRenderer0.getURLGenerator(2, 5, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      statisticalLineAndShapeRenderer0.setSeriesURLGenerator(6, (CategoryURLGenerator) null, true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      LegendItem legendItem0 = categoryStepRenderer0.getLegendItem(580, (-61));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      categoryStepRenderer_State0.getEntityCollection();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      defaultMultiValueCategoryDataset0.clone();
      scatterRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer_State0.line, defaultMultiValueCategoryDataset0, 8, (-723), false, 0.0, 0.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 8, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setItemMargin((-2877.0));
      ganttRenderer0.getIncompletePaint();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot1, defaultCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.lookupLegendShape((-1176));
      stackedBarRenderer0.calculateBarL0L1((-2310.4666), 0.0, (-2310.4666));
      stackedBarRenderer0.getLegendItemToolTipGenerator();
      stackedBarRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setItemMargin(952.536041);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = waterfallBarRenderer0.getLegendItemLabelGenerator();
      waterfallBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      BarRenderer.getDefaultBarPainter();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "=Nbbss";
      stringArray0[1] = "";
      stringArray0[2] = "";
      Number[][] numberArray0 = new Number[7][0];
      Number[] numberArray1 = new Number[6];
      numberArray1[0] = (Number) 3.0;
      numberArray1[1] = (Number) 3.0;
      numberArray1[2] = (Number) 3.0;
      numberArray1[3] = (Number) 0.2;
      numberArray1[4] = (Number) 0.2;
      numberArray1[5] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[8];
      numberArray2[0] = (Number) 0.2;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) 3.0;
      numberArray2[3] = (Number) 0.2;
      numberArray2[4] = (Number) 0.2;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      numberArray2[5] = (Number) 5;
      numberArray2[6] = (Number) 0.2;
      numberArray2[7] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[8];
      numberArray3[0] = (Number) waterfallBarRenderer0.ZERO;
      numberArray3[1] = (Number) 0.2;
      numberArray3[2] = (Number) 3.0;
      numberArray3[3] = (Number) waterfallBarRenderer0.ZERO;
      numberArray3[4] = (Number) 0.2;
      numberArray3[5] = (Number) 3.0;
      numberArray3[6] = (Number) waterfallBarRenderer0.ZERO;
      double double0 = BarRenderer3D.DEFAULT_X_OFFSET;
      numberArray3[7] = (Number) 12.0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[1];
      numberArray4[0] = (Number) 0.2;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[7];
      numberArray5[0] = (Number) 3.0;
      numberArray5[1] = (Number) 3.0;
      numberArray5[2] = (Number) waterfallBarRenderer0.ZERO;
      numberArray5[3] = (Number) 3.0;
      numberArray5[4] = (Number) 3.0;
      numberArray5[5] = (Number) 3.0;
      numberArray5[6] = (Number) 0.2;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[2];
      numberArray6[0] = (Number) waterfallBarRenderer0.ZERO;
      numberArray6[1] = (Number) 0.2;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[7];
      numberArray7[0] = (Number) waterfallBarRenderer0.ZERO;
      numberArray7[1] = (Number) waterfallBarRenderer0.ZERO;
      numberArray7[2] = (Number) 3.0;
      numberArray7[3] = (Number) 3.0;
      numberArray7[4] = (Number) 3.0;
      numberArray7[5] = (Number) 0.2;
      numberArray7[6] = (Number) 0.2;
      numberArray0[6] = numberArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setDrawOutlines(false);
      boolean boolean0 = false;
      statisticalLineAndShapeRenderer0.setBaseShapesVisible(false);
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getMaxIcon();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getStartPercent();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = null;
      try {
        categoryPointerAnnotation0 = new CategoryPointerAnnotation((String) null, 3.0, (double) statisticalLineAndShapeRenderer0.ZERO, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[6][9];
      Number[] numberArray1 = new Number[9];
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) 0.2;
      numberArray1[4] = (Number) 3.0;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) 0.2;
      numberArray1[7] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[8] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      numberArray2[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      statisticalLineAndShapeRenderer0.setLegendTextPaint(82, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      numberArray2[1] = (Number) statisticalBarRenderer0.ZERO;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setArtifactPaint(statisticalLineAndShapeRenderer0.DEFAULT_PAINT);
      assertTrue(statisticalLineAndShapeRenderer0.getBaseShapesVisible());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      String string0 = "h";
      waterfallBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Hasmn\"K|BJ(I%wp", "h", "mf#y5Y;hETmewiWx");
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.setWallPaint(waterfallBarRenderer0.DEFAULT_PAINT);
      barRenderer3D0.setShadowXOffset((-1.0));
      barRenderer3D0.getWallPaint();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getMinIcon();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp((-4.0F), (-4.0F), renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte) (-47);
      byte byte0 = (byte) (-18);
      byteArray0[2] = (byte) (-18);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, 15, byteArray0, 3074, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3074
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      int int0 = stackedBarRenderer3D0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-528.39049326), 2173.0);
      stackedBarRenderer3D0.findRangeBounds((CategoryDataset) null);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.equals((Object) null);
      defaultCategoryItemRenderer0.getItemMargin();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      defaultCategoryItemRenderer0.getURLGenerator(291, (-85), true);
      statisticalLineAndShapeRenderer0.setSeriesURLGenerator(291, (CategoryURLGenerator) null, false);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      LegendItem legendItem0 = categoryStepRenderer0.getLegendItem((-85), 3);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      boolean boolean0 = true;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0, true);
      stackedBarRenderer3D0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getFirstBarPaint();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("d%Oc<qW!?M\"]e}");
      levelRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      levelRenderer0.setMaximumItemWidth(1614.311138508682);
      waterfallBarRenderer0.getNegativeItemLabelPositionFallback();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setItemLabelAnchorOffset(2.0);
      scatterRenderer0.getUseFillPaint();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      int[] intArray0 = new int[9];
      intArray0[0] = (-526);
      intArray0[1] = 0;
      intArray0[2] = 730;
      intArray0[3] = 0;
      intArray0[4] = (-2846);
      intArray0[5] = 0;
      intArray0[6] = 121;
      intArray0[7] = 680;
      intArray0[8] = (-1409);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createStackedValueList(defaultCategoryDataset0, levelRenderer0.ZERO, intArray0, (-2271.7133), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryStepRenderer_State0.getEntityCollection();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(entityCollection0, categoryStepRenderer_State0.line, defaultMultiValueCategoryDataset0, 0, 0, false, 0.0, (-810.64133));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setDrawOutlines(false);
      boolean boolean0 = false;
      statisticalLineAndShapeRenderer0.setBaseShapesVisible(false);
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getMaxIcon();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getStartPercent();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = null;
      try {
        categoryPointerAnnotation0 = new CategoryPointerAnnotation((String) null, 3.0, (double) statisticalLineAndShapeRenderer0.ZERO, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesStroke(1);
      minMaxCategoryRenderer0.setDrawLines(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      BarRenderer.getDefaultShadowsVisible();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-92.0328), (double) scatterRenderer0.ZERO);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1, 1);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(slidingGanttCategoryDataset0, 1, 1);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createStackedValueList(slidingCategoryDataset0, scatterRenderer0.ZERO, intArray0, 0.0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = 0;
      scatterRenderer0.getLegendItem(3, 0);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      int int1 = (-1295);
      boolean boolean0 = true;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1295), 10, 602, 602, 10, (-1295), true, true, false, false, true, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(65, 82, true);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      levelRenderer0.getMaximumItemWidth();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[6][9];
      Number[] numberArray1 = new Number[9];
      numberArray1[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[1] = (Number) 3.0;
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) 0.2;
      numberArray1[4] = (Number) 3.0;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) 0.2;
      numberArray1[7] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[8] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      numberArray2[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray2[1] = (Number) statisticalBarRenderer0.ZERO;
      numberArray2[2] = (Number) 0.2;
      numberArray2[3] = (Number) 3.0;
      numberArray2[4] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray2[5] = (Number) 3.0;
      numberArray2[6] = (Number) 0.2;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[7];
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getPassCount();
      numberArray3[0] = (Number) 2;
      numberArray3[1] = (Number) levelRenderer0.ZERO;
      numberArray3[2] = (Number) statisticalBarRenderer0.ZERO;
      numberArray3[3] = (Number) 3.0;
      numberArray3[4] = (Number) 0.2;
      numberArray3[5] = (Number) levelRenderer0.ZERO;
      numberArray3[6] = (Number) statisticalBarRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[0];
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[2];
      numberArray5[0] = (Number) 3.0;
      numberArray5[1] = (Number) 0.2;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[6];
      numberArray6[0] = (Number) 0.2;
      numberArray6[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      numberArray6[2] = (Number) integer0;
      numberArray6[3] = (Number) stackedAreaRenderer0.ZERO;
      numberArray6[4] = (Number) 3.0;
      numberArray6[5] = (Number) statisticalBarRenderer0.ZERO;
      numberArray0[5] = numberArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = 1613;
      statisticalBarRenderer0.getItemLabelGenerator(1613, 1613, true);
      statisticalBarRenderer0.setShadowYOffset((double) minMaxCategoryRenderer0.ZERO);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      minMaxCategoryRenderer0.equals((Object) null);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getRangeAxis((CategoryPlot) null, 1178);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryDataset categoryDataset0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedAreaRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, valueAxis0, stackedAreaRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      String string0 = "1;B`%2T-bLBWnihG^_G";
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("1;B`%2T-bLBWnihG^_G", dateFormat0);
      areaRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      areaRenderer0.clone();
      int int0 = (-1496);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(3, (-1496), 336);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 336
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LegendItem legendItem0 = defaultCategoryItemRenderer0.getLegendItem(1939, 0);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Shape shape0 = null;
      CategoryDataset categoryDataset0 = null;
      stackedBarRenderer3D0.clone();
      stackedBarRenderer3D0.clearSeriesPaints(false);
      int int0 = 3;
      standardEntityCollection0.iterator();
      int int1 = (-1414);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.axis.ValueAxis", groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      combinedDomainCategoryPlot0.setOutlinePaint(groupedStackedBarRenderer0.DEFAULT_PAINT);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 128);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      LogAxis logAxis0 = new LogAxis("A]9I/J<rQXR.8");
      IntervalMarker intervalMarker0 = new IntervalMarker(128, 1080.8265, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = null;
      try {
        rescaleOp0 = new RescaleOp((float[]) null, (float[]) null, renderingHints0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.RescaleOp", e);
      }
  }
}
