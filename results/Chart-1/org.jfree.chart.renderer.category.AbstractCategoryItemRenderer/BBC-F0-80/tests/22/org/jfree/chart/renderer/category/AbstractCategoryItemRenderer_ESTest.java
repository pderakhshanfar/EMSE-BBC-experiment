/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 14:49:41 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.time.ZoneId;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.JInternalFrame;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.TreeModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Week;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = new JFreeChart(">so:", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle2D_Float0, dateAxis0.DEFAULT_TICK_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals(2.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 10, 2394, (-929), 1, 1, false, false, true, true, true, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      Rectangle2D rectangle2D0 = dateAxis0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0, true, true);
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle2D0, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      DateAxis dateAxis0 = new DateAxis("{0}");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D0, 0.2, barRenderer3D0.DEFAULT_WALL_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(")_?Tk^q$p");
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      // Undeclared exception!
      try { 
        categoryStepRenderer0.getItemMiddle(true, dateAxis0.DEFAULT_ANCHOR_DATE, jDBCCategoryDataset0, categoryAxis3D0, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'paint' argument.");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, extendedCategoryAxis0, logAxis0, levelRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      levelRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, extendedCategoryAxis0, categoryMarker0, (Rectangle2D) null);
      assertTrue(extendedCategoryAxis0.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Cannot remove null series.", ganttRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      scatterRenderer0.drawBackground(graphics2D0, categoryPlot0, rectangle2D_Double0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis("Overlapping bin");
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryStepRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis0, numberAxis0, layer0, plotRenderingInfo0);
      assertEquals(0.0F, categoryAxis0.getMinorTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      Number[][] numberArray0 = new Number[2][0];
      Number[] numberArray1 = new Number[2];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      categoryStepRenderer0.addEntity(standardEntityCollection0, ganttRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 1, 1, false, 0.2, (-879.197632340903));
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'stroke' argument.");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, logarithmicAxis0, scatterRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 500, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 7, 7, 15, 1, 1747, 1, false, false, true, false, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      categoryStepRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Double0, (-477.2781542367624), minMaxCategoryRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      assertFalse(combinedDomainCategoryPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Float float0 = new Float((-897.872619067683));
      jDBCCategoryDataset0.addValue((Number) float0, (Comparable) float0, (Comparable) float0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, rectangle0, jDBCCategoryDataset0, 0, 0, false);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = minMaxCategoryRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(categoryPlot0, 10);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(30.0);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      Range range0 = stackedXYBarRenderer0.findRangeBounds(defaultTableXYDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", range0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, moduloAxis0, stackedBarRenderer0);
      ModuloAxis moduloAxis1 = (ModuloAxis)stackedAreaRenderer0.getRangeAxis(categoryPlot0, 128);
      assertEquals(90.0, moduloAxis1.getDisplayEnd(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.resizeRange(3.0, (-1044.31));
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, numberAxis3D0, ganttRenderer0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      NumberAxis3D numberAxis3D1 = (NumberAxis3D)areaRenderer0.getRangeAxis(categoryPlot0, 500);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setRangeAboutValue(3.0, 0.0F);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, numberAxis3D0, ganttRenderer0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      ValueAxis valueAxis0 = areaRenderer0.getRangeAxis(categoryPlot0, 500);
      assertSame(valueAxis0, numberAxis3D0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      NumberAxis numberAxis0 = new NumberAxis("7puMhg[9o)l");
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, (CategoryAxis) null, numberAxis0, scatterRenderer0);
      CategoryPlot categoryPlot1 = scatterRenderer0.getPlot();
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedAreaRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Number[][] numberArray0 = new Number[5][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Rich Unger");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      double double0 = ganttRenderer0.getItemMiddle(3.0, 3.0, defaultIntervalCategoryDataset0, extendedCategoryAxis0, rectangle2D_Float0, rectangleEdge0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)ganttRenderer0.getItemLabelGenerator((-1), (-1), true);
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DrawingSupplier drawingSupplier0 = boxAndWhiskerRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedBarRenderer3D0.ZERO, (-1913.6370823));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("-!8.{wb\"/Dk,:'.=/X");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, logAxis0, categoryStepRenderer0);
      CategoryAxis categoryAxis1 = scatterRenderer0.getDomainAxis(categoryPlot0, defaultBoxAndWhiskerCategoryDataset0);
      assertTrue(categoryAxis1.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = ganttRenderer0.getBaseItemLabelGenerator();
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) taskSeriesCollection0, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[1][0];
      Number[] numberArray1 = new Number[5];
      numberArray1[0] = (Number) 0.0;
      numberArray1[1] = (Number) 1.0F;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = categoryStepRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Number[][] numberArray0 = new Number[1][0];
      Number[] numberArray1 = new Number[5];
      numberArray1[1] = (Number) 1.0F;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = categoryStepRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = stackedBarRenderer3D0.findRangeBounds(taskSeriesCollection0);
      assertEquals(1.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      jDBCCategoryDataset0.addValue((Number) defaultCategoryItemRenderer0.ZERO, (Comparable) defaultCategoryItemRenderer0.ZERO, (Comparable) defaultCategoryItemRenderer0.ZERO);
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds(jDBCCategoryDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      jDBCCategoryDataset0.addValue((Number) 5, (Comparable) categoryStepRenderer0.ZERO, (Comparable) dateTickUnit0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds(jDBCCategoryDataset0);
      assertEquals(5.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = defaultCategoryItemRenderer0.equals(defaultCategoryItemRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Stroke stroke0 = stackedAreaRenderer0.lookupSeriesOutlineStroke(28);
      boolean boolean0 = stackedAreaRenderer0.equals(stroke0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 3.0, ganttRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO, 1, 1, 909.8239031233, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("", "p(V)/v^%L3jLotQ", "");
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-79), (CategoryURLGenerator) standardCategoryURLGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesURLGenerator((-869), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-1482), (CategoryToolTipGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.setSeriesItemLabelGenerator((-11), (CategoryItemLabelGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        scatterRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("(-;V\"n+r");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1), "(-;V\"n+r");
      DateAxis dateAxis0 = new DateAxis("(-;V\"n+r", simpleTimeZone0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = defaultCategoryItemRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.hitTest(0.0, 0.0, (Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis3D0, dateAxis0, defaultBoxAndWhiskerCategoryDataset0, 16777215, 6, false, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("(-;V\"n+r");
      TimeZone timeZone0 = TimeZone.getTimeZone("AxfpJM");
      DateAxis dateAxis0 = new DateAxis("(-;V\"n+r", timeZone0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.hitTest(2.0, 0.2, (Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis3D0, dateAxis0, defaultBoxAndWhiskerCategoryDataset0, 93, (-605), false, categoryItemRendererState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getRangeAxis((CategoryPlot) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Number[][] numberArray0 = new Number[6][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Unknown layer.");
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      // Undeclared exception!
      try { 
        ganttRenderer0.getItemMiddle(0.2, false, defaultIntervalCategoryDataset0, categoryAxis0, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getDomainAxis((CategoryPlot) null, defaultBoxAndWhiskerCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.getDomainAxis(combinedRangeCategoryPlot0, defaultStatisticalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 4, 4);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      double[][] doubleArray0 = new double[9][1];
      double[] doubleArray1 = new double[4];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      String[] stringArray0 = new String[4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Number[][] numberArray0 = new Number[3][6];
      Number[] numberArray1 = new Number[3];
      numberArray0[2] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 290, 7, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("ZOOM_RESET_BOTH");
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.0, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, ganttRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, valueMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 92, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, rectangle2D_Double0, 0.0, ganttRenderer0.DEFAULT_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      Week week0 = new Week(14, (-4));
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.GERMAN;
      PeriodAxis periodAxis0 = new PeriodAxis("a)8i'#", week0, week0, zoneInfo0, locale0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, periodAxis0, (Rectangle2D) null, 14, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawOutline((Graphics2D) null, combinedRangeCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.drawDomainMarker((Graphics2D) null, combinedRangeCategoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("F1d*ZN9Yx");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, extendedCategoryAxis0, logAxis0, levelRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
      // Undeclared exception!
      try { 
        levelRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, extendedCategoryAxis0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawBackground((Graphics2D) null, categoryPlot0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      JFreeChart jFreeChart0 = new JFreeChart("1e", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis3D0, cyclicNumberAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", timeZone0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, categoryPlot0, categoryAxis0, dateAxis0, (CategoryDataset) null, 500, 0, true, categoryStepRenderer_State0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DateAxis dateAxis0 = new DateAxis();
      Number[][] numberArray0 = new Number[0][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("5HUeN");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, categoryPlot0, extendedCategoryAxis0, dateAxis0, defaultIntervalCategoryDataset0, 3, 69, true, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-2316), 0.0, 7.0, 5724.0);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      LabelBlock labelBlock0 = new LabelBlock("jiTxGUK\"2h3&");
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      // Undeclared exception!
      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JTree jTree0 = new JTree((TreeModel) null);
      Rectangle rectangle0 = jTree0.getRowBounds(3);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      double[][] doubleArray0 = new double[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(standardEntityCollection0, ganttRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 969, 969, true, (double) statisticalBarRenderer0.ZERO, 20.23284485694386);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      categoryStepRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, (-214), (-214), true, (-214), 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 5, 5, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity(standardEntityCollection0, barRenderer3D0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-1453), 390, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 2.0, 3.0, 3307.45090494, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("(-;V\"n+r");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1), "(-;V\"n+r");
      DateAxis dateAxis0 = new DateAxis("(-;V\"n+r", simpleTimeZone0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis3D0, dateAxis0, defaultBoxAndWhiskerCategoryDataset0, (-5784), (-51), true, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      jDBCCategoryDataset0.addValue((Number) defaultCategoryItemRenderer0.ZERO, (Comparable) defaultCategoryItemRenderer0.ZERO, (Comparable) defaultCategoryItemRenderer0.ZERO);
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, false);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("']\"u>1}tB^39y6", stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO);
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'stroke' argument.", 0.0F, (double) categoryStepRenderer0.ZERO);
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      assertTrue(categoryTextAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("edJI>BKe]]MN~2i9qN", "p(V)/v^%L3jLotQ", "edJI>BKe]]MN~2i9qN");
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesURLGenerator(1441, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getURLGenerator((-1609), (-1609), false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = (BoxAndWhiskerToolTipGenerator)ganttRenderer0.getBaseToolTipGenerator();
      assertEquals("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", boxAndWhiskerToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getToolTipGenerator((-869), 103, false);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      assertFalse(minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DecimalFormat decimalFormat0 = new DecimalFormat("Cannot remove null series.");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Cannot remove null series.", decimalFormat0);
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(253, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = ganttRenderer0.getItemLabelGenerator((-1), (-1), true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getSeriesToolTipGenerator(2487);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = scatterRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", timeZone0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.createState(plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.hitTest(0.05, 2.0E9, (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis0, dateAxis0, (CategoryDataset) null, 10, 4195, false, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis("Overlapping bin");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JInternalFrame jInternalFrame0 = new JInternalFrame("Overlapping bin");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis0, numberAxis0, defaultBoxAndWhiskerCategoryDataset0, (-3324), 10, true, categoryStepRenderer_State0, rectangle0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity(standardEntityCollection0, defaultCategoryItemRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, 1, 58, false, 58, 0.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      categoryStepRenderer0.setPlot(combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(standardEntityCollection0, (Shape) null, jDBCCategoryDataset0, 10, 10, false, 10, 1.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(standardEntityCollection0, (Shape) null, jDBCCategoryDataset0, 10, 10, false, 10, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, (CategoryDataset) null, 4, 680, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      LegendItemCollection legendItemCollection0 = lineAndShapeRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("\"BwSV7z ;-t|cU)3", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(1.0E-8, valueAxis0.getAutoRangeMinimumSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, numberAxis3D0, stackedBarRenderer0);
      NumberAxis3D numberAxis3D1 = (NumberAxis3D)stackedBarRenderer0.getRangeAxis(categoryPlot0, 0);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("({0}, {1}) = {2}");
      ganttRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      Object object0 = ganttRenderer0.clone();
      assertNotSame(ganttRenderer0, object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertEquals(0, stackedAreaRenderer1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      try { 
        stackedAreaRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      assertEquals(0.0, ganttRenderer1.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.2);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultBoxAndWhiskerCategoryDataset0, 3, 192, true, (-979.3), 1.0E-4, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'stroke' argument.");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, logarithmicAxis0, scatterRenderer0);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      categoryPlot0.setRangeCrosshairLockedOnData(false);
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, 0.05, 0.05, (-452), (-2285.3), 1.0E-8, plotOrientation0);
      assertFalse(scatterRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Hour hour0 = new Hour();
      scatterRenderer0.updateCrosshairValues((CategoryCrosshairState) null, hour0, areaRenderer0.ZERO, 1.0, 864, 1309.21, 2.0E7, plotOrientation0);
      assertTrue(areaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, 10, 2.0, (-101), (-853.6), 10, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'stroke' argument.");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, logarithmicAxis0, scatterRenderer0);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, 0.05, 0.05, (-452), (-2285.3), 1.0E-8, plotOrientation0);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      DateAxis dateAxis0 = new DateAxis();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, extendedCategoryAxis0, dateAxis0, ganttRenderer0);
      DrawingSupplier drawingSupplier0 = ganttRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Color color0 = (Color)LabelBlock.DEFAULT_PAINT;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(minMaxCategoryRenderer0.ZERO, 8.0, "", 3.0, color0, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      assertTrue(minMaxCategoryRenderer1.equals((Object)minMaxCategoryRenderer0));
      
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      minMaxCategoryRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      boolean boolean0 = minMaxCategoryRenderer1.equals(minMaxCategoryRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem(5, 0);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRenderer(2, (CategoryItemRenderer) levelRenderer0, false);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem(10, (-4282));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(63, 1297.981033);
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Float0, rectangle2D_Float0, rectangleInsets0, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 10, 2394, 15, 1, 1, false, false, true, true, true, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      IntervalMarker intervalMarker0 = new IntervalMarker(934.84, (double) stackedBarRenderer3D0.ZERO, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(5, 63, (-686.5994F), 63);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      RectangleInsets rectangleInsets0 = textBox0.getInteriorGap();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.2, 0.0, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Float0, rectangle2D_Float0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleInsets rectangleInsets0 = Title.DEFAULT_PADDING;
      LabelBlock labelBlock0 = new LabelBlock("{&y_uPT_fJd|C1M]t^");
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets0, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, 10);
      intervalMarker0.setLabel("B#m-2a:Jre!0,[]bQ@E");
      Rectangle rectangle0 = new Rectangle(10, 10, 10, 8);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("IWOtW`", levelRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1024, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("PROPERTIES");
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertEquals(0.2, levelRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, 10);
      Rectangle rectangle0 = new Rectangle(10, 10, 10, 8);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("IWOtW`", levelRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(12, 10, 12, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("PROPERTIES");
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertEquals(0.0, numberAxis3D0.getFixedAutoRange(), 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getRangeMinorGridlineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 1.0F, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, stroke0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 0.0F);
      Rectangle rectangle0 = new Rectangle(10, 10, 10, 8);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("IWOtW`", levelRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 784, 1, 784, 10, false, true, true, true, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(12, 10, 12, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("PROPERTIES");
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertTrue(numberAxis3D0.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.7976931348623157E308), 1.0F, dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart("x)2", dateAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, intervalMarker0, rectangle2D_Double0);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getRangeMinorGridlineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1562.4), 1.0F, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, stroke0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 0.0F);
      Rectangle rectangle0 = new Rectangle(10, 10, 10, 8);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("IWOtW`", levelRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 784, 1, 784, 10, false, true, true, true, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(12, 10, 12, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("PROPERTIES");
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertFalse(combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("Overlapping biwEn");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryMarker categoryMarker0 = new CategoryMarker(ganttRenderer0.ZERO);
      levelRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, categoryMarker0, (Rectangle2D) null);
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 290, 7, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("ZOOM_RESET_BOTH");
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ValueMarker valueMarker0 = new ValueMarker((-0.547472819418712), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, ganttRenderer0.DEFAULT_STROKE);
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, valueMarker0, (Rectangle2D) null);
      assertTrue(numberAxis3D0.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", extendedCategoryAxis0.DEFAULT_TICK_LABEL_FONT, ringPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1730, 56, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, valueMarker0, defaultCaret0);
      assertEquals(0.0, defaultCaret0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.CANADA_FRENCH;
      DateAxis dateAxis0 = new DateAxis("'S\"u>;1}tB^39y6", simpleTimeZone0, locale0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)lineAndShapeRenderer0.lookupSeriesShape((-2));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(343.9962353138159, 1616.52, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_STROKE, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE, 1.0F);
      ganttRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, dateAxis0, intervalMarker0, rectangle2D_Double0);
      assertTrue(ganttRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      NumberAxis numberAxis0 = new NumberAxis("Overlapping bin");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      categoryStepRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, (Rectangle2D) null, (-630.3719131), combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, true, false, false, false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2238.735946954228), 1.0E-8, "");
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(11, 5);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, rectangle2D0, 1.0F, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0, 1.0F, (Paint) null, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DateAxis dateAxis0 = new DateAxis("l,j-.O");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D0, 10, dateAxis0.DEFAULT_AXIS_LINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Float float0 = new Float((-897.872619067683));
      jDBCCategoryDataset0.addValue((Number) float0, (Comparable) float0, (Comparable) float0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds(jDBCCategoryDataset0);
      assertEquals((-897.8726196289062), range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ganttRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Range range0 = ganttRenderer0.findRangeBounds(jDBCCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        barRenderer3D0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, taskSeriesCollection0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(437, 778, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(5, 5, 5);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      scatterRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      assertEquals(2.0, scatterRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      boolean boolean0 = minMaxCategoryRenderer1.equals(minMaxCategoryRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesURLGenerator(5, (CategoryURLGenerator) customCategoryURLGenerator0, false);
      assertEquals(0, scatterRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      assertEquals(1, ganttRenderer1.getPassCount());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(2487, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = (BoxAndWhiskerToolTipGenerator)stackedBarRenderer3D0.getSeriesToolTipGenerator(2487);
      assertEquals("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", boxAndWhiskerToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("+T%PctpMQT#", dateFormat0);
      stackedAreaRenderer0.setSeriesToolTipGenerator(1566, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator1 = (IntervalCategoryToolTipGenerator)stackedAreaRenderer0.getToolTipGenerator(1566, (-3572), true);
      assertEquals("+T%PctpMQT#", intervalCategoryToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      assertFalse(minMaxCategoryRenderer0.isDrawLines());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("(<[~PuJTpiC%Du,", decimalFormat0, decimalFormat0);
      areaRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      assertTrue(areaRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setSeriesItemLabelGenerator(53, (CategoryItemLabelGenerator) null, false);
      assertTrue(ganttRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      levelRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, taskSeriesCollection0, (-2316), (-2316), true, (-2316), (double) defaultCategoryItemRenderer0.ZERO, true);
      assertTrue(defaultCategoryItemRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("The number of row keys does not match the number of rows in the data array.", "The number of row keys does not match the number of rows in the data array.", "({0}, {1}) = {2}");
      stackedBarRenderer3D0.setSeriesURLGenerator(85, (CategoryURLGenerator) standardCategoryURLGenerator0);
      assertTrue(stackedBarRenderer3D0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getSeriesURLGenerator((-725));
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        ganttRenderer0.createHotSpotShape((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, extendedCategoryAxis0, cyclicNumberAxis0, defaultBoxAndWhiskerCategoryDataset0, (-643), (-2793), false, (CategoryItemRendererState) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setSeriesToolTipGenerator((-962), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalLineAndShapeRenderer0.getSeriesItemLabelGenerator((-5));
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = barRenderer3D0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.removeAnnotations();
      assertFalse(ganttRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryURLGenerator categoryURLGenerator0 = categoryStepRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, rectangle0, jDBCCategoryDataset0, 0, 0, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      defaultCategoryItemRenderer0.drawOutline(graphics2D0, categoryPlot0, rectangle2D_Double0);
      assertTrue(defaultCategoryItemRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = categoryStepRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      levelRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      LevelRenderer levelRenderer1 = (LevelRenderer)levelRenderer0.clone();
      assertTrue(levelRenderer1.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Number[][] numberArray0 = new Number[8][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = ganttRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesItemLabelGenerator((-308), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }
}
