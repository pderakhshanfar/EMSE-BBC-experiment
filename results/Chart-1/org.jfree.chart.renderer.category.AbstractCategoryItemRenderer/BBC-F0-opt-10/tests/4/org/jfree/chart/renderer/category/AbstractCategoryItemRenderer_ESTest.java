/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 14:28:34 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ICC_Profile;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.Month;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.Chronology;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.border.MatteBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.plaf.metal.MetalTabbedPaneUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.Element;
import javax.swing.text.GlyphView;
import javax.swing.text.PlainDocument;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.StandardTickUnitSource;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.VectorRenderer;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.pie.PieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.SimpleTimePeriod;
import org.jfree.data.time.Week;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MockDate mockDate0 = new MockDate(0, (-1036), 0);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.JAPAN;
      Week week0 = new Week(mockDate0, timeZone0, locale0);
      timeZone0.getDisplayName();
      PeriodAxis periodAxis0 = new PeriodAxis("+6gHB;# |*", week0, week0);
      Color color0 = (Color)WaferMapPlot.DEFAULT_GRIDLINE_PAINT;
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, defaultCaret0, 0, color0, periodAxis0.DEFAULT_TICK_MARK_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setShadowVisible(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getSeriesURLGenerator(2);
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator(Integer.MAX_VALUE, (CategoryURLGenerator) null, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      Object object0 = scatterRenderer1.clone();
      int int0 = 20;
      int int1 = 1712;
      int int2 = 16;
      scatterRenderer1.getURLGenerator(1712, 16, false);
      scatterRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      scatterRenderer1.setSeriesURLGenerator(20, (CategoryURLGenerator) null, false);
      scatterRenderer0.equals(scatterRenderer1);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.getMinimumBarLength();
      barRenderer3D0.getItemMargin();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.equals(scatterRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getItemMargin();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getObjectIcon();
      minMaxCategoryRenderer0.getMaxIcon();
      int int3 = 782;
      scatterRenderer1.getItemShapeFilled(782, 1712);
      scatterRenderer0.equals(object0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(16, 90, (-33), (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Layer layer0 = Layer.BACKGROUND;
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      lineRenderer3D1.setSeriesURLGenerator(15, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      boolean boolean0 = lineRenderer3D1.equals(lineRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(757.0F, 757.0F, 10, 1.0F, 10, (-1203.907F));
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      rectangle2D_Double0.intersects(rectangle2D0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      statisticalBarRenderer0.setSeriesToolTipGenerator(500, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesToolTipGenerator(Integer.MAX_VALUE, (CategoryToolTipGenerator) null, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      cyclicNumberAxis0.setLabelFont(stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      stackedAreaRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis3D0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(15, 15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(500, 10, 15, 0.05);
      Dimension dimension0 = new Dimension(10, 10);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(7);
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8);
      valueMarker0.setLabel("");
      levelRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, valueMarker0, rectangle2D_Double0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Boolean boolean0 = lineRenderer3D0.getSeriesLinesVisible(15);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.clearSeriesPaints(false);
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(94.3, (-3258.4525868965));
      stackedBarRenderer3D0.getItemMargin();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(0.95F, 0.1F, 0.1F, 0.95F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "({0}, {1}) = {2}";
      stringArray0[1] = "({0}, {1}) = {2}";
      stringArray0[2] = "({0}, {1}) = {2}";
      stringArray0[3] = "X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ";
      stringArray0[4] = "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer";
      SymbolAxis symbolAxis0 = new SymbolAxis("({0}, {1}) = {2}", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", lineRenderer3D0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        lineRenderer3D1.hitTest(2624.487263060365, (-3258.4525868965), (Graphics2D) null, rectangle2D0, categoryPlot0, categoryAxis3D0, symbolAxis0, (CategoryDataset) null, 41, 88, true, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, minMaxCategoryRenderer0);
      Vector<CategoryPointerAnnotation> vector0 = new Vector<CategoryPointerAnnotation>();
      defaultMultiValueCategoryDataset0.add(vector0, true, false);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, cyclicNumberAxis0, rectangle2D_Double0, 0.0, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      double double0 = minMaxCategoryRenderer0.getItemMiddle(true, false, defaultMultiValueCategoryDataset0, categoryAxis3D0, rectangle2D_Double0, rectangleEdge0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(15, 15, 10);
      bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultStatisticalCategoryDataset0, (-1341), (-808), true, 1.0F, 0.05);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 12.0;
      doubleArray1[1] = 8.0;
      doubleArray1[2] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 12.0;
      doubleArray1[5] = (double) lineRenderer3D0.ZERO;
      doubleArray1[6] = 8.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 12.0;
      doubleArray2[1] = 8.0;
      doubleArray2[2] = 12.0;
      doubleArray2[3] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray2[4] = 0.7853981633974483;
      doubleArray2[5] = 2341.5672849663465;
      doubleArray2[6] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray2[7] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray2[8] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = 2951.0;
      doubleArray3[1] = (double) lineRenderer3D0.ZERO;
      doubleArray3[2] = 2341.5672849663465;
      doubleArray3[3] = 8.0;
      doubleArray3[4] = 2341.5672849663465;
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, lineRenderer3D0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 1, 1, false);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3285.4501965328805), (-3285.4501965328805));
      cyclicNumberAxis0.setAdvanceLinePaint(lineRenderer3D0.DEFAULT_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CyclicNumberAxis cyclicNumberAxis1 = (CyclicNumberAxis)lineRenderer3D1.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertTrue(cyclicNumberAxis1.getAutoRangeStickyZero());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      lineRenderer3D0.getToolTipGenerator(223, (-1), false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setBase(1192.3379354888423);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      lineRenderer3D0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      lineRenderer3D0.getToolTipGenerator(10, 10, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      boolean boolean0 = statisticalBarRenderer0.equals(lineRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Graphics2D graphics2D0 = null;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3333.201538, 3293.80301);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle rectangle0 = new Rectangle(500, 500);
      Rectangle rectangle1 = new Rectangle(rectangle0);
      double[][] doubleArray0 = new double[1][7];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 500;
      doubleArray1[1] = (double) lineRenderer3D0.ZERO;
      doubleArray1[2] = 0.05;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 3124.9;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      int int0 = 7;
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotBounds((Graphics2D) null, rectangle1, (CategoryPlot) null, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 7, 500, true, categoryStepRenderer_State0, rectangle1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 500
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(12.0, 12.0, lineRenderer3D0.ZERO, (double) lineRenderer3D0.ZERO, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Layer layer0 = Layer.BACKGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      JInternalFrame jInternalFrame0 = new JInternalFrame("");
      BasicInternalFrameUI basicInternalFrameUI0 = new BasicInternalFrameUI(jInternalFrame0);
      basicInternalFrameUI0.getNorthPane();
      JScrollPane jScrollPane0 = new JScrollPane((Component) null);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      double[][] doubleArray0 = new double[5][7];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-1908.7047970996002);
      doubleArray1[1] = 12.0;
      doubleArray1[2] = 8.0;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) (-3);
      doubleArray1[5] = (double) 1;
      doubleArray1[6] = (double) (-3);
      doubleArray1[7] = (double) lineRenderer3D0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = 0.2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[2];
      doubleArray3[0] = (double) (-3);
      doubleArray3[1] = (double) lineRenderer3D0.ZERO;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = (double) (-3);
      doubleArray4[1] = 0.2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = (double) (-3);
      doubleArray5[1] = 1959.2521608232;
      doubleArray5[2] = (double) (-3);
      doubleArray5[3] = (double) (-3);
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      lineRenderer3D0.addEntity(standardEntityCollection0, rectangle0, defaultIntervalCategoryDataset0, 1, 1, false, 1477.5867, 0.2);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      JFreeChart jFreeChart0 = new JFreeChart("[T=f|mt_cU1 6{?#5", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(10, 10);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      levelRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, valueMarker0, rectangle2D_Double0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      assertFalse(defaultCategoryItemRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = (-1565);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, rectangle2D_Double0, defaultStatisticalCategoryDataset0, 0, (-1565), false, (-1565), (-1565));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = 1818;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 1818);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(slidingGanttCategoryDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, true);
      statisticalLineAndShapeRenderer0.clone();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, spiderWebPlot0.DEFAULT_LABEL_SHADOW_PAINT, spiderWebPlot0.DEFAULT_LABEL_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_PAINT);
      waterfallBarRenderer0.setShadowVisible(true);
      statisticalLineAndShapeRenderer0.getBaseItemLabelGenerator();
      Graphics2D graphics2D0 = null;
      MetalTabbedPaneUI metalTabbedPaneUI0 = new MetalTabbedPaneUI();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      // Undeclared exception!
      try { 
        metalTabbedPaneUI0.getTabBounds(jTabbedPane0, 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesFillPaint(true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getLegendItem((-1), (-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ganttRenderer0.setStartPercent((-1));
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("VD&*uZ$ib3]ARgz");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ganttRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 3);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.equals("Null 'orientation' argument.");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Month month0 = Month.MARCH;
      LocalDate localDate0 = MockLocalDate.of(555, month0, 10);
      barRenderer3D0.equals(localDate0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      jDBCCategoryDataset0.setValue(combinedDomainCategoryPlot1.ZERO, (Comparable) 0.0F, (Comparable) false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.getArtifactPaint();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, false);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      lineAndShapeRenderer0.clone();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      GradientPaint gradientPaint0 = (GradientPaint)waterfallBarRenderer0.getLastBarPaint();
      assertFalse(gradientPaint0.isCyclic());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, true);
      statisticalLineAndShapeRenderer0.clone();
      CategoryItemLabelGenerator categoryItemLabelGenerator1 = statisticalLineAndShapeRenderer0.getItemLabelGenerator(3003, 10, true);
      assertSame(categoryItemLabelGenerator1, categoryItemLabelGenerator0);
      assertNotNull(categoryItemLabelGenerator1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(12.0, (double) lineRenderer3D0.ZERO, 8.0, (double) lineRenderer3D0.ZERO, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      Number[][] numberArray0 = new Number[4][3];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = (Number) 12.0;
      numberArray1[1] = (Number) 8.0;
      numberArray1[2] = (Number) 8.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[8];
      numberArray2[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray2[1] = (Number) lineRenderer3D0.ZERO;
      numberArray2[2] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray2[3] = (Number) lineRenderer3D0.ZERO;
      numberArray2[4] = (Number) 8.0;
      numberArray2[5] = (Number) lineRenderer3D0.ZERO;
      BigInteger bigInteger0 = BigInteger.ONE;
      numberArray2[6] = (Number) bigInteger0;
      numberArray2[7] = (Number) lineRenderer3D0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[7];
      numberArray3[0] = (Number) 8.0;
      numberArray3[1] = (Number) bigInteger0;
      numberArray3[2] = (Number) 8.0;
      numberArray3[3] = (Number) 8.0;
      numberArray3[4] = (Number) 8.0;
      numberArray3[5] = (Number) bigInteger0;
      numberArray3[6] = (Number) lineRenderer3D0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[7];
      numberArray4[0] = (Number) 8.0;
      numberArray4[1] = (Number) 12.0;
      numberArray4[2] = (Number) 12.0;
      numberArray4[3] = (Number) lineRenderer3D0.ZERO;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      numberArray4[4] = (Number) 5;
      numberArray4[5] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray4[6] = (Number) 8.0;
      numberArray0[3] = numberArray4;
      Number[][] numberArray5 = new Number[4][8];
      numberArray5[0] = numberArray1;
      numberArray5[1] = numberArray3;
      numberArray5[2] = numberArray2;
      numberArray5[3] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray5);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Ry0;G4DBf=72A", spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2504);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D rectangle2D0 = null;
      ValueAxis valueAxis0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      statisticalLineAndShapeRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultMultiValueCategoryDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.getRowCount();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.calculateBarL0L1((double) statisticalLineAndShapeRenderer0.ZERO, 0.0, 1.0F);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(false, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer1.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, (-1), 10, false, 0.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, true);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      defaultKeyedValues2DDataset0.fireSelectionEvent();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, (-2263), (-2433), false, 10, 0.0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.getLegendItem(4, 4);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.getRowCount();
      defaultKeyedValues2DDataset0.fireSelectionEvent();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.calculateBarL0L1((-2018.8765995065974), 2803.05636, (-766.682));
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getBaseShapesVisible();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 10, 10, false, (double) minMaxCategoryRenderer0.ZERO, 1.0F, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      PolarPlot polarPlot0 = new PolarPlot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.getRowCount();
      defaultKeyedValues2DDataset0.fireSelectionEvent();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 0, (-2418), false, 0.0, 103.5, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.getRowCount();
      defaultKeyedValues2DDataset0.fireSelectionEvent();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 10, 10, false, (double) minMaxCategoryRenderer0.ZERO, 1.0F, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, minMaxCategoryRenderer0);
      Vector<CategoryPointerAnnotation> vector0 = new Vector<CategoryPointerAnnotation>();
      defaultMultiValueCategoryDataset0.add(vector0, true, false);
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      minMaxCategoryRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D1, categoryMarker0, rectangle2D_Double0);
      assertEquals(1.05, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      JFreeChart jFreeChart0 = new JFreeChart("[aT=f|mt_cU1 6{?#5", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2247, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      LogAxis logAxis0 = new LogAxis("[aT=f|mt_cU1 6{?#5");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      combinedDomainXYPlot0.getDataset();
      bufferedImageRenderingSource0.getSelectionState((Dataset) null);
      bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(0, 10);
      Rectangle rectangle0 = new Rectangle(dimension0);
      combinedDomainCategoryPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, lineRenderer3D0.ZERO, (Comparable) null, 10, 1, 10, 10, plotOrientation0);
      waterfallBarRenderer0.getItemLabelGenerator(83, 0, false);
      waterfallBarRenderer0.setSeriesItemLabelGenerator(314, (CategoryItemLabelGenerator) null, true);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      minMaxCategoryRenderer0.getPlot();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawBackground(graphics2D0, (CategoryPlot) null, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      subCategoryAxis0.setMinorTickMarkInsideLength(0.0F);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getRangeAxis(combinedDomainCategoryPlot0, (-2));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.equals("Null 'orientation' argument.");
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      combinedDomainCategoryPlot0.removeChangeListener(combinedDomainCategoryPlot1);
      jDBCCategoryDataset0.setValue((Number) 0.05, (Comparable) true, (Comparable) true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      levelRenderer0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, true);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, (-563.35817461), (String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, waterfallBarRenderer0);
      ganttRenderer0.getRangeAxis(categoryPlot0, 270);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.equals(categoryCrosshairState0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      jDBCCategoryDataset0.setValue((Number) 1.0E-8, (Comparable) "", (Comparable) true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Color color0 = (Color)boxAndWhiskerRenderer0.getArtifactPaint();
      assertEquals(0, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesFillPaint(true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getLegendItem((-1), (-1));
      ganttRenderer0.setStartPercent((-1));
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("VD&*uZ$ib3]ARgz");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ganttRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 3);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.equals("Null 'orientation' argument.");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Month month0 = Month.MARCH;
      LocalDate localDate0 = MockLocalDate.of(555, month0, 10);
      barRenderer3D0.equals(localDate0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      jDBCCategoryDataset0.setValue(combinedDomainCategoryPlot1.ZERO, (Comparable) 0.0F, (Comparable) false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot1, jDBCCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      stackedAreaRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis3D0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedAreaRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getOrientation();
      double[][] doubleArray0 = new double[8][3];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 0.05;
      doubleArray1[1] = (double) 1.0F;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) 2.0F;
      doubleArray1[4] = (double) 10;
      doubleArray1[5] = (double) 2.0F;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = 3804.82119052;
      doubleArray2[1] = (double) 2.0F;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = 0.05;
      doubleArray3[1] = 255.0;
      doubleArray3[2] = (double) 0.0F;
      doubleArray3[3] = 0.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = (double) 2.0F;
      doubleArray4[1] = 0.2;
      doubleArray4[2] = 0.2;
      doubleArray4[3] = 3804.82119052;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[1];
      doubleArray5[0] = (double) levelRenderer0.ZERO;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[8];
      doubleArray6[0] = (double) 1.0F;
      doubleArray6[1] = (double) 1.0F;
      doubleArray6[2] = 0.0;
      doubleArray6[3] = (-135.4221097809);
      doubleArray6[4] = 0.05;
      doubleArray6[5] = (double) 10;
      doubleArray6[6] = (double) 10;
      doubleArray6[7] = 0.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[4];
      doubleArray7[0] = 255.0;
      doubleArray7[1] = (double) 0.0F;
      doubleArray7[2] = (double) 0.0F;
      doubleArray7[3] = 0.0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[5];
      doubleArray8[0] = (double) stackedAreaRenderer0.ZERO;
      doubleArray8[1] = 0.05;
      doubleArray8[2] = (double) 10;
      doubleArray8[3] = 0.0;
      doubleArray8[4] = 25.5;
      doubleArray0[7] = doubleArray8;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, categoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setRenderer(65535, (CategoryItemRenderer) waterfallBarRenderer0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, 1.0F, 1.0F, 10, 1.0F, 10, plotOrientation0);
      // Undeclared exception!
      waterfallBarRenderer0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle rectangle0 = new Rectangle(10, 10);
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0F, 0.0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2104, 10, chartRenderingInfo0);
      Rectangle2D rectangle2D0 = colorConvertOp0.getBounds2D(bufferedImage0);
      Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, (Number[][]) null, (Number[][]) null);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.initialise(graphics2D1, rectangle2D0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineRenderer3D0.ZERO, (double) lineRenderer3D0.ZERO, 12.0, 8.0, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      lineRenderer3D1.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineRenderer3D0.ZERO, (double) lineRenderer3D0.ZERO, 12.0, 8.0, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("^L@");
      lineRenderer3D1.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean0);
      
      lineRenderer3D1.setItemMargin((double) lineRenderer3D0.ZERO);
      assertFalse(lineRenderer3D0.equals((Object)lineRenderer3D1));
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, cyclicNumberAxis0, minMaxCategoryRenderer0);
      minMaxCategoryRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, (CategoryAxis) null, categoryMarker0, (Rectangle2D) null);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, 1.0F, 1.0F, 10, 1.0F, 10, plotOrientation0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, minMaxCategoryRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", numberAxis3D0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, false);
      jFreeChart0.createBufferedImage(10, 15);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(0, 15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle rectangle0 = new Rectangle(13, 10);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle0, 1.0F, waterfallBarRenderer1.DEFAULT_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer0 = Layer.BACKGROUND;
      Rectangle rectangle0 = new Rectangle(549, 549);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlainDocument plainDocument0 = new PlainDocument();
      Element element0 = plainDocument0.getDefaultRootElement();
      GlyphView glyphView0 = new GlyphView(element0);
      glyphView0.getForeground();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0, 1333.0259169076617, (Paint) null, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(12.0, 8.0, lineRenderer3D0.ZERO, (double) lineRenderer3D0.ZERO, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_STROKE);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(6, 8, 6);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("qUR%h'A", stringArray0);
      ValueMarker valueMarker0 = new ValueMarker(0.0, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        levelRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, symbolAxis0, valueMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Number[][] numberArray0 = new Number[3][0];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) stackedBarRenderer0.ZERO;
      numberArray1[1] = (Number) 3.0;
      numberArray1[2] = (Number) 0.2;
      double double0 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      numberArray1[3] = (Number) 3.0;
      numberArray1[4] = (Number) stackedBarRenderer0.ZERO;
      numberArray1[5] = (Number) 3.0;
      numberArray1[6] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[4];
      numberArray2[0] = (Number) 3.0;
      numberArray2[1] = (Number) stackedBarRenderer0.ZERO;
      numberArray2[2] = (Number) 0.2;
      numberArray2[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[2];
      numberArray3[0] = (Number) 3.0;
      numberArray3[1] = (Number) 3.0;
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Float float0 = new Float((-1366.3191F));
      defaultKeyedValues2DDataset0.addValue((Number) float0, (Comparable) float0, (Comparable) 10);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals((-1366.319091796875), range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(0.0, (-331.645), 0.0, 0.0, 0.2, (double) groupedStackedBarRenderer0.ZERO);
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0, 90.0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PlotOrientation plotOrientation1 = PlotOrientation.HORIZONTAL;
      statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation1, defaultKeyedValues2DDataset0, (-3455), 10, true, 2.0, (-1.0), true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JMenuItem jMenuItem0 = new JMenuItem();
      Insets insets0 = new Insets(1225, 221, 11, (-168));
      EmptyBorder emptyBorder0 = new EmptyBorder(insets0);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jMenuItem0, (Border) emptyBorder0, 366, (-2314), 221, 973);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2083.310890527889, (String) null);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis3D0, cyclicNumberAxis0, defaultKeyedValues2DDataset0, 851, (-3222), true, (CategoryItemRendererState) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CategoryCrosshairState categoryCrosshairState1 = new CategoryCrosshairState();
      MockDate mockDate0 = new MockDate(5224, 234, 2086, 15, 657);
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(mockDate0, mockDate0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'hotspot' argument.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, (-2164.93170264), "");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, cyclicNumberAxis0, categoryStepRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1130, 0, 10, 15, 19, 4, true, true, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(13, 1172, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      categoryStepRenderer0.drawLine(graphics2D0, categoryStepRenderer_State0, plotOrientation0, 2808.5561, 0.2, 0.0F, 0.0);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(0.0, 265.098902, 1.0F, 0.0, 34.36778464369571, (-4.0));
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      waterfallBarRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D0, 10, categoryStepRenderer0.DEFAULT_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      assertEquals(265.098902, rectangle2D0.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SystemColor systemColor0 = SystemColor.controlHighlight;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Stroke stroke0 = combinedDomainCategoryPlot0.getOutlineStroke();
      // Undeclared exception!
      try { 
        levelRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, (Rectangle2D) null, 1218.694, systemColor0, stroke0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, numberAxis3D0, minMaxCategoryRenderer1);
      JFreeChart jFreeChart0 = new JFreeChart("", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      jFreeChart0.createBufferedImage(10, 768);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.getLegendItem(1506, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, numberAxis3D0, minMaxCategoryRenderer1);
      JFreeChart jFreeChart0 = new JFreeChart("", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 768);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      statisticalLineAndShapeRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, 10, (-1448), true, 1.0F, 194.0, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("G?f+", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2101, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 18.063433F, 1533.04F, (-5.0F));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_PAINT);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryPlot categoryPlot0 = waterfallBarRenderer0.getPlot();
      LogAxis logAxis0 = new LogAxis("");
      ValueMarker valueMarker0 = new ValueMarker((-1.6239214261269435), piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      levelRenderer0.drawRangeMarker(graphics2D0, (CategoryPlot) null, logAxis0, valueMarker0, rectangle2D_Float0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      waterfallBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, rectangle2D_Float0, piePlot3D0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10.0F, 142.16338332396046, 0.05, 8.0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      LegendItem legendItem0 = lineRenderer3D0.getLegendItem(10, 15);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("G?f+", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2101, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D rectangle2D0 = null;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 18.063433F, 1348.4596F, (-5.0F));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_PAINT);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryPlot categoryPlot0 = waterfallBarRenderer0.getPlot();
      LogAxis logAxis0 = new LogAxis("");
      ValueMarker valueMarker0 = new ValueMarker(0.0, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        levelRenderer0.drawRangeMarker(graphics2D0, (CategoryPlot) null, logAxis0, valueMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[6][4];
      Number[] numberArray1 = new Number[2];
      numberArray1[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[0];
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[2];
      numberArray3[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray3[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[5];
      numberArray4[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray4[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray4[2] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray4[3] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray4[4] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[2];
      numberArray5[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray5[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[5];
      numberArray6[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray6[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray6[2] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray6[3] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      BigInteger bigInteger0 = BigInteger.TEN;
      numberArray6[4] = (Number) bigInteger0;
      numberArray0[5] = numberArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) 0.2, (Comparable) 3.0, (Comparable) waterfallBarRenderer0.ZERO);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals(0.2, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("c3M1 RR.0T-8Op^");
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        areaRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, subCategoryAxis0, numberAxis3D0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.setRect(894.3, 894.3, 894.3, 894.3);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      rectangle2D_Double0.add((Point2D) point0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1081.2336, 1664.302293);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = (-597);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, categoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        lineRenderer3D0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, categoryPlot0, (CategoryAxis) null, cyclicNumberAxis0, taskSeriesCollection0, 10, 2940, false, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2940, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, rectangle2D_Double0, 1.0F, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, rectangle2D_Double0, (double) minMaxCategoryRenderer0.ZERO, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Number[][] numberArray0 = new Number[1][1];
      Number[] numberArray1 = new Number[9];
      numberArray1[0] = (Number) 10;
      double double0 = LineRenderer3D.DEFAULT_X_OFFSET;
      numberArray1[1] = (Number) 12.0;
      numberArray1[2] = combinedDomainCategoryPlot0.ZERO;
      numberArray1[3] = (Number) 10;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(false);
      numberArray1[4] = (Number) 1.0F;
      numberArray1[5] = (Number) 1.0F;
      Float float0 = new Float(0.0);
      numberArray1[6] = (Number) float0;
      numberArray1[7] = (Number) 1.0F;
      numberArray1[8] = (Number) 1.0F;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      minMaxCategoryRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JFreeChart jFreeChart0 = new JFreeChart("RfY", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, polarPlot0, false);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = polarChartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryStepRenderer0.createState(plotRenderingInfo0);
      categoryStepRenderer0.createState(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(14, (-1479));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(0.5F, 8.0772F, renderingHints0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(768, (-1479), (double) 10, 0.2, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (768) and height (-1479) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(minMaxCategoryRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      RectangleAnchor.coordinates(rectangle2D_Double0, rectangleAnchor0);
      rectangleInsets0.trim(rectangle2D_Double0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.LEFT;
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Double0, rectangle2D_Double0, rectangleInsets0, lengthAdjustmentType1, rectangleAnchor1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      statisticalLineAndShapeRenderer0.lookupLegendShape((-1717));
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_PAINT);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = (StandardCategorySeriesLabelGenerator)statisticalBarRenderer0.getLegendItemLabelGenerator();
      lineRenderer3D1.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      RectangleAnchor.coordinates(rectangle2D_Float0, rectangleAnchor0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Point2D point2D0 = waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation1, rectangle2D_Float0, rectangle2D_Float0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "TextAnchor.BASELINE_RIGHT";
      stringArray0[1] = "TextAnchor.BASELINE_RIGHT";
      stringArray0[2] = "TextAnchor.BASELINE_RIGHT";
      SymbolAxis symbolAxis0 = new SymbolAxis("TextAnchor.BASELINE_RIGHT", stringArray0);
      symbolAxis0.clone();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createHotSpotShape((Graphics2D) null, rectangle2D_Float0, (CategoryPlot) null, categoryAxis0, symbolAxis0, defaultKeyedValues2DDataset0, 10, (-1), true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, subCategoryAxis0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, meterPlot0.DEFAULT_BACKGROUND_PAINT, meterPlot0.DEFAULT_OUTLINE_PAINT, waterfallBarRenderer0.DEFAULT_PAINT);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.EXPAND;
      Rectangle2D rectangle2D0 = rectangleInsets0.createAdjustedRectangle(rectangle2D_Float0, lengthAdjustmentType1, lengthAdjustmentType0);
      RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart(" nohref=\"nohref\"", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte) (-126);
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(" nohref=\"nohref\"");
      JPopupMenu.Separator jPopupMenu_Separator0 = new JPopupMenu.Separator();
      Insets insets0 = new Insets(10, 10, (-2914), 3);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      MatteBorder matteBorder0 = new MatteBorder(insets0, imageIcon0);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jPopupMenu_Separator0, (Border) matteBorder0, 225, (int) (byte)5, 3, (-846));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      levelRenderer0.getItemMiddle(10, 270, defaultCategoryDataset0, extendedCategoryAxis0, rectangle0, rectangleEdge0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, " nohref=\"nohref\"");
      TaskSeriesCollection taskSeriesCollection1 = new TaskSeriesCollection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("G?f+", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2089, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D rectangle2D0 = null;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0.4, "G?f+");
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(piePlot3D0.DEFAULT_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("%!n+");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = stackedBarRenderer3D0.createHotSpotBounds((Graphics2D) null, rectangle2D0, categoryPlot0, categoryAxis0, numberAxis0, defaultKeyedValues2DDataset0, 3, 10, false, categoryItemRendererState0, rectangle2D0);
      assertNull(rectangle2D1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      RectangleInsets rectangleInsets0 = Title.DEFAULT_PADDING;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) waterfallBarRenderer0;
      objectArray0[1] = (Object) stackedBarRenderer3D0;
      objectArray0[2] = (Object) rectangleInsets0;
      objectArray0[3] = (Object) rectangleAnchor0;
      JTree jTree0 = new JTree(objectArray0);
      synthTreeUI0.getClosestPathForLocation(jTree0, 10, (-98));
      synthTreeUI0.getPathBounds(jTree0, (TreePath) null);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_PAINT);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      lineRenderer3D0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      Object object0 = lineRenderer3D0.clone();
      boolean boolean1 = lineRenderer3D0.equals(object0);
      assertFalse(boolean1 == boolean0);
      
      waterfallBarRenderer0.setBase((double) statisticalLineAndShapeRenderer0.ZERO);
      assertTrue(lineRenderer3D0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      DrawingSupplier drawingSupplier0 = waterfallBarRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Double double0 = new Double(0.0);
      jDBCCategoryDataset0.addValue((Number) double0, (Comparable) double0, (Comparable) 12.0);
      lineRenderer3D0.findRangeBounds(jDBCCategoryDataset0);
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_PAINT, waterfallBarRenderer0.DEFAULT_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(60, 647, false);
      waterfallBarRenderer1.setBaseURLGenerator((CategoryURLGenerator) null, true);
      waterfallBarRenderer0.setFirstBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      waterfallBarRenderer1.setPositiveBarPaint(waterfallBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      lineRenderer3D0.clone();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.getFillBox();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      double[][] doubleArray0 = new double[4][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      stackedBarRenderer3D0.setDataBoundsIncludesVisibleSeriesOnly(false);
      stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      stackedBarRenderer3D0.getLegendItems();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      boolean boolean0 = stackedBarRenderer3D0.equals(layeredBarRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(12.0, 12.0, lineRenderer3D0.ZERO, 12.0, lineRenderer3D0.DEFAULT_WALL_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      double[][] doubleArray0 = new double[1][2];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 8.0;
      doubleArray1[1] = 12.0;
      doubleArray1[2] = 12.0;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (double) lineRenderer3D0.ZERO;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      JTable jTable0 = new JTable();
      Rectangle rectangle0 = jTable0.getCellRect(165, 165, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("3u,d# ([9");
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.hitTest(12.0, 1496.0, (Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, subCategoryAxis0, (ValueAxis) null, defaultIntervalCategoryDataset1, (-4034), 0, true, (CategoryItemRendererState) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      statisticalBarRenderer0.setBaseLegendTextFont(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.2, true);
      stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      stackedBarRenderer3D0.getLegendItems();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setDrawOutlines(true);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      JFreeChart jFreeChart0 = new JFreeChart("", polarPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = new Point(768, 1453);
      Point point1 = chartPanel0.getLocation(point0);
      Rectangle rectangle0 = new Rectangle(point1);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getItemMiddle(3.0, 0.2, defaultKeyedValues2DDataset0, subCategoryAxis0, rectangle0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension((-3326), (-3326));
      Rectangle rectangle0 = new Rectangle(dimension0);
      numberAxis3D0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-1109.3347174), 280.0536182);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      minMaxCategoryRenderer0.clone();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-1.0F), 1348.4596F, 10, 1.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      waterfallBarRenderer1.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      LabelBlock labelBlock0 = new LabelBlock("(Nvpb3TaE$$:t+%|n", waterfallBarRenderer1.DEFAULT_VALUE_LABEL_FONT, statisticalLineAndShapeRenderer0.DEFAULT_PAINT);
      RectangleAnchor rectangleAnchor1 = labelBlock0.getTextAnchor();
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Float0, rectangleAnchor1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation2 = combinedDomainXYPlot0.getOrientation();
      Point2D point2D1 = waterfallBarRenderer1.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation2, rectangle2D0, rectangle2D0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      assertNotSame(point2D1, point2D0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      minMaxCategoryRenderer0.getDrawingSupplier();
      try { 
        minMaxCategoryRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 1348.4596F, 0.1F, 18.063433F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Point2D point2D0 = waterfallBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      vectorRenderer0.findRangeBounds(defaultTableXYDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("", (Range) null);
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 0.025);
      waterfallBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, moduloAxis0, intervalMarker0, rectangle2D_Float0);
      Point2D point2D1 = RectangleAnchor.coordinates(rectangle2D_Float0, rectangleAnchor0);
      assertFalse(point2D1.equals((Object)point2D0));
      
      Point2D.Double point2D_Double0 = (Point2D.Double)waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(1370.523027420044, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("G?f+", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2101, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 18.063433F, 1348.4596F, (-5.0F));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(piePlot3D0.DEFAULT_LABEL_PAINT, piePlot3D0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_PAINT);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Point2D point2D0 = waterfallBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, rectangle2D_Float0, piePlot3D0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      Point2D point2D1 = RectangleAnchor.coordinates(rectangle2D_Float0, rectangleAnchor0);
      assertFalse(point2D1.equals((Object)point2D0));
      
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      Point2D.Double point2D_Double0 = (Point2D.Double)waterfallBarRenderer1.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, rectangle2D_Float0, piePlot3D0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(9.063432693481445, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      String string0 = "D";
      JFreeChart jFreeChart0 = new JFreeChart("D", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise(graphics2D0, defaultCaret0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.createHotSpotShape(graphics2D0, defaultCaret0, combinedDomainCategoryPlot0, categoryAxis0, dateAxis0, (CategoryDataset) null, 821, 0, true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 1359.0F, 0.1F, 18.063433F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      waterfallBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      RectangleAnchor.coordinates(rectangle2D_Float0, rectangleAnchor0);
      waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("tFv3yyAM+^GDGd %u8HA", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2029, 2029);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      double[][] doubleArray0 = new double[0][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      statisticalBarRenderer0.getPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 2029, "Year outside valid range.");
      // Undeclared exception!
      try { 
        lineRenderer3D0.hitTest(10, 10, graphics2D0, (Rectangle2D) null, (CategoryPlot) null, categoryAxis3D0, cyclicNumberAxis0, taskSeriesCollection0, 0, (-929), true, (CategoryItemRendererState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      double[][] doubleArray0 = new double[4][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      stackedBarRenderer3D0.getSeriesURLGenerator(3749);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesURLGenerator((-2749), (CategoryURLGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double[][] doubleArray0 = new double[4][1];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray1[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray1[2] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray1[3] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray2[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray2[2] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray2[3] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray2[4] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray2[5] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[2] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[3] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[4] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = 2.0;
      doubleArray4[1] = 969.49391;
      doubleArray4[2] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray4[3] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray4[4] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray4[5] = 0.0;
      doubleArray4[6] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[3] = doubleArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesURLGenerator((-1494), (CategoryURLGenerator) standardCategoryURLGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double double0 = 2.0E8;
      lineRenderer3D0.getBaseItemLabelGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesItemLabelGenerator((-5850), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      String string0 = "tFv3yHA<+GDGd % 8HA";
      JFreeChart jFreeChart0 = new JFreeChart("tFv3yHA<+GDGd % 8HA", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D rectangle2D0 = null;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F);
      TaskSeriesCollection taskSeriesCollection1 = new TaskSeriesCollection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, taskSeriesCollection0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension((-3326), (-3326));
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle2D rectangle2D0 = numberAxis3D0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-1109.3347174), 280.0536182);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot1, numberAxis3D0, intervalMarker0, rectangle2D0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      double[][] doubleArray0 = new double[5][8];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 1.0F;
      doubleArray1[1] = (double) 10;
      doubleArray1[2] = 0.2;
      doubleArray1[3] = (double) 500;
      doubleArray1[4] = 7.2E7;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) (-3326);
      doubleArray2[1] = (double) 0.5F;
      doubleArray2[2] = 1.0;
      doubleArray2[3] = (double) waterfallBarRenderer0.ZERO;
      doubleArray2[4] = 6.0;
      doubleArray2[5] = (-1109.3347174);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (double) (-3326);
      doubleArray3[1] = 0.05;
      doubleArray3[2] = (-3334.0);
      doubleArray3[3] = 0.0;
      doubleArray3[4] = 7.2E7;
      doubleArray3[5] = (double) 1.0F;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = 0.05;
      doubleArray4[1] = 0.05;
      doubleArray4[2] = 0.05;
      doubleArray4[3] = (double) waterfallBarRenderer0.ZERO;
      doubleArray4[4] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[6];
      doubleArray5[0] = (double) 1.0F;
      doubleArray5[1] = (double) 15;
      doubleArray5[2] = (-3334.0);
      doubleArray5[3] = (double) (-3326);
      doubleArray5[4] = (double) 1.0F;
      doubleArray5[5] = (double) waterfallBarRenderer0.ZERO;
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.hitTest((-2392.666), (-3326), graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis3D0, defaultIntervalCategoryDataset0, 0, 0, false, (CategoryItemRendererState) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("+=%^K");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0);
      TaskSeriesCollection taskSeriesCollection1 = new TaskSeriesCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, waterfallBarRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, taskSeriesCollection1, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("tFv3yyAM+GDGd %u8HA", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2070, 2070);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D rectangle2D0 = null;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("r");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      bufferedImage0.getSource();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 1.0F, 10, 10);
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(0.2, 0.08, graphics2D0, rectangle2D_Float0, combinedDomainCategoryPlot0, subCategoryAxis0, cyclicNumberAxis0, taskSeriesCollection0, 10, 4, false, (CategoryItemRendererState) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.setRect(894.3, 894.3, 894.3, 894.3);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      rectangle2D_Double0.add((Point2D) point0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Graphics2D graphics2D0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1081.2336, 1664.302293);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, categoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, categoryPlot0, (CategoryAxis) null, cyclicNumberAxis0, taskSeriesCollection0, (-597), 0, true, categoryItemRendererState0, rectangle2D_Double0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension((-3326), (-3326));
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle2D rectangle2D0 = numberAxis3D0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-1109.3347174), 280.0536182);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot1, numberAxis3D0, intervalMarker0, rectangle2D0);
      lineRenderer3D1.getItemLineVisible(10, (-3326));
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-3326), (-3326), 10, 10, 500, 0, false, true, false, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = lineAndShapeRenderer0.initialise(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot1, jDBCCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double(0, 10, 0, 0);
      Rectangle2D.Double rectangle2D_Double2 = new Rectangle2D.Double(0.2, (-3.0), 2.0F, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      stackedAreaRenderer0.drawAnnotations(graphics2D0, rectangle2D_Double0, extendedCategoryAxis0, numberAxis3D0, layer0, plotRenderingInfo0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0F, true);
      LegendItemCollection legendItemCollection0 = stackedBarRenderer3D0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("tFv3yyAM+GDGd %u8HA", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("tFv3yyAM+GDGd %u8HA");
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(10, 10);
      Rectangle rectangle0 = new Rectangle(dimension0);
      meterPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-2123.6453917598624), 0.05);
      TaskSeriesCollection taskSeriesCollection1 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("tFv3yyAM+GDGd %u8HA");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection1, categoryAxis3D0, numberAxis3D0, statisticalLineAndShapeRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      IntervalMarker intervalMarker1 = new IntervalMarker(2.0F, 2.0F);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, 1.0F, 0.5F, 0, 0.0F, 0.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.BOTTOM_LEFT;
      waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle0, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(taskSeriesCollection1);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Layer layer0 = Layer.BACKGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getArtifactPaint();
      boolean boolean0 = lineRenderer3D0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("tFv3yyAM+GDGd %u8HA", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2070, 2070);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("r");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      TaskSeriesCollection taskSeriesCollection1 = new TaskSeriesCollection();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection1, subCategoryAxis0, cyclicNumberAxis0, levelRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      IntervalMarker intervalMarker0 = new IntervalMarker(3.0, 500);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{> .@x");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D(")i~4AtFN0 *@@}nVJ");
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(15, (-3568));
      Rectangle rectangle0 = new Rectangle(dimension0);
      numberAxis3D0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-4945.4599961), 10);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      lineRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertTrue(combinedDomainCategoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{> .@x");
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(15, 171);
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double2 = new Rectangle2D.Double(0.2, (-3.0), 2.0F, 171);
      lineAndShapeRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, rectangle2D_Double2, 0.2, fastScatterPlot0.DEFAULT_GRIDLINE_PAINT, waterfallBarRenderer1.DEFAULT_OUTLINE_STROKE);
      lineAndShapeRenderer0.getUseFillPaint();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)waterfallBarRenderer1.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Double0, rectangle0, numberAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(11.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(15, 171);
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle2D rectangle2D0 = numberAxis3D0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = minMaxCategoryRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      PolarPlot polarPlot0 = new PolarPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot1 = new PolarPlot(yIntervalSeriesCollection0, valueAxis0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot1.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      minMaxCategoryRenderer0.setAutoPopulateSeriesPaint(false);
      statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 10, 10, true, 0.0, 10, true);
      StandardTickUnitSource standardTickUnitSource0 = new StandardTickUnitSource();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      Color color0 = Color.white;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(polarPlot1.DEFAULT_OUTLINE_PAINT, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, valueAxis0.DEFAULT_TICK_MARK_PAINT);
      waterfallBarRenderer0.setFirstBarPaint(statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT);
      assertTrue(statisticalLineAndShapeRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(15, 171);
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle2D rectangle2D0 = numberAxis3D0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 567.0377895977);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      lineRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot1, numberAxis3D0, intervalMarker0, rectangle2D0);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = minMaxCategoryRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("3,/eBiaz~O\"WJ]|*&");
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 1, 3, true, (-117.9199379), 0.0, false);
      StandardTickUnitSource standardTickUnitSource0 = new StandardTickUnitSource();
      LogAxis logAxis0 = new LogAxis();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(3, (-6440));
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Layer layer0 = Layer.FOREGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      stackedAreaRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis3D0, valueAxis0, layer0, plotRenderingInfo0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("3,/eBiaz~O\"WJ]|*&");
      double double0 = levelRenderer0.calculateSeriesWidth((double) stackedAreaRenderer0.ZERO, categoryAxis3D1, 500, 3);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(15, 171);
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle2D rectangle2D0 = numberAxis3D0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      rectangle2D0.createUnion(rectangle2D_Double0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      lineAndShapeRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, rectangle2D_Double0, 1.0F, jFreeChart0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = lineAndShapeRenderer0.getUseFillPaint();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, (Shape) null, jDBCCategoryDataset0, 10, 10, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      double[][] doubleArray0 = new double[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      stackedBarRenderer3D0.getLegendItems();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 14, 14, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineRenderer3D0.ZERO, 12.0, 12.0, (double) lineRenderer3D0.ZERO, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_STROKE);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      Line2D.Float line2D_Float1 = new Line2D.Float(0.0F, 10, 0.0F, 1094.59F);
      Rectangle2D rectangle2D0 = line2D_Float1.getBounds2D();
      line2D_Float0.y1 = 0.0F;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0F, 0.0F, 0.0, (-2022.93731635938));
      rectangle2D_Double0.createUnion(rectangle2D0);
      GeneralPath generalPath0 = new GeneralPath(categoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle rectangle0 = generalPath0.getBounds();
      rectangle0.setSize(1, (-239));
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, (ValueAxis) null, rectangle0, 1084.59F, lineRenderer3D0.DEFAULT_WALL_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(15, 171);
      Rectangle rectangle0 = new Rectangle(dimension0);
      numberAxis3D0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-4.0), 0.0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertTrue(numberAxis3D0.isVisible());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineRenderer3D0.ZERO, 12.0, 12.0, (double) lineRenderer3D0.ZERO, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_STROKE);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(12.0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      Line2D.Float line2D_Float1 = new Line2D.Float(1.0F, 0.0F, Float.NEGATIVE_INFINITY, (-684.81116F));
      Rectangle2D rectangle2D0 = line2D_Float1.getBounds2D();
      IntervalMarker intervalMarker0 = new IntervalMarker(20000.0, 0.0);
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, (ValueAxis) null, categoryMarker0, rectangle2D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultBoxAndWhiskerCategoryDataset0, 10, (-1563), false, 1.0F, (double) lineRenderer3D0.ZERO, true);
      assertEquals(2, lineRenderer3D0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Dimension dimension0 = new Dimension(15, 171);
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle2D rectangle2D0 = numberAxis3D0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createUnion(rectangle2D0);
      lineAndShapeRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, rectangle2D1, 0.2, fastScatterPlot0.DEFAULT_GRIDLINE_PAINT, waterfallBarRenderer1.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = lineAndShapeRenderer0.getUseFillPaint();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      statisticalBarRenderer0.lookupLegendTextPaint(10);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 15.309351175722;
      doubleArray1[1] = (-1786.188615639012);
      doubleArray1[2] = (double) 10;
      doubleArray1[3] = (double) lineRenderer3D0.ZERO;
      doubleArray1[4] = (double) lineRenderer3D0.ZERO;
      doubleArray1[5] = 3.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = (double) 10;
      doubleArray1[8] = (double) 10;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 10, 10, false, 10, (double) stackedAreaRenderer0.ZERO);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalBarRenderer0.equals((Object) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      statisticalBarRenderer0.getToolTipGenerator((-1208), (-1208), true);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesToolTipGenerator((-1208), (CategoryToolTipGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 1005);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Martin Cordova");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      TaskSeriesCollection taskSeriesCollection1 = new TaskSeriesCollection();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, subCategoryAxis0, cyclicNumberAxis0, levelRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      Stack<ScatterRenderer> stack0 = new Stack<ScatterRenderer>();
      JTree jTree0 = new JTree(stack0);
      metalTreeUI0.getEditingPath(jTree0);
      metalTreeUI0.getPathBounds(jTree0, (TreePath) null);
      CategoryPlot categoryPlot1 = levelRenderer0.getPlot();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, (Rectangle2D) null, categoryPlot1, taskSeriesCollection1, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesFillPaint(true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getLegendItem((-1), (-1));
      ganttRenderer0.setStartPercent(1488.4315035257);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("VD&*uZ$ib3]ARgz");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ganttRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 3);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.equals("Null 'orientation' argument.");
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Month month0 = Month.MARCH;
      LocalDate localDate0 = MockLocalDate.of(555, month0, 10);
      barRenderer3D0.equals(localDate0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot1, jDBCCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      JFreeChart jFreeChart0 = new JFreeChart("", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2250);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("\"K=~g8YTLgEan|N");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, subCategoryAxis0, cyclicNumberAxis0, waterfallBarRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-538.557940268386), 5.0E-7, "");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(defaultXYDataset0, cyclicNumberAxis0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Number[][] numberArray0 = new Number[3][2];
      Number[] numberArray1 = new Number[2];
      numberArray1[0] = (Number) 500;
      numberArray1[1] = (Number) 10;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[4];
      numberArray2[0] = polarPlot0.ZERO;
      numberArray2[1] = (Number) 1.0E-8;
      numberArray2[2] = (Number) 2.0F;
      numberArray2[3] = polarPlot0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[9];
      Float float0 = new Float((float) 10);
      numberArray3[0] = (Number) float0;
      numberArray3[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray3[2] = (Number) 1.0E-8;
      numberArray3[3] = (Number) 0.05;
      numberArray3[4] = (Number) 1.0F;
      numberArray3[5] = (Number) 2.0F;
      numberArray3[6] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      double double0 = LineRenderer3D.DEFAULT_X_OFFSET;
      numberArray3[7] = (Number) 12.0;
      numberArray3[8] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultIntervalCategoryDataset0, (-354), 500, true, 0.0, (-538.557940268386), true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      lineRenderer3D0.clone();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      boolean boolean1 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupSeriesStroke(270);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(270, 10);
      Color.getHSBColor(10, 10.0F, 1.0F);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      JFreeChart jFreeChart0 = new JFreeChart("Ax{|HwUWt3[>-?ko", meterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("PRINT");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineRenderer3D0.ZERO, 12.0, 12.0, (double) lineRenderer3D0.ZERO, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_STROKE);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(12.0);
      Line2D.Float line2D_Float0 = new Line2D.Float(10, (-4335.61F), 0.0F, 10);
      Line2D.Float line2D_Float1 = new Line2D.Float(141.5F, 0.0F, 1493.4642F, (-1878.365F));
      Rectangle2D rectangle2D0 = line2D_Float1.getBounds2D();
      IntervalMarker intervalMarker0 = new IntervalMarker((-4335.61F), (-4335.61F));
      // Undeclared exception!
      try { 
        lineRenderer3D1.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, (ValueAxis) null, intervalMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.getLegendItems();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getItemMargin();
      CategoryURLGenerator categoryURLGenerator0 = levelRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupSeriesStroke(10);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addEntity((EntityCollection) null, statisticalBarRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 2518, 2518, true, (-3419.006376673), 2518);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2518, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 3.0, 0.2, 1.0F, 10, 10, 3.0, plotOrientation0);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_BACKGROUND_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      WaterfallBarRenderer waterfallBarRenderer2 = new WaterfallBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      assertTrue(stackedBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(17, 17, true);
      barRenderer3D0.setSeriesItemLabelGenerator(17, (CategoryItemLabelGenerator) null, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesShape(false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      int int0 = statisticalLineAndShapeRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryPlot0.DEFAULT_GRIDLINE_PAINT, periodAxis0.DEFAULT_TICK_MARK_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 3.0, 0.2, 0.0, 10, 8.0, (-1.0), (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupSeriesStroke((-1119));
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupPaint();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        lineRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupSeriesStroke((-1119));
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(270, 10);
      minMaxCategoryRenderer0.getGroupPaint();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      LegendItemCollection legendItemCollection0 = stackedBarRenderer3D0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      BasicStroke basicStroke0 = new BasicStroke(0.0F);
      Shape shape0 = basicStroke0.createStrokedShape(intervalBarRenderer0.DEFAULT_SHAPE);
      CategoryDataset categoryDataset0 = null;
      int int0 = 3;
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 3, 3);
      int int1 = 0;
      // Undeclared exception!
      try { 
        intervalBarRenderer0.addEntity((EntityCollection) null, shape0, slidingCategoryDataset0, 0, 0, true, 0.0F, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(valueAxis0);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      combinedRangeCategoryPlot1.DEFAULT_INSETS.createOutsetRectangle(rectangle2D0, false, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Flvd.vA0!sWWP", combinedRangeCategoryPlot1);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-709), (-709));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-709) and height (-709) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("$:[mwj", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot3D0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1857, 1857, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = minMaxCategoryRenderer0.getRangeAxis(categoryPlot0, (-709));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = valueAxis0.DEFAULT_TICK_LABEL_INSETS.createOutsetRectangle(rectangle2D0, true, true);
      minMaxCategoryRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D1);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(minMaxCategoryRenderer0.ZERO, 1590.762673757, minMaxCategoryRenderer0.ZERO, (-670.249463), minMaxCategoryRenderer0.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
      minMaxCategoryRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      minMaxCategoryRenderer0.getObjectIcon();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setItemMargin((double) minMaxCategoryRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      assertFalse(ganttRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DecimalFormat decimalFormat1 = new DecimalFormat();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setShadowPaint(stackedBarRenderer3D0.DEFAULT_PAINT);
      statisticalBarRenderer0.getSeriesToolTipGenerator(1930);
      stackedBarRenderer3D0.hasListener(meterPlot0);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(82, (CategoryToolTipGenerator) null, false);
      LegendItemCollection legendItemCollection0 = stackedBarRenderer3D0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("}QE%", decimalFormat0);
      boolean boolean0 = false;
      boolean boolean1 = true;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "}QE%";
      Number[][] numberArray0 = new Number[0][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, meterPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, 3, 1228, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      waterfallBarRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null, true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("The number of category keys does not match the number of categories in the data.", waterfallBarRenderer0.ZERO, (-477.68), 12.0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupSeriesShape((-204));
      boxAndWhiskerRenderer0.getLegendItemURLGenerator();
      boxAndWhiskerRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      boxAndWhiskerRenderer0.setItemMargin((-4321.0));
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
      boxAndWhiskerRenderer0.lookupLegendTextPaint((-30));
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 2801.9246601, 0.0, 0.0);
      Paint paint0 = xYPointerAnnotation0.getOutlinePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, paint0, xYPointerAnnotation0.DEFAULT_PAINT);
      waterfallBarRenderer0.getNegativeBarPaint();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 3, (-188));
      CategoryAxis categoryAxis0 = null;
      byte[][] byteArray0 = new byte[4][2];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)124;
      byte byte0 = (byte)2;
      byteArray1[1] = (byte)2;
      byteArray1[2] = (byte) (-127);
      byteArray1[3] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)2;
      byteArray2[1] = (byte)124;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte) (-127);
      byteArray3[1] = (byte)2;
      byteArray3[2] = (byte) (-127);
      byteArray3[3] = (byte)2;
      byteArray3[4] = (byte) (-127);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte)0;
      byteArray4[1] = (byte)2;
      byteArray4[2] = (byte)124;
      byteArray4[3] = (byte) (-42);
      byteArray4[4] = (byte)2;
      byteArray4[5] = (byte)0;
      byteArray4[6] = (byte)0;
      byteArray0[3] = byteArray4;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(1, byteArray0);
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("q0\"", (Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      Object object0 = lineRenderer3D0.clone();
      boolean boolean0 = lineRenderer3D0.equals(object0);
      assertTrue(boolean0);
      
      waterfallBarRenderer0.setNegativeItemLabelPositionFallback((ItemLabelPosition) null);
      assertTrue(lineRenderer3D0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      double double0 = 365.3086;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 365.3086;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[5] = (-1116.8509679);
      doubleArray2[6] = 0.2;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemURLGenerator();
      stackedBarRenderer3D0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      doubleArray2[7] = 12.0;
      doubleArray2[8] = 0.2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendShape(60);
      Boolean boolean0 = Boolean.TRUE;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      waterfallBarRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) standardCategoryURLGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      PiePlot3D piePlot3D0 = new PiePlot3D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'stroke' argument.");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseOutlinePaint();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        levelRenderer0.updateCrosshairValues(categoryCrosshairState0, "Null 'stroke' argument.", 1.0F, 573.0, (-1), 1.0E-5, 42.83691531626735, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
      statisticalBarRenderer0.getGradientPaintTransformer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(1393, false);
      statisticalBarRenderer0.hashCode();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = new Locale("Null 'annotation' argument.", "", "");
      DateAxis dateAxis0 = new DateAxis("i23\"*^O.Xf1!28LP0j", simpleTimeZone0, locale0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, dateAxis0, statisticalBarRenderer0);
      CategoryAxis categoryAxis0 = scatterRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      Line2D.Float line2D_Float0 = new Line2D.Float(1393, 0.0F, 10, 1.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(1);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.getItemMiddle((Comparable) null, scatterRenderer0.ZERO, (CategoryDataset) null, categoryAxis0, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DecimalFormat decimalFormat1 = new DecimalFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("}QE%", decimalFormat1);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      assertEquals("}QE%", boxAndWhiskerToolTipGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      DecimalFormat decimalFormat1 = new DecimalFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("}QE%", decimalFormat1);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      LegendItemCollection legendItemCollection0 = stackedBarRenderer3D0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      // Undeclared exception!
      try { 
        lineRenderer3D0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      scatterRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null, true);
      scatterRenderer0.setBaseLegendShape(line2D_Double0);
      scatterRenderer0.getBaseShapesFilled();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      scatterRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null, false);
      scatterRenderer0.setBaseLegendShape(line2D_Double0);
      scatterRenderer0.getBaseShapesFilled();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 365.3086;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[5] = (-1116.8509679);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 335, 335);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, slidingCategoryDataset0, 3, 4350, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.getSeriesShapesVisible(1670);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_PAINT, barRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D1.DEFAULT_PAINT);
      LineRenderer3D lineRenderer3D2 = new LineRenderer3D();
      lineRenderer3D2.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals((Object) null);
      int int0 = waterfallBarRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-1712), 2);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, slidingGanttCategoryDataset0, (-4894), 10, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      MeterPlot meterPlot0 = new MeterPlot();
      meterPlot0.getTickLabelFormat();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("}QE%", decimalFormat0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", meterPlot0.DEFAULT_LABEL_FONT, meterPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2088, 10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double1.getBounds2D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0);
      assertTrue(combinedRangeCategoryPlot0.isNotify());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(35);
      Boolean boolean0 = Boolean.valueOf(false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = waterfallBarRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      waterfallBarRenderer0.updateCrosshairValues((CategoryCrosshairState) null, boolean0, boolean0, 8.0, 620, 158.1, 12.0, plotOrientation0);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_PAINT);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(10, false);
      assertTrue(statisticalLineAndShapeRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getLegendItem(37, (-3267));
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      Minute minute0 = new Minute(mockDate0);
      Day day0 = minute0.getDay();
      Hour hour0 = new Hour(785, day0);
      RegularTimePeriod regularTimePeriod0 = hour0.previous();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (-619.615019), regularTimePeriod0, (-619.615019), statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_STROKE);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer1.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(day0);
      Line2D.Float line2D_Float0 = new Line2D.Float(677.53723F, 1.0F, 0, (-1.0F));
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, (ValueAxis) null, categoryMarker0, rectangle2D0);
      statisticalBarRenderer1.getLegendItemURLGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      AreaRendererEndType areaRendererEndType0 = stackedAreaRenderer0.getEndType();
      assertEquals("AreaRendererEndType.TAPER", areaRendererEndType0.toString());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      int int0 = 764;
      statisticalLineAndShapeRenderer0.lookupSeriesStroke(764);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) statisticalLineAndShapeRenderer0.ZERO, 10, 3.0, (-1784.32036735));
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getLegendItem(2507, (-3267));
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(3.0);
      Line2D.Float line2D_Float0 = new Line2D.Float(1.0F, (-3267), 1.0F, 0.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, (ValueAxis) null, categoryMarker0, rectangle2D0);
      assertEquals(1.0, rectangle2D0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      Object object0 = lineRenderer3D0.clone();
      boolean boolean0 = lineRenderer3D0.equals(object0);
      assertTrue(boolean0);
      
      waterfallBarRenderer0.setNegativeItemLabelPositionFallback((ItemLabelPosition) null);
      assertTrue(lineRenderer3D0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getSeriesShapesVisible(3);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, statisticalBarRenderer0.DEFAULT_PAINT);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer2 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer3 = new StatisticalBarRenderer();
      statisticalBarRenderer3.getURLGenerator((-229), (-229), true);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      waterfallBarRenderer1.setBaseURLGenerator((CategoryURLGenerator) null, true);
      waterfallBarRenderer1.setFirstBarPaint(lineRenderer3D0.DEFAULT_WALL_PAINT);
      waterfallBarRenderer1.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      lineRenderer3D0.clone();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 3, 3988);
      // Undeclared exception!
      try { 
        statisticalBarRenderer2.addEntity((EntityCollection) null, lineRenderer3D0.DEFAULT_SHAPE, slidingGanttCategoryDataset0, (-2565), (-2392), true, (double) statisticalBarRenderer3.ZERO, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      JScrollPane jScrollPane0 = new JScrollPane();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      categoryStepRenderer0.equals(integer0);
      waterfallBarRenderer0.setFirstBarPaint(categoryPlot0.DEFAULT_OUTLINE_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(categoryPlot0.DEFAULT_BACKGROUND_PAINT);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.clone();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer1.setArtifactPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendShape(60);
      Boolean boolean0 = Boolean.FALSE;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      waterfallBarRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) standardCategoryURLGenerator0);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getItemMargin();
      boolean boolean1 = waterfallBarRenderer0.equals((Object) null);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      MeterPlot meterPlot0 = new MeterPlot();
      meterPlot0.getTickLabelFormat();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("}QE%", decimalFormat0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      lineRenderer3D0.getToolTipGenerator(3, 2524, false);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null);
      assertFalse(stackedBarRenderer3D0.isDrawBarOutline());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendShape(60);
      int int0 = 1;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(defaultKeyedValues2DDataset0);
      boxAndWhiskerRenderer0.notifyListeners(rendererChangeEvent0);
      boxAndWhiskerRenderer0.getItemLabelGenerator((-1), (-1), false);
      lineRenderer3D0.setSeriesItemLabelGenerator(3, (CategoryItemLabelGenerator) null);
      lineRenderer3D0.getSeriesShapesVisible(1);
      lineRenderer3D0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = 25;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 25, 25);
      // Undeclared exception!
      try { 
        slidingGanttCategoryDataset0.getEndValue(1, 25, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      NumberAxis numberAxis0 = new NumberAxis();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, numberAxis0, rectangle0, 0.05, periodAxis0.DEFAULT_AXIS_LINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      double double0 = 365.3086;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 365.3086;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[5] = (-1116.8509679);
      doubleArray2[6] = 0.2;
      doubleArray2[7] = 12.0;
      doubleArray2[8] = 0.2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      stackedBarRenderer3D0.getBaseToolTipGenerator();
      stackedBarRenderer3D0.setSeriesToolTipGenerator(22, (CategoryToolTipGenerator) null);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 365.3086;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[5] = (-1116.8509679);
      doubleArray2[6] = 0.2;
      doubleArray2[7] = 12.0;
      doubleArray2[8] = (-1116.8509679);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D1.getSeriesToolTipGenerator((-5116));
      // Undeclared exception!
      try { 
        stackedBarRenderer3D1.setSeriesToolTipGenerator((-5116), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Locale locale0 = Locale.PRC;
      Chronology.ofLocale(locale0);
      int int0 = (-763);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator(75);
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesToolTipGenerator((-763), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-1), (-372), true);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      // Undeclared exception!
      try { 
        barRenderer3D0.setSeriesItemLabelGenerator((-372), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getSeriesShapesVisible(3);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_WALL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("PLw@l");
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      statisticalBarRenderer1.drawRangeLine((Graphics2D) null, (CategoryPlot) null, periodAxis0, rectangle0, (double) statisticalBarRenderer0.ZERO, waterfallBarRenderer0.DEFAULT_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      statisticalBarRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      statisticalBarRenderer1.getURLGenerator(1, 3, true);
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      waterfallBarRenderer0.setFirstBarPaint(statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      lineRenderer3D0.clone();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setArtifactPaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      assertTrue(boxAndWhiskerRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 365.3086;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = (double) stackedBarRenderer3D0.ZERO;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer3D0.DEFAULT_PAINT);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        waterfallBarRenderer1.setSeriesURLGenerator((-1138), (CategoryURLGenerator) standardCategoryURLGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Ce;@LA";
      stringArray0[1] = ",D\")l";
      stringArray0[2] = ",D\")l";
      stringArray0[3] = ",D\")l";
      stringArray0[4] = "Second";
      stringArray0[4] = "Second";
      stringArray0[6] = ",D\")l";
      SymbolAxis symbolAxis0 = new SymbolAxis(",D\")l", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("Second", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, false);
      int int0 = 1;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer0.createState((PlotRenderingInfo) null);
      categoryItemRendererState0.getEntityCollection();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, 10, 1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.getSeriesShapesVisible((-2228));
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D1.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      lineRenderer3D0.getSeriesURLGenerator(2342);
      waterfallBarRenderer0.setSeriesURLGenerator(60, (CategoryURLGenerator) null);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_PAINT);
      boolean boolean0 = lineRenderer3D1.getUseOutlinePaint();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      int int0 = 1;
      lineRenderer3D0.getSeriesShapesVisible(1);
      lineRenderer3D0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      Boolean boolean0 = Boolean.valueOf(false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = waterfallBarRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      waterfallBarRenderer0.updateCrosshairValues((CategoryCrosshairState) null, boolean0, boolean0, 8.0, 620, 158.1, 12.0, plotOrientation0);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("}QE%", numberFormat0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      assertTrue(stackedBarRenderer3D0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      lineRenderer3D0.findRangeBounds(jDBCCategoryDataset0);
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_PAINT, waterfallBarRenderer0.DEFAULT_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(60, 647, false);
      waterfallBarRenderer1.setBaseURLGenerator((CategoryURLGenerator) null, true);
      waterfallBarRenderer0.setFirstBarPaint(statisticalBarRenderer0.DEFAULT_PAINT);
      waterfallBarRenderer1.setPositiveBarPaint(waterfallBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      lineRenderer3D0.clone();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.getFillBox();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Ce;@LA";
      stringArray0[1] = ",D\")l";
      stringArray0[2] = ",D\")l";
      stringArray0[3] = ",D\")l";
      stringArray0[4] = "Second";
      stringArray0[5] = "Second";
      stringArray0[6] = ",D\")l";
      SymbolAxis symbolAxis0 = new SymbolAxis(",D\")l", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("Second", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, 1, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawOutline(graphics2D0, (CategoryPlot) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("CoPl2[d", 12.0, 0.0);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("", numberFormat0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-2735), (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 365.3086;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) stackedBarRenderer3D0.ZERO;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(0, 0, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer3D0.DEFAULT_WALL_PAINT);
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      waterfallBarRenderer0.setFirstBarPaint(stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      Paint paint0 = extendedCategoryAxis0.getTickLabelPaint((Comparable) 0.0);
      waterfallBarRenderer0.setPositiveBarPaint(paint0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.clone();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-918), 10, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-918) and height (10) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
      statisticalBarRenderer0.getURLGenerator(647, 647, true);
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 3.0, (double) waterfallBarRenderer0.ZERO, 3.0);
      Layer layer0 = Layer.FOREGROUND;
      waterfallBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      waterfallBarRenderer0.setFirstBarPaint(lineRenderer3D0.DEFAULT_WALL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertEquals(3, lineRenderer3D1.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(12.0, (double) lineRenderer3D0.ZERO);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.getBaseItemLabelGenerator();
      barRenderer3D0.setSeriesItemLabelGenerator(60, (CategoryItemLabelGenerator) null, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      statisticalLineAndShapeRenderer1.findRangeBounds(taskSeriesCollection0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D0.getSeriesShapesVisible(3);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D1.DEFAULT_WALL_PAINT, barRenderer3D0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      LineRenderer3D lineRenderer3D2 = (LineRenderer3D)lineRenderer3D0.clone();
      assertEquals(3, lineRenderer3D2.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      double double0 = 365.3086;
      double double1 = 0.0;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("", numberFormat0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-2735), (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      int int0 = 1;
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) lineRenderer3D0.ZERO);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, taskSeriesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.lookupSeriesStroke(100);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupPaint();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, jDBCCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      lineRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      waterfallBarRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) standardCategoryURLGenerator0);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_WALL_PAINT);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertTrue(lineRenderer3D1.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      double double0 = 365.3086;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(365.3086, 0.0);
      double[][] doubleArray0 = new double[3][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray1[1] = 365.3086;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 12.0;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 365.3086;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[5] = (-1116.8509679);
      doubleArray2[6] = 0.2;
      doubleArray2[7] = 12.0;
      doubleArray2[8] = 0.2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(647, 647, true);
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      waterfallBarRenderer0.setFirstBarPaint(lineRenderer3D0.DEFAULT_WALL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertEquals(12.0, lineRenderer3D1.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(21, 21, false);
      barRenderer3D0.setSeriesItemLabelGenerator(21, (CategoryItemLabelGenerator) null, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      statisticalLineAndShapeRenderer0.findRangeBounds(taskSeriesCollection0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.getPassCount();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D rectangle2D0 = null;
      statisticalLineAndShapeRenderer0.getPlot();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getDomainAxis((CategoryPlot) null, taskSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      boolean boolean0 = false;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.lookupSeriesStroke(756);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupPaint();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis((CategoryPlot) null, jDBCCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      statisticalLineAndShapeRenderer0.findRangeBounds(taskSeriesCollection0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      barRenderer3D0.clone();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryStepRenderer0.createState(plotRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(true);
      categoryStepRenderer1.setStagger(true);
      groupedStackedBarRenderer0.getPassCount();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
      JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo1);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D rectangle2D0 = null;
      statisticalLineAndShapeRenderer0.getPlot();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getDomainAxis((CategoryPlot) null, taskSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (-1610.75), statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendShape(60);
      Boolean boolean0 = Boolean.FALSE;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      waterfallBarRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) standardCategoryURLGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1457);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D rectangle2D0 = null;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'stroke' argument.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, subCategoryAxis0, cyclicNumberAxis0, lineRenderer3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, (Rectangle2D) null, categoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getLegendItem(2507, (-3267));
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
      
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("r85Z}dmx64*OC;", ringPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 586);
      bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ak");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, subCategoryAxis0, cyclicNumberAxis0, barRenderer3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      int int0 = barRenderer3D0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesPaint(4833);
      minMaxCategoryRenderer0.getGroupStroke();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getLastBarPaint();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseFillPaint(false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 4833, 3021);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis3D0, numberAxis3D0, boxAndWhiskerRenderer0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.calculateBarW0(categoryPlot0, plotOrientation0, rectangle0, categoryAxis3D0, categoryItemRendererState0, 0, (-2138));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.GroupedStackedBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      Rectangle2D rectangle2D0 = null;
      LogAxis logAxis0 = new LogAxis("&~|]~>OI~EZ");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      lineRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("&~|]~>OI~EZ", combinedDomainXYPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(0, 500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (500) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseLinesVisible(false);
      lineRenderer3D0.getLegendShape(60);
      lineRenderer3D0.getSeriesShapesVisible(1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      waterfallBarRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) standardCategoryURLGenerator0);
      waterfallBarRenderer0.setPositiveBarPaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertEquals(0, lineRenderer3D1.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.getBase();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("&%@dap", 1.0F, 0.2, (-2007.1605949332));
      Layer layer0 = Layer.BACKGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      lineRenderer3D0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D1.getRangeAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setDefaultEntityRadius(0);
      boxAndWhiskerRenderer0.getURLGenerator(0, 1669, true);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getItemOutlinePaint(0, 676, true);
      boxAndWhiskerRenderer0.setBaseLegendTextPaint(paint0);
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", dateFormat0);
      boxAndWhiskerRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      boxAndWhiskerRenderer0.getBaseItemLabelGenerator();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setMaximumItemWidth(1669);
      boolean boolean0 = false;
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupLegendTextPaint(1669);
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(defaultPolarItemRenderer0.DEFAULT_OUTLINE_PAINT);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.equals(paint0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      byte[][] byteArray0 = new byte[5][9];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-87);
      byteArray1[1] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte) (-87);
      byteArray2[2] = (byte) (-87);
      byteArray2[3] = (byte) (-87);
      byteArray2[4] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte)68;
      byteArray4[1] = (byte)0;
      byte byte0 = (byte) (-12);
      byteArray4[2] = (byte) (-12);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-12);
      byteArray5[1] = (byte)0;
      byteArray5[2] = (byte) (-87);
      byteArray5[3] = (byte) (-87);
      byteArray5[4] = (byte) (-63);
      byteArray5[5] = (byte)0;
      byteArray5[6] = (byte)0;
      byteArray5[7] = (byte) (-12);
      byteArray0[4] = byteArray5;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(332, byteArray0);
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      ColorModel colorModel0 = ColorModel.getRGBdefault();
      // Undeclared exception!
      try { 
        lookupOp0.createCompatibleDestImage((BufferedImage) null, colorModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.removeAnnotations();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setShadowPaint(stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT);
      int int0 = (-367);
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short) (-586);
      shortArray0[1] = (short)0;
      short short0 = (short) (-1);
      shortArray0[2] = (short) (-1);
      shortArray0[3] = (short)0;
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-367), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      lineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      assertTrue(lineAndShapeRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DateFormat dateFormat0 = DateFormat.getDateTimeInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("7!((==Rki_}A+#", dateFormat0, dateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1435.9655671864696, false, standardXYToolTipGenerator0);
      standardXYToolTipGenerator0.equals(candlestickRenderer0);
      candlestickRenderer0.getSeriesOutlineStroke(1305);
      statisticalBarRenderer0.setErrorIndicatorStroke((Stroke) null);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("7!((==Rki_}A+#", dateFormat0);
      categoryStepRenderer0.equals(intervalCategoryItemLabelGenerator0);
      statisticalBarRenderer0.isDrawBarOutline();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      int int0 = 0;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 2);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("DjERk%wM,IMCqUt1o", lineRenderer3D0.ZERO, (double) lineRenderer3D0.ZERO, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      lineRenderer3D0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getRangeAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      lineRenderer3D0.setAutoPopulateSeriesOutlinePaint(true);
      lineRenderer3D0.equals((Object) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      lineRenderer3D0.setItemMargin(0.2);
      assertTrue(lineRenderer3D0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("ItG;.@1Kku?5e$&[u", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot3D0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setDrawBarOutline(false);
      stackedBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      stackedBarRenderer0.getLegendItemLabelGenerator();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 1264.1373);
      ValueAxis valueAxis0 = null;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("b", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, true, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getDrawingSupplier();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.getBounds2D();
      int int0 = 1652;
      int int1 = 1;
      int[] intArray0 = new int[4];
      intArray0[0] = 10;
      intArray0[1] = 10;
      intArray0[2] = 1652;
      intArray0[3] = 1;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(1, 1, intArray0, 1652, true, 30, 1652);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // transferType must be eitherDataBuffer.TYPE_BYTE or DataBuffer.TYPE_USHORT
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-1), (-1), false);
      // Undeclared exception!
      try { 
        barRenderer3D0.setSeriesItemLabelGenerator((-1), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Color color0 = Color.orange;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, color0, color0, color0);
      String string0 = "fv#R8iZ'cW5?PK$d1c";
      CategoryAxis categoryAxis0 = new CategoryAxis("fv#R8iZ'cW5?PK$d1c");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }
}
